<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>菊（无意网上看到，未证真伪）</title>
      <link href="/posts/1353514448/"/>
      <url>/posts/1353514448/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">您好, 这里需要密码.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="36b1efcff1ecbafdfaebffc01f4765554bf4d0c1c7c6d57173621fcadf9407c7"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 山 </category>
          
          <category> 非公开 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 投资 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>男性的消费价值</title>
      <link href="/posts/4142125215/"/>
      <url>/posts/4142125215/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h2 id="男人消费价值不如狗？"><a href="#男人消费价值不如狗？" class="headerlink" title="男人消费价值不如狗？"></a>男人消费价值不如狗？</h2><p>一提到购物主力，人们首先想到的大概率是“败家娘们儿”，业内有一句话流传甚广：“抓住了女性，就抓住了消费”。  </p><p> 在很多人的印象里，消费市场根本没有“男女平等”一说。例如在逛商场时，女性的化妆品、首饰、衣着、鞋包占据<br>了好几层；相比之下，男性品牌物件的“地盘”能覆盖一两层就不错了。  </p><p>有一份刷屏的“消费市场价值排序”——在零售专家心目中，消费市场的价值从高到低依次是“少女>儿童>少妇>老人>狗>男人”，这当中，男性价值垫底，甚至连汪星人都不如。</p><p>难道“他经济”真的就不如“她经济”吗？答案是否定的，“他经济”被市场大大低估了。</p><p>其实男性是高端消费领域的中坚力量。</p><p>1、 虽然男性消费频次低，但他们的消费项目的单价却不菲。<br>2、根据《中国奢侈品网络消费白皮书》中的有关信息，网络奢侈品消费中，女性占比略高于男性，但男性的客单价比女性高6%，且奢侈品消费频次在3次及以上的男性比例也比女性高。<br>3、根据美国《福布斯》杂志评出的全球最值钱的50大品牌排行榜里，“男性专属”品牌占了近10个名额，其他以男性为主要消费群体的品牌更有32个之多。<br>4、《世界奢侈品报告蓝皮书》显示，目前男性高端产品市场在所有品类上的增长速度，都超越了女性。<br>5、 同时，男性消费者一旦关注并认可某个品牌，他的持续年限和忠诚度都远超女性。</p><h2 id="男性消费者目的明确，-迅速果断"><a href="#男性消费者目的明确，-迅速果断" class="headerlink" title="男性消费者目的明确， 迅速果断"></a>男性消费者目的明确， 迅速果断</h2><p>“男人来自火星，女人来自金星”，男女思维迥异，注定了他们消费方式的不同。<br>与女性相比，男性消费者决策耗费时间更短、耐性更低，他们不会把时间花费在筛选比较上，他们的目的更明确，如果不能快速找到需要的商品，他们宁愿放弃购买，这可以从“男女冲进商场后的路线图”中窥见一斑。</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/1591543941427.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/1591543941427.png" class="lazyload"></a></p><h3 id="男性和女性的思维差异"><a href="#男性和女性的思维差异" class="headerlink" title="男性和女性的思维差异"></a>男性和女性的思维差异</h3><table><thead><tr><th>男性</th><th>女性</th></tr></thead><tbody><tr><td>思维单一，更为专注。</td><td>多重思维，能够同时处理多件事。</td></tr><tr><td>善于进行图像和空间方面的信息处理。</td><td>依赖语言，对空间分析等不敏感。</td></tr><tr><td>逻辑思维能力更强，更为理性。</td><td>感性看待和思考问题关系。</td></tr><tr><td>“报告式”：沟通以事实为主，意图吸引他人，建立自己的身份地位。</td><td>“关系式”：分享私人感情，建立与对方的紧密关系。</td></tr><tr><td>通过冲突获取身份地位，更为反叛。</td><td>冲突会削弱亲密关系，女性会极力避免，相对顺从。</td></tr><tr><td>### 男性消费者偏好更广， 猎奇心理更重</td><td></td></tr></tbody></table><p>男性消费者的偏好随着年龄的增长而表现出趋势性的差异：年轻男性的主要消费支出集中于体育、电子、游戏，中年男性偏好会更多地向汽车、旅游、腕表等高端消费以及奢侈品领域转移，老年男性则侧重于个人保健与养生消费。此外，男性比女性更易接受新事物，猎奇的心理<br>更重，对于新兴商品接受程度更高。</p><table><thead><tr><th>年轻男性</th><th>中年男性</th><th>老年男性</th></tr></thead><tbody><tr><td>体育</td><td>汽车</td><td>健康</td></tr><tr><td>电子</td><td>旅游</td><td>养生</td></tr><tr><td>游戏</td><td>腕表</td><td></td></tr></tbody></table><h3 id="男性消费者注重品质，-很少讨价还价"><a href="#男性消费者注重品质，-很少讨价还价" class="headerlink" title="男性消费者注重品质， 很少讨价还价"></a>男性消费者注重品质， 很少讨价还价</h3><p>1、相比于女性来说，男性消费者购买商品的范围较窄，常常倾向于购买“硬性商品”，较强调“阳刚“气质。</p><p>2、 他们格外看重商品的质量和实用性，多为理性购买，不易受商品外观、环境及他人的影响，他们还注重商品的使用效果及整体质量，不太关注细节。</p><p>3、 强烈的自尊好胜心“作祟”，使得男性消费者在购物时不太注重价格问题，喜欢选购高档气派的产品，而且不愿讨价还价，忌讳别人说自己小气或所购产品“不上档次”。</p><h3 id><a href="#" class="headerlink" title></a></h3></body></html>]]></content>
      
      
      <categories>
          
          <category> 山 </category>
          
          <category> 男性 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 休闲 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一万元怎么理财呢？</title>
      <link href="/posts/3193715370/"/>
      <url>/posts/3193715370/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>读了军火哥对于不同体量的投资策略颇有感悟，下面记录下来，留待自己一步一步去验证。</p><h2 id="我们投资的目的是什么？"><a href="#我们投资的目的是什么？" class="headerlink" title="我们投资的目的是什么？"></a>我们投资的目的是什么？</h2><p>首先要明确，我们投资的目的是什么？不是跑赢通胀，不是跑赢大盘，而是赚了钱改善生活。如果赚了钱不改善生活，那不是成了葛朗台？但由于复利的存在，今天的消费会减少可用的投资金额，将影响未来的收益及消费。所以如何平衡今天的消费和明天的消费，合理规划人生不同阶段消费与投资的关系，就成了投资前我们要回答的第一个问题。</p><h2 id="正视体量"><a href="#正视体量" class="headerlink" title="正视体量"></a>正视体量</h2><p>其次要清楚，不同级别的资金水平，要实现的目标、所能实现的目标是不同的。如果你有1万块，变成100万要翻100倍；如果你有50万，变成100万只要翻一倍，难度自然不同。这是第二点。</p><p>所以，要根据自己的投资目的和资金体量综合寻找投资方向和投资方法。具体来说：</p><h2 id="可投资资金为1万级别💰"><a href="#可投资资金为1万级别💰" class="headerlink" title="可投资资金为1万级别💰"></a>可投资资金为1万级别💰</h2><p>资金量这么小的朋友应该大多是刚参加工作不久的年轻人。刚工作的年轻人很辛苦，从学校到工作有 个适应过程，收入低房租高开销大，能自给自足不用父母接济已经很了不起了，节省下来一小点积蓄去投资，就算年化100%的收益率也没什么大的意义，毕竟基数太小。这个阶段，钱用来做两件事最有意义：一是投资自己，多读书、多学习、多深造，努力提高自己的姿势水平。二是消费，提高幸福感，避免自己成为一个怨天尤人、仇恨社会的键盘侠，彻底滑向屌丝深渊。除去这两点，可以拿出一小部分资金，几千块就够了，实操股票，更多的是体会盘面波动和情绪变化，为将来积累一点经验。</p><h2 id="可投资资金为10万级别💰💰"><a href="#可投资资金为10万级别💰💰" class="headerlink" title="可投资资金为10万级别💰💰"></a>可投资资金为10万级别💰💰</h2><p>资金量在这个级别的朋友比例很高，可能是大城市年轻人工作了几年刚刚踏上正轨，也可能是小城市的中年家庭积累了多年的家庭积蓄。这个年龄，正是开销骤增的阶段，没房的要买房，买房的要改善，有些人要准备结婚，有些人结婚了准备要孩子，有些人父母身体不好医药费开支大。这个阶段，金融投资的基础是万一投资失利不会影响生活。所以有四大前提：一是已经有了自住房，且3年内没有置换/改善需要。二是工作稳定，或有稳定的收入来源。三是没有结婚、购车等大的开支计划。四是为家人特别是老人购买了消费型医疗保险/准备了足够的医疗储蓄。如果上述四点都已满足，不妨通过定投指数基金的方式积累金融资产，并将收益及时改善生活（如改善住房条件）。如果真想自己炒股也可以，建议不要超过总可投资金融资产的20%。</p><h2 id="可投资资金为100万级别💰💰💰"><a href="#可投资资金为100万级别💰💰💰" class="headerlink" title="可投资资金为100万级别💰💰💰"></a>可投资资金为100万级别💰💰💰</h2><p>资金量在这个级别的朋友主要是一二线城市高收入家庭或者二三四线城市小企业主，大多有多套住房，收入稳定生活安逸。资产结构上主要以房产为主，一线的话可能是一套自住（有改善需求），二三线的话可能有多套（租金养贷）。这个阶段，基本的生活需求已经被满足，风险已被充分考虑，金融投资的主要目标应该是平衡家庭资产结构，降低家庭资产中的房产占比（房产占比不应超过60％以降低系统性风险），同时期望获得10-15%的长期年化收益，具体投资方法上应该以可以代表中国的一揽子优质蓝筹股/指数基金/优秀的主动性基金为主（50%±20%），同时配置一定比例的固定收益产品（40%±20%），以及现金（10%）。权益类与固定收益类品种的比例根据市场估值调整，估值低权益类配置比例高，估值高固定收益类配置比例高。</p><h2 id="可投资资金为1000万级别💰💰💰💰"><a href="#可投资资金为1000万级别💰💰💰💰" class="headerlink" title="可投资资金为1000万级别💰💰💰💰"></a>可投资资金为1000万级别💰💰💰💰</h2><p>资金量在这个级别的朋友主要是一线城市高收入家庭或者二三线城市企业主，可以说是有钱人阶层。金融投资成为配置资产的一种方式，投资目的是资产的稳健增长，长期年化收益10%即可满意。我给出来的建议是：🔺人民币资产（80%±10%）：一二线城市核心区房产40%±10%，权益类30%±20%，债券类10%±10%；🔺外币资产（20%±10%）：发达国家股票15%（可用发达国家土地/房产替代），发展中国家股票5%。</p><h2 id="可投资资金为1亿级别💰💰💰💰💰"><a href="#可投资资金为1亿级别💰💰💰💰💰" class="headerlink" title="可投资资金为1亿级别💰💰💰💰💰"></a>可投资资金为1亿级别💰💰💰💰💰</h2><p>资金量在这个级别的大佬，赚钱已经不是为了改善生活，钱变成了筹码。怎么运用筹码，大佬自有逻辑，无需我再多言了。</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/ymz.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/ymz.png" class="lazyload"></a><br>​​​​​​</p></body></html>]]></content>
      
      
      <categories>
          
          <category> 投资 </category>
          
          <category> 小白 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 投资 </tag>
            
            <tag> 小白 </tag>
            
            <tag> 理财 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>查找算法-二分查找</title>
      <link href="/posts/1733554744/"/>
      <url>/posts/1733554744/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h2 id="算法思想"><a href="#算法思想" class="headerlink" title="算法思想"></a>算法思想</h2><p>二分查找也称折半查找（Binar Search)，是一种在<code>有序</code>数组中查找某一特定元素的搜索算法。<br>搜索过程：  </p><ul><li>从数组的中间开始搜索，如果中间的元素正好是要查找的元素，则搜索过程结束。</li><li>如果该值大于中间元素，则在数组大于中间的那一半查找。</li><li>如果该值小于中间元素，则在数组小于中间的那一半查找。</li><li>而且再次查找的过程回到第一步，在该部分的中间元素开始。直到找到该元素或者数组为空。</li></ul><p>其时间的复杂度为O（logn），空间复杂度o（1）</p><p>二分法很容易理解，但是细节是魔鬼，要写出一个正确的二分法不是一件容易的事情。</p><h2 id="算法实现"><a href="#算法实现" class="headerlink" title="算法实现"></a>算法实现</h2><p>首先我们了解一下其基本的实现，nums为有序数组，len为其长度，target为要寻找的目标</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">c</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 寻找一个数,如果存在返回其索引，否则返回-1。</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">binarySearch</span><span class="params">(<span class="keyword">int</span>* nums, <span class="keyword">int</span> len, <span class="keyword">int</span> target)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> left = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> right = len - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (left <= right) {</span><br><span class="line">        <span class="keyword">int</span> mid = left + (right - left) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (nums[mid] == target) {</span><br><span class="line">            <span class="keyword">return</span> mid;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] < target) {</span><br><span class="line">            left = mid + <span class="number">1</span>;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] > target) {</span><br><span class="line">            right = mid - <span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p>当然我们也要学会拒绝造轮子嘛 O(∩_∩)O  </p><p>包含这个头文件<stdlib.h>我们就可以使用库函数了。  </stdlib.h></p><p>void <em>bsearch(const void <em>key, const void *base, size_t nitems, size_t size, int (</em>compare)(const void *, const void</em>));<br>key – 要查找的元素<br>base – 指向要排序的数组的第一个元素的指针。<br>nitems – 由 base 指向的数组中元素的个数。<br>size– 数组中每个元素的大小，以字节为单位。<br>compare – 用来比较两个元素的函数，即函数指针（回调函数）  </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">c</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string"><stdlib.h></stdlib.h></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ARRAY_SIZE 5</span></span><br><span class="line"><span class="keyword">int</span> values[ARRAY_SIZE] = { <span class="number">32</span>, <span class="number">32</span>, <span class="number">32</span>, <span class="number">32</span>, <span class="number">32</span> };</span><br><span class="line"></span><br><span class="line"><span class="comment">// compare函数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmpfunc</span><span class="params">(<span class="keyword">const</span> <span class="keyword">void</span>* a, <span class="keyword">const</span> <span class="keyword">void</span>* b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> (*(<span class="keyword">int</span>*)a - *(<span class="keyword">int</span>*)b);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span>* item;</span><br><span class="line">    <span class="keyword">int</span> res;</span><br><span class="line">    <span class="keyword">int</span> key = <span class="number">32</span>;</span><br><span class="line"></span><br><span class="line">    item = (<span class="keyword">int</span>*)bsearch(&key, values, ARRAY_SIZE, <span class="keyword">sizeof</span>(<span class="keyword">int</span>), cmpfunc);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"lib index =%d\n"</span>, (<span class="keyword">int</span>)(item - values) < <span class="number">0</span> ? <span class="number">-1</span> : (<span class="keyword">int</span>)(item - values)); <span class="comment">//如果存在输出其索引，否则输出-1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (<span class="number">0</span>);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p>有时候我们可能想要最先出现的那个值，那么就需要我们把左值找出来  </p><p>寻找左侧边界</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">c</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 寻找左侧边界</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">leftBoundSearch</span><span class="params">(<span class="keyword">int</span>* nums, <span class="keyword">int</span> len, <span class="keyword">int</span> target)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (len == <span class="number">0</span>) {</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> left = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> right = len;</span><br><span class="line">    <span class="keyword">while</span> (left < right) {</span><br><span class="line">        <span class="keyword">int</span> mid = left + (right - left) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (nums[mid] == target) {</span><br><span class="line">            right = mid;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] < target) {</span><br><span class="line">            left = mid + <span class="number">1</span>;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] > target) {</span><br><span class="line">            right = mid;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (left == len) {</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">        <span class="keyword">return</span> nums[left] == target ? left : <span class="number">-1</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p>有时候我们可能想要最后出现的那个值，那么就需要我们把右值找出来  </p><p>寻找右侧边界</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">c</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 寻找右侧边界</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">rightBoundSearch</span><span class="params">(<span class="keyword">int</span>* nums, <span class="keyword">int</span> len, <span class="keyword">int</span> target)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (len == <span class="number">0</span>) {</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> left = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> right = len;</span><br><span class="line">    <span class="keyword">while</span> (left < right) {</span><br><span class="line">        <span class="keyword">int</span> mid = left + (right - left) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (nums[mid] == target) {</span><br><span class="line">            left = mid + <span class="number">1</span>;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] < target) {</span><br><span class="line">            left = mid + <span class="number">1</span>;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] > target) {</span><br><span class="line">            right = mid;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (left == <span class="number">0</span>) {</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">        <span class="keyword">return</span> nums[left - <span class="number">1</span>] == target ? (left - <span class="number">1</span>) : <span class="number">-1</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p>那么我们放到一起来体验一下把</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">c</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 使用 二分法 在数组中查找值 32 */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string"><stdio.h></stdio.h></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string"><stdlib.h></stdlib.h></span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ARRAY_SIZE 5</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> values[ARRAY_SIZE] = { <span class="number">32</span>, <span class="number">32</span>, <span class="number">32</span>, <span class="number">32</span>, <span class="number">32</span> };</span><br><span class="line"></span><br><span class="line"><span class="comment">// compare函数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmpfunc</span><span class="params">(<span class="keyword">const</span> <span class="keyword">void</span>* a, <span class="keyword">const</span> <span class="keyword">void</span>* b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> (*(<span class="keyword">int</span>*)a - *(<span class="keyword">int</span>*)b);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 寻找一个数,如果存在返回其索引，否则返回-1。</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">binarySearch</span><span class="params">(<span class="keyword">int</span>* nums, <span class="keyword">int</span> len, <span class="keyword">int</span> target)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> left = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> right = len - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (left <= right) {</span><br><span class="line">        <span class="keyword">int</span> mid = left + (right - left) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (nums[mid] == target) {</span><br><span class="line">            <span class="keyword">return</span> mid;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] < target) {</span><br><span class="line">            left = mid + <span class="number">1</span>;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] > target) {</span><br><span class="line">            right = mid - <span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">}</span><br><span class="line"><span class="comment">// 寻找左侧边界</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">leftBoundSearch</span><span class="params">(<span class="keyword">int</span>* nums, <span class="keyword">int</span> len, <span class="keyword">int</span> target)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (len == <span class="number">0</span>) {</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> left = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> right = len;</span><br><span class="line">    <span class="keyword">while</span> (left < right) {</span><br><span class="line">        <span class="keyword">int</span> mid = left + (right - left) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (nums[mid] == target) {</span><br><span class="line">            right = mid;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] < target) {</span><br><span class="line">            left = mid + <span class="number">1</span>;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] > target) {</span><br><span class="line">            right = mid;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (left == len) {</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">        <span class="keyword">return</span> nums[left] == target ? left : <span class="number">-1</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="comment">// 寻找右侧边界</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">rightBoundSearch</span><span class="params">(<span class="keyword">int</span>* nums, <span class="keyword">int</span> len, <span class="keyword">int</span> target)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (len == <span class="number">0</span>) {</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> left = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> right = len;</span><br><span class="line">    <span class="keyword">while</span> (left < right) {</span><br><span class="line">        <span class="keyword">int</span> mid = left + (right - left) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (nums[mid] == target) {</span><br><span class="line">            left = mid + <span class="number">1</span>;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] < target) {</span><br><span class="line">            left = mid + <span class="number">1</span>;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] > target) {</span><br><span class="line">            right = mid;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (left == <span class="number">0</span>) {</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">        <span class="keyword">return</span> nums[left - <span class="number">1</span>] == target ? (left - <span class="number">1</span>) : <span class="number">-1</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// main</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span>* item;</span><br><span class="line">    <span class="keyword">int</span> res;</span><br><span class="line">    <span class="keyword">int</span> key = <span class="number">112</span>;</span><br><span class="line"></span><br><span class="line">    item = (<span class="keyword">int</span>*)bsearch(&key, values, ARRAY_SIZE, <span class="keyword">sizeof</span>(<span class="keyword">int</span>), cmpfunc);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"lib index =%d\n"</span>, (<span class="keyword">int</span>)(item - values) < <span class="number">0</span> ? <span class="number">-1</span> : (<span class="keyword">int</span>)(item - values));</span><br><span class="line"></span><br><span class="line">    res = binarySearch(values, ARRAY_SIZE, key);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"std index =%d\n"</span>, res);</span><br><span class="line"></span><br><span class="line">    res = leftBoundSearch(values, ARRAY_SIZE, key);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"lft index =%d\n"</span>, res);</span><br><span class="line"></span><br><span class="line">    res = rightBoundSearch(values, ARRAY_SIZE, key);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"rgt index =%d\n"</span>, res);</span><br><span class="line">    <span class="keyword">return</span> (<span class="number">0</span>);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">lib index =2</span><br><span class="line">std index =2</span><br><span class="line">lft index =0</span><br><span class="line">rgt index =4</span><br></pre></td></tr></tbody></table></figure></div><h2 id="光说不练假把式"><a href="#光说不练假把式" class="headerlink" title="光说不练假把式"></a>光说不练假把式</h2><p>我们在leetcode上来找两个例题试试手。  </p><h3 id="34-在排序数组中查找元素的第一个和最后一个位置"><a href="#34-在排序数组中查找元素的第一个和最后一个位置" class="headerlink" title="34. 在排序数组中查找元素的第一个和最后一个位置"></a>34. 在排序数组中查找元素的第一个和最后一个位置</h3><p>给定一个按照升序排列的整数数组 nums，和一个目标值 target。找出给定目标值在数组中的开始位置和结束位置。</p><p>你的算法时间复杂度必须是 O(log n) 级别。</p><p>如果数组中不存在目标值，返回 [-1, -1]。</p><p>示例 1:</p><p>输入: nums = [5,7,7,8,8,10], target = 8<br>输出: [3,4]<br>示例 2:</p><p>输入: nums = [5,7,7,8,8,10], target = 6<br>输出: [-1,-1]</p><p>这个很明显的就是要用二分法嘛，虽然官方给了两个方法</p><p>1：线性扫描方法 </p><p>2：二分查找</p><p>但是方法一线性扫描时间复杂度肯定不满足嘛，相信用上面的例子很容易改出答案来。</p><h3 id="875-爱吃香蕉的珂珂"><a href="#875-爱吃香蕉的珂珂" class="headerlink" title="875. 爱吃香蕉的珂珂"></a>875. 爱吃香蕉的珂珂</h3><p>我们在看一个不是特别明显的例子。  </p><p>珂珂喜欢吃香蕉。这里有 N 堆香蕉，第 i 堆中有 piles[i] 根香蕉。警卫已经离开了，将在 H 小时后回来。</p><p>珂珂可以决定她吃香蕉的速度 K （单位：根/小时）。每个小时，她将会选择一堆香蕉，从中吃掉 K 根。如果这堆香蕉少于 K 根，她将吃掉这堆的所有香蕉，然后这一小时内不会再吃更多的香蕉。  </p><p>珂珂喜欢慢慢吃，但仍然想在警卫回来前吃掉所有的香蕉。</p><p>返回她可以在 H 小时内吃掉所有香蕉的最小速度 K（K 为整数）。</p><p>示例 1：</p><p>输入: piles = [3,6,7,11], H = 8<br>输出: 4<br>示例 2：</p><p>输入: piles = [30,11,23,4,20], H = 5<br>输出: 30<br>示例 3：</p><p>输入: piles = [30,11,23,4,20], H = 6<br>输出: 23</p><p>题解</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">c</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(<span class="keyword">const</span> <span class="keyword">void</span>* a, <span class="keyword">const</span> <span class="keyword">void</span>* b)</span> </span>{</span><br><span class="line">    <span class="keyword">return</span> *(<span class="keyword">int</span>*)a - *(<span class="keyword">int</span>*)b;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">minEatingSpeed</span><span class="params">(<span class="keyword">int</span>* piles, <span class="keyword">int</span> pilesSize, <span class="keyword">int</span> H)</span></span>{</span><br><span class="line"></span><br><span class="line">    qsort(piles, pilesSize, <span class="keyword">sizeof</span>(<span class="keyword">int</span>), cmp);<span class="comment">//先排成有序数组</span></span><br><span class="line">    / *  二分法查找左值 */</span><br><span class="line">    <span class="keyword">int</span> left = <span class="number">1</span>; ;</span><br><span class="line">    <span class="keyword">int</span> right = piles[pilesSize<span class="number">-1</span>];</span><br><span class="line">    <span class="keyword">int</span> mid;</span><br><span class="line">    <span class="keyword">int</span> time=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (left < right) {</span><br><span class="line">        mid = (left + right) / <span class="number">2</span>;</span><br><span class="line">        time = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i<pilessize; i++) {< span><br><span class="line">            time += (piles[i] + (mid - <span class="number">1</span>)) / mid;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (time > H)</span><br><span class="line">            left = mid + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            right = mid;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> left;</span><br><span class="line">}</span><br></pilessize;></span></pre></td></tr></tbody></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/ymz.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/ymz.png" class="lazyload" title></a></p></body></html>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> 算法 </tag>
            
            <tag> 查找 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基建REITs 推动基建投资进入新时代</title>
      <link href="/posts/1070007663/"/>
      <url>/posts/1070007663/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>为贯彻落实党中央国务院关于深化投融资体制改革、积极稳妥降低企业杠杆率、保持基础设施补短板力度等决策部署，支持国家重大战略实施，深化金融供给侧结构性改革，进一步提升资本市场服务实体经济能力，促进基础设施高质量发展，4 月30 日中国证监会与国家发展改革委联合发布了《关于推进基础设施领域不动产投资信托基金（REITs）试点相关工作的通知》（以下简称《通知》），标志着境内基础设施领域公募REITs试点正式起步。</p><h2 id="什么是REITs基金？"><a href="#什么是REITs基金？" class="headerlink" title="什么是REITs基金？"></a>什么是REITs基金？</h2><p>REITs(Real Estate Investment Trust)基金译为不动产信托投资基金。</p><p>REITs是不动产证券化的重要手段。不动产证券化就是把流动性较低的、非证券形态的不动产投资，直接转化为资本市场上的证券资产的金融交易过程。不动产证券化包括不动产项目融资证券化和不动产抵押贷款证券化两种基本形式。  REITs 是一种权益投资产品，其底层资产为不动产，目前已拓展至包括基础设施等多种资产在内。REITs通过发行股份或收益凭证的方式设立投资公司或募集资金，并将资金投资于不动产等领域(早期产品以不动产为主)、由专门投资机构进行管理，将投资综合收益按比例分配给投资者。REITs 是国际上主流投资品种之一，美国、日本等国均发行了较多REITs 产品，一般投资人均能以较低门槛参与，获得市场交易、租金与增值所带来的收益。目前REITs 底层资产已拓展至包括仓储物流、收费公路、水电气热、污水处理等在内。</p><p>简单来说，就是一群投资者把钱凑到一起，交给一个基金经理，让他去投资房地产（例如商场、住宅楼、宾馆），或者基建项目（例如机场、铁路、公路），然后赚到的钱，扣掉基金经理的工资（管理费），然后大家分。钱还是那个钱，房子还是那个房子，在开发商手里，那叫“不动产”，拿出来做成REITs，分给大家，这就叫做“资产证券化”。</p><p><code>注意：证监会明确规定，基建类REITs基金主要投资方向是基础设施，包括仓储物流、收费公路、机场港口、水电气热等公共基础设施，不包括住宅和商业地产。</code></p><h3 id="REITs特征"><a href="#REITs特征" class="headerlink" title="REITs特征"></a>REITs特征</h3><p>REITs 具有门槛较低、自由流通、分红比例及回报率较高等典型特征</p><table><thead><tr><th>特征</th><th>具体情况</th></tr></thead><tbody><tr><td>门槛较低</td><td>标准类REITs(公募型)面向社会公众募集资金，一般投资者都可参与，门槛较低</td></tr><tr><td>自由流通</td><td>标准类REITs(公募型)往往是上市公募的，因此流动性好，投资者多元且可自由进出。</td></tr><tr><td>分红比例及回报率较高</td><td>部分国家或地区规定REITs90%的收入都要进行分红(强制性)；根据美国市场数据统计，REITs 作为一个整体 其年复合增长率大多数跑赢各项指数</td></tr><tr><td>分散风险</td><td>REITs 的底层资产往往是重资产，直接投资底层资产或有一定风险，通过投资REITs 可分散风险。</td></tr><tr><td>收入来源较多</td><td>一般来自于地产租金、地产抵押贷款利息、相关处置收入或其他合格投资收益等；或基础物业公司的运营收 入、产品到期退出时物业资产的处置收入、原始权益人支付的权利对价等</td></tr><tr><td>底层资产范围较广</td><td>据NAREIT 统计，美国的REITs 发展相对成熟，底层资产包括办公楼、工业厂房、购物中心、公寓、预制房 屋、物流分销、度假中心、自助仓储、医疗中心等。</td></tr></tbody></table><h3 id="REITs分类"><a href="#REITs分类" class="headerlink" title="REITs分类"></a>REITs分类</h3><p>REITs 按组织形式可分为公司型及契约型，按募集与流通模式可分为公募及私募</p><table><thead><tr><th>划分方式</th><th>类型</th><th>特点</th></tr></thead><tbody><tr><td>资金投向</td><td>权益型</td><td>拥有并经营收益型不动产，同时提供物业管理服务。收益来自租金和不动产的增值，受经营状况影响 大。</td></tr><tr><td>资金投向</td><td>抵押型</td><td>直接向不动产所有者或开发商提供抵押信贷，或者通过购买抵押贷款支持证券间接提供融资，其主要收 入来源为贷款利息，受利率影响比较大。</td></tr><tr><td>资金投向</td><td>混合型</td><td>既拥有并经营不动产，又向不动产所有者和开发商提供资金，是权益型和抵押型的混合。</td></tr><tr><td>资金募集 方式</td><td>公募型</td><td>在公开的证券市场上，向广大投资者进行资金募集。募集的资金量大，起步的资金额比较低。</td></tr><tr><td>资金募集 方式</td><td>私募型</td><td>以不公开的方式向少数、特定的投资者募集资金。</td></tr><tr><td>组织形式</td><td>公司型</td><td>依《公司法》成立，并作为主体发行股份募集资金，依照法律和公司章程投资不动产物业。收益来源于 股利。</td></tr><tr><td>组织形式</td><td>信托型</td><td>依信托契约发行受益凭证，并以募集资金投资不动产物业。收益来源于基金分红、信托收益。</td></tr><tr><td>运作方式</td><td>封闭型</td><td>存续期内份额不变，不允许随意追加股份和赎回</td></tr><tr><td>运作方式</td><td>开放型</td><td>存续期内份额可变，允许投资者随时买入和赎回</td></tr></tbody></table><h3 id="基建REITs与商业物业类REITs的区别"><a href="#基建REITs与商业物业类REITs的区别" class="headerlink" title="基建REITs与商业物业类REITs的区别"></a>基建REITs与商业物业类REITs的区别</h3><p>基建REITs与商业物业类REITs 有很大的区别，主要体现在：</p><table><thead><tr><th>比较项目</th><th>基础设施类REITs</th><th>商业物业类REITs</th></tr></thead><tbody><tr><td>权利</td><td>所有权国有，持有人一般只有使用权</td><td>持有人拥有所有权</td></tr><tr><td>流动性</td><td>流动性较低</td><td>流动性较高</td></tr><tr><td>估值走势</td><td>仅可采用收益法，估值逐年降低</td><td>收益法、比较法均可，价值稳中有升</td></tr><tr><td>风险收益</td><td>低风险、低收益</td><td>高风险、高收益</td></tr></tbody></table><h2 id="为什么？"><a href="#为什么？" class="headerlink" title="为什么？"></a>为什么？</h2><p>很多人可能疑惑，为什么会在这个时间推出这个？ </p><p> 其实基建REITs 一直是国家鼓励发展方向，近几年监管机构多次表态支持，并出台一系列政策推动其快速发展，并不是一个突发的政策：</p><ul><li>2016 年12 月26 日，发改委与证监会联合发布《推进传统基础设施领域政府和社会资本合作（PPP）项目资产证券化相关工作的通知》，提出要“共同推动不动产投资信托基金（REITs），进一步支持传统基础设施项目建设”；</li><li>2019 年6 月27 日，发改委投资司副司长韩志峰在中国REITs 论坛2019 年年会上发表《中国基础设施REITs 前景》，提到通过发行基础设施REITs 盘活资产，将收回资金用于新的基础设施补短板项目建设，从而形成良好的投资循环；</li><li>2019 年12 月17 日，证监会公司债券监管部副主任刘榕在2019（第十一届）卓越竞争力金融峰会上表示，下一步将会继续会同相关部门，积极推动基建REITs 的发行试点工作；</li><li>2020 年1 月16 日证监会召开的2020 年系统工作会议中表示要“稳妥推动基础设施REITs 试点”；</li><li>2020 年4 月30 日，中国证监会、国家发展改革委联合发布《关于推进基础设施领域不动产投资信托基金（REITs）试点相关工作的通知》，正式启动基建领域的公募EITs 试点工作。</li></ul><p>当下的直接痛点刺激：</p><ul><li><p>由于疫情的影响，经济基本上被按下了暂停或者单步键，大量的劳动力滞留，失业率有所上升，虽然会放水救市，但是为了避免如08年的4万亿一样，中央提出了新基建的概念，由于门槛较高、普通劳动岗位需求较低，所以实施起来短期还是不尽人意。  </p></li><li><p>受到目前国际形势，依靠出口来拉动经济风险巨大。</p></li><li><p>另外地方财政过度依赖土地政策，会造成地方财政吃紧。经过近十年的杠杆扩张，地方政府债务压力巨大。  </p></li><li><p>同时房地产行业的赚钱效应在慢慢降低，比如万科宣布要成立食品事业部，一句玩笑话万科的市值快被养猪的追上了，诚然牧原作为养猪老大其近些年的要比房地产龙头万科好过的多。</p></li><li><p>今年是全面建设小康社会的收官之年，要想保证经济达标，必须给予一定的刺激，基建REITs的到来，可以改变基建的融资方式、盘活存量资产。</p></li></ul><p>出于多年的研究，直面当下情况，政策推出自然而然。</p><h2 id="有什么用？"><a href="#有什么用？" class="headerlink" title="有什么用？"></a>有什么用？</h2><p>前期，中国证监会、国家发展改革委联合有关单位，对境外成熟REITs市场进行了深入研究，并组成联合调研组，对运用REITs盘活基础设施存量资产进行了广泛调研。在此基础上，证监会与国家发展改革委共同研究形成了试点工作方案，明确了试点业务模式。4 月30 日中国证监会、国家发改委联合发布《关于推进基础设施领域不动产投资信托基金(REITs)试点相关工作的通知》，提出尽快推出基础设施REITs 试点项目；</p><ul><li>REITs 是世界上主流权益投资产品之一，具有门槛较低/流动性较高/分红较高等特征，基建REITs 是重要组成；</li><li>基建REITs 将拓宽基建资金来源，为险资等进入基建领域提供渠道，推动基建新项目落地及在手项目推进，利好基建提速；将缓解地方政府债务风险；</li><li>基建REITs 将盘活存量基建资产、推动基建运营资产价值重估。形成良性投资循环，提升直接融资比重，降低企业杠杆率。</li><li>REITs作为中等收益、中等风险的金融工具，具有流动性高、收益稳定、安全性强等特点，有利于丰富资本市场投资品种，拓宽社会资本投资渠道。</li></ul><h3 id="基建REITs-将改善建筑公司ROE-及现金流，助力打造良性商业模式闭合循环。"><a href="#基建REITs-将改善建筑公司ROE-及现金流，助力打造良性商业模式闭合循环。" class="headerlink" title="基建REITs 将改善建筑公司ROE 及现金流，助力打造良性商业模式闭合循环。"></a>基建REITs 将改善建筑公司ROE 及现金流，助力打造良性商业模式闭合循环。</h3><ol><li>基建REITs 拓宽基建资金来源，利好建筑公司尤其是基建公司新签提速及在手项目推进提速；</li><li>建筑公司传统商业模式是为垫资施工及加杠杆，对银行贷款需求较强，因此资产负债率较高、资产周转率较低、资金循环效率较低；且缺少有效的退出渠道；</li><li>基建REITs 将盘<br>活建筑公司存量基建资产，提高资产周转效率及资金循环效率、降低资产负债率、推动可持续发展；且可改善现金流及ROE；</li><li>补足退出机制后，建筑公司将形成良性商业模式闭合循环。</li></ol><p>基建REITs 政策具有重大意义</p><table><thead><tr><th></th><th>主要内容</th><th>意义</th></tr></thead><tbody><tr><td>重要意义</td><td>吸引更专业的市场机构参与运营管理，提高投资建设和运营管理效率，提升投资收益 水平。</td><td>将包括受托人、资产管理人、物业管 理人等进行清晰地分工和安排，未来 将有更细的专业分工。</td></tr><tr><td>重要意义</td><td>吸引更专业的市场机构参与运营管理，提高投资建设和运营管理效率，提升投资收益 水平。</td><td>将包括受托人、资产管理人、物业管 理人等进行清晰地分工和安排，未来 将有更细的专业分工。</td></tr><tr><td>基本原则</td><td>符合国家政策，聚焦优质资产。推动国家重大战略实施，服务实体经济，支持重点领 域符合国家政策导向、社会效益良好、投资收益率稳定且运营管理水平较好的项目开 展基础设施REITs 试点。</td><td>表明REITs 目的是为了推动国家发 展，实施要符合国家政策。</td></tr><tr><td>基本原则</td><td>遵循市场原则，坚持权益导向。结合投融资双方需求，按照市场化原则推进基础设施 REITs, 依托基础设施项目持续、稳定的收益，通过REITs 实现权益份额公开上市交 易。</td><td>市场化意味着纯粹的补贴/兜底融资 模式可能不是目前REITs 项目的首 选，需要看下一步的发展。</td></tr><tr><td>基本原则</td><td>创新规范并举，提升运营能力。加强对基础设施资产持续运营能力、管理水平的考 核、监督，充分发挥管理人的专业管理职能，确保基础设施项目持续健康运营，努力 提升运营效率和服务质量，推动基础设施投融资机制和运营管理模式创新。</td><td>有利于为中国创造更多专业的机构角 色，并使得各机构的专业领域分的更 细，对创新提出要求。</td></tr><tr><td>基本原则</td><td>规则先行，稳妥开展试点。在现行法律法规框架下，在重点领域以个案方式先行开展 基础设施REITs 试点，稳妥起步，及时总结试点经验，优化工作流程，适时稳步推 广。</td><td>强调个案审批和试点推广，为目前的 开展模式奠定基调。</td></tr><tr><td>基本原则</td><td>强化机构主体责任，推动归位尽责。明确管理人、托管人及相关中介机构的职责边 界，加强监督管理，严格落实诚实守信、勤勉尽责义务，推动相关参与主体归位尽 责。</td><td>明确各级机构的责任，要求各参与主 体尽职尽责。</td></tr><tr><td>基本原则</td><td>完善相关政策，有效防控风险。健全法律制度保障与相关配套政策，把握好基础资产 质量，夯实业务基础，有效防范市场风险。借鉴境外成熟市场标准，系统构建基础设 施REITs 审核、监督、管理制度，推动制度化、规范化发展</td><td>为相关政策的制定提出范本，借鉴境 外经验，推动REITs 的制度化、规范 化发展</td></tr><tr><td>项目要求</td><td>聚焦重点区域。优先支持京津冀、长江经济带、雄安新区、粤港澳大湾区、海南、长 江三角洲等重点区域，支持国家级新区、有条件的国家级经济技术开发区开展试点。</td><td>明确聚焦重点领域，区分“优先支持” 和“支持”，将试点放在沿海开放发达 地区。</td></tr><tr><td>项目要求</td><td>聚焦重点行业。优先支持基础设施补短板行业，包括仓储物流、收费公路等交通设 施，水电气热等市政工程，城镇污水垃圾处理、固废危废处理等污染治理项目。鼓励 信息网络等新型基础设施，以及国家战略性新兴产业集群、高科技产业园区、特色产 业园区等开展试点。</td><td>明确聚焦重点企业，既包括传统基建 补短板，又服务于新型基础设施建 设。</td></tr><tr><td>项目要求</td><td>聚焦优质项目。条件：项目权属清晰；具有成熟的经营模式及市场化运营能力，已产 生持续、稳定的收益及现金流，投资回报良好，并具有持续经营能力、较好的增长潜 力；发起人（原始权益人）及基础设施运营企业信用稳健、内部控制制度健全，具有持续经营能力，最近3 年无重大违法违规行为。基础设施运营企业还应当具有丰富的 运营管理能力。</td><td>明确聚焦优质项目，对优质项目进行 区分，为项目的遴选和推荐提供标 准，对项目提出明确的要求。</td></tr><tr><td>项目要求</td><td>加强融资用途管理。发起人（原始权益人）通过转让基础设施取得资金的用途应符合 国家产业政策，鼓励将回收资金用于新的基础设施和公用事业建设，重点支持补短板 项目，形成投资良性循环。</td><td>对融资资金做出限制，着力推动基础 设施和公共事业建设</td></tr><tr><td>工作安排</td><td>试点初期，由符合条件的取得公募基金管理资格的证券公司或基金管理公司，依法依 规设立公开募集基础设施证券投资基金，经中国证监会注册后，公开发售基金份额募 集资金，通过购买同一实际控制人所属的管理人设立发行的基础设施资产支持证券， 完成对标的基础设施的收购，开展基础设施REITs 业务。公开募集基础设施证券投资 基金符合《证券法》《证券投资基金法》规定的，可以申请在证券交易所上市交易</td><td>明确了公募REITs 试点的产品模式， 降低不动产投资门槛，使得广大公众 投资者配置不动产资产成为可能，为 居民提升财产性收入提供高质量的大 类资产。</td></tr><tr><td>工作安排</td><td>各省级发展改革委出具专项意见。各省级发展改革委要加强指导，推动盘活存量资 产，促进回收资金用于基础设施补短板项目建设，形成投资良性循环。在省级发展改 革委出具专项意见基础上，国家发展改革委将符合条件的项目推荐至中国证监会，由 中国证监会、沪深证券交易所依法依规，并遵循市场化原则，独立履行注册、审查程 序，自主决策。中国证监会各派出机构、沪深证券交易所与省级发展改革委加强协 作，做好项目遴选与推荐工作。</td><td>阐明项目遴选和推荐的流程，为各机 关机构提出了明确的步骤和要求。</td></tr><tr><td>工作安排</td><td>中国证监会制定公开募集基础设施证券投资基金相关规则，沪深证券交易所比照公开 发行证券相关要求建立基础设施资产支持证券发行审查制度。有关单位要抓紧建立工 作机制，做好投资者教育和市场培育，参照公开发行证券相关要求强化对基础设施资 产支持证券发行等环节相关参与主体的监督管理，压实中介机构责任，落实各项监管 要求。</td><td>要求证监会制定相关规则，协调各单 位建立相关制度，强调中介机构的责 任和监管要求。特别是基金管理人等 参与主体也有明确的规定。</td></tr><tr><td>工作安排</td><td>中国证监会、国家发展改革委密切沟通协作、加强信息共享，协调解决基础设施 REITs 试点过程中存在的问题与困难，并依据职责分工，不断优化流程、提高效率， 推动基础设施REITs 试点工作顺利开展，并支持探索开展基础设施REITs 试点的其他 可行模式。</td><td>证监会、发改委将根据事实情况逐步 进行探索和改善，推动REITs 试点工 作顺利开展。</td></tr></tbody></table><h2 id="REITs-产品现状"><a href="#REITs-产品现状" class="headerlink" title="REITs 产品现状"></a>REITs 产品现状</h2><p>国内已发行多个REITs 产品，底层资产中购物中心、写字楼占比较高</p><table><thead><tr><th>产品名称</th><th>发行时间</th><th>底层资产类型</th></tr></thead><tbody><tr><td>华泰-四川高速隆纳高速公路资产支持专项计划</td><td>2019/12/27</td><td>高速公路</td></tr><tr><td>中联前海开源-远洋集团二号资产支持专项计划</td><td>2019/12/25</td><td>写字楼</td></tr><tr><td>中联前海开源-中集产城产业园一号第一期</td><td>2019/12/11</td><td>租赁住宅及商铺</td></tr><tr><td>中联前海开源-华发租赁住房一号第二期资产支持专项计划</td><td>2019/12/10</td><td>租赁住房</td></tr><tr><td>中联一创-首创矩大奥特莱斯一号资产支持专项计划</td><td>2019/12/9</td><td>购物中心</td></tr><tr><td>中信金石-成都苏宁广场资产支持专项计划</td><td>2019/12/6</td><td>购物中心</td></tr><tr><td>兴瀚资管-迈科商业中心综合体资产支持专项计划</td><td>2019/12/3</td><td>商业中心</td></tr><tr><td>中联元联-前海开源苏州纳米大学科技园资产支持专项计划</td><td>2019/11/28</td><td>产业园区</td></tr><tr><td>鲁能集体-英大证券-济南贵和商业物业资产支持专项计划</td><td>2019/11/26</td><td>购物中心</td></tr><tr><td>中联元联-前海开源-新建元商旅资产支持专项计划</td><td>2019/10/29</td><td>商业+文娱</td></tr><tr><td>中联元联-前海开源-苏州恒泰商业地产一期资产支持专项计划</td><td>2019/9/27</td><td>写字楼+配套商业</td></tr><tr><td>华泰佳越-顺丰产业园一期第2号资产支持专项计划</td><td>2019/9/26</td><td>物流地产</td></tr><tr><td>中联基金-浙商资管-沪杭甬徽杭高速资产支持专项计划</td><td>2019/9/24</td><td>高速公路</td></tr><tr><td>中联前海开源-华侨城租赁住房一号第一期资产支持专项计划</td><td>2019/9/18</td><td>长租公寓</td></tr><tr><td>光正资管-光控安石商业地产第2期观音桥大融城资产支持专项计划</td><td>2019/9/4</td><td>购物中心</td></tr><tr><td>金茂华富-长沙金茂广场北塔资产支持专项计划</td><td>2019/7/16</td><td>商务写字楼（含购物中心、办公楼）</td></tr><tr><td>上海广朔实业有限公司2019年第一期光证资产支持票据</td><td>2019/6/28</td><td>高速公路</td></tr><tr><td>光证资管-光控安石商业地产第1期静安大融城资产支持专项计划</td><td>2019/5/14</td><td>购物中心</td></tr><tr><td>华泰佳越-阳光控股大厦资产支持专项计划</td><td>2019/4/24</td><td>商业+办公+停车场</td></tr><tr><td>中联前海开源-华发租赁住房一号第一期资产支持专项计划</td><td>2019/3/27</td><td>公寓</td></tr><tr><td>海南省人才租赁住房第一期资产支持专项计划</td><td>2019/3/26</td><td>租赁住房</td></tr><tr><td>菜鸟中联-中信证券-中国智能骨干网仓储资产支持专项计划</td><td>2019/3/20</td><td>仓储</td></tr><tr><td>平安汇通-平安不动产朗诗租赁住房1期资产支持专项计划</td><td>2019/3/13</td><td>公寓</td></tr><tr><td>中信金石-深圳龙岗万科广场资产支持专项计划</td><td>2019/3/1</td><td>购物中心</td></tr><tr><td>中联前海开源-远洋集团一号资产支持专项计划</td><td>2018/12/13</td><td>写字楼</td></tr><tr><td>华泰佳越-顺丰产业园一期资产支持专项计划</td><td>2018/12/11</td><td>物流地产</td></tr><tr><td>深创投中金-苏宁云创资产支持专项计划</td><td>2018/11/21</td><td>家电大卖场</td></tr><tr><td>深创投安居集团人才租赁住房第一期资产支持专项计划</td><td>2018/11/1</td><td>租赁住房</td></tr><tr><td>中信证券-阳光城长租公寓1号资产支持专项计划</td><td>2018/9/19</td><td>长租公寓</td></tr><tr><td>中信证券-泰禾集团慕盛长租公寓1号资产支持专项计划</td><td>2018/9/7</td><td>长租公寓</td></tr><tr><td>中联前海开源-越秀租赁住房一号第一期资产支持专项计划</td><td>2018/8/10</td><td>租赁住房</td></tr><tr><td>高和晨曦-中信证券-领昱1号资产支持专项计划</td><td>2018/6/21</td><td>租赁住房</td></tr></tbody></table><p>其中的三单基建REITs 产品</p><table><thead><tr><th>发行时间</th><th>项目名称</th><th>交易场所</th><th>发行规模（亿元）</th><th>原始权益人</th><th>底层资产</th></tr></thead><tbody><tr><td>2019/06/28</td><td>上海广朔实业有限公司2019年第一期光证资产支持票据</td><td>银行间债券市场</td><td>70</td><td>上海广朔实业有限公司</td><td>沿海高速秦皇岛至冀津界段</td></tr><tr><td>2019/09/24</td><td>中联基金-浙商资管-沪杭甬徽杭高速资产支持专项计划</td><td>上海证券交易所</td><td>20.13</td><td>浙江沪杭甬高速公路股份有限公司</td><td>沪杭甬徽杭段高速公路</td></tr><tr><td>2019/12/27</td><td>华泰-四川高速隆纳高速公路资产支持专项计划</td><td>深圳证券交易所</td><td>19.77</td><td>四川高速公路建设开发集团有限公司</td><td>隆纳高速公路</td></tr></tbody></table><h2 id="风险提示"><a href="#风险提示" class="headerlink" title="风险提示"></a>风险提示</h2><ul><li>基建REITs 推进不及预期。基建REITs 推进有赖于相关法律法规、资产转让政策、税收政策等的进一步完善；且首批试行的重点地区、重点行业实际推进效果亦至关重要；若基建REITs 推进不及预期，基建资金来源、地方政府债务等问题或不能得到有效解决。</li><li>基建投资不及预期。基建投资增速下滑将从两方面影响基建链公司相关业务开展，一方面是新签订单低于预期，另一方面是在手订单推进效率放缓，从而制约收入及业绩增长。</li><li>货币信用紧缩。货币信用环境只紧不松将影响基建订单落地推进，从而对基建公司订单承接、收入确认、业绩释放带来较大压力。</li></ul><h2 id="免责声明"><a href="#免责声明" class="headerlink" title="免责声明"></a>免责声明</h2><ul><li>本站旨在记录分享本人的生活点点滴滴，为广大有共同观念者提供学习交流相关的知识内容。</li><li>本站所提及的技术，请在合法（当地法及中华人民共和国现行的所有法律）的范围内使用，本站不承担连带责任。</li><li>本站不存在任何荐股、投资建议等行为。</li><li>本站部分内容引用信息均来自公开资料，我力求但不保证这些信息的准确性和完整性。</li><li>内容所载观点、结论及意见仅代表在文章发布时的个人判断，不构成任何投资与交易决策依据。</li><li>对于任何因使用或信赖本站内容而造成（或声称造成）的任何直接或间接损失，我不承担任何责任。</li><li>本站内容版权仅为本人所有，非使用 CC BY-NC-SA 4.0 许可协议的内容，未经书面许可，任何机构和个人不得以任何形式翻版、复制、刊登、发表或引用。</li><li>本人保留对任何侵权行为进行追究的权利。</li><li>投资有风险，入市需谨慎。</li></ul><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/ymz.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/ymz.png" class="lazyload" title></a></p></body></html>]]></content>
      
      
      <categories>
          
          <category> 投资 </category>
          
          <category> 小白 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 投资 </tag>
            
            <tag> 小白 </tag>
            
            <tag> 科普 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>排序算法-快排</title>
      <link href="/posts/4264057631/"/>
      <url>/posts/4264057631/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>快速排序算法是由东尼·霍尔所发明的一种排序算法，属于交换排序的一种，其时间复杂度平均情况为O（nlog2n）最坏的情况为O（n2），空间复杂度为O（nlog2n），属于不稳定排序，n比较大时，效果明显。</p><h2 id="算法思想"><a href="#算法思想" class="headerlink" title="算法思想"></a>算法思想</h2><p>快速排序时使用的典型的分治法，该方法的基本思路是：</p><ul><li><p>从数列中挑出一个元素，称为基准（pivot）。（找基准的步骤中存在不同的实现，比如选择首位元素、中间元素、随机元素等）</p></li><li><p>重新排序数列，所有元素比基准小的摆在基准前面，所有元素比基准大值大的摆在基准后面，相同的可以在基准的任何一边，在这个分区退出后，该基准就在中间位置。这个成为分区操作。</p></li><li><p>递归地把小于基准的子序列和大于基准的子序列排序。</p></li></ul><h2 id="算法实现"><a href="#算法实现" class="headerlink" title="算法实现"></a>算法实现</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">c</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string"><stdio.h></stdio.h></span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">qsort</span><span class="params">(<span class="keyword">int</span>* a, <span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (len <= <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = len - <span class="number">1</span>, temp = a[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">while</span> (i < j) {</span><br><span class="line">        <span class="keyword">while</span> (a[j] > temp && j > i)</span><br><span class="line">            j--;</span><br><span class="line">        a[i] = a[j];</span><br><span class="line">        <span class="keyword">while</span> (a[i] <= temp && i < j)</span><br><span class="line">            i++;</span><br><span class="line">        a[j] = a[i];</span><br><span class="line">    }</span><br><span class="line">    a[i] = temp;</span><br><span class="line">    qsort(a, i);</span><br><span class="line">    qsort(a + i + <span class="number">1</span>, len - i - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> i, a[<span class="number">13</span>] = { <span class="number">-100</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">-10</span>, <span class="number">9</span>, <span class="number">46</span>, <span class="number">-4</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">44</span>, <span class="number">20</span> };</span><br><span class="line">    qsort(a, <span class="number">13</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i < <span class="number">13</span>; i++) {</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>, a[i]);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h2 id="拒绝重复造轮子"><a href="#拒绝重复造轮子" class="headerlink" title="拒绝重复造轮子"></a>拒绝重复造轮子</h2><p>当然我们也可以直接使用库函数，需要包含头文件stdlib.h。</p><pre><code>用 法： void qsort(void *base,int nelem,int width,int (*fcmp)(const void *,const void *));参数： 1 待排序数组首元素的地址 2 数组中待排序元素数量3 各元素的占用空间大小4 指向函数的指针，用于确定排序的顺序 </code></pre><p>使用库函数我们很方便，只需要构造comp就可以了，我们看几个常规的例子：</p><p>int 排序</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">c</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string"><stdio.h></stdio.h></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string"><stdlib.h></stdlib.h></span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">comp</span><span class="params">(<span class="keyword">const</span> <span class="keyword">void</span>* a, <span class="keyword">const</span> <span class="keyword">void</span>* b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> *(<span class="keyword">int</span>*)a - *(<span class="keyword">int</span>*)b; <span class="comment">// 递增</span></span><br><span class="line">    <span class="comment">//return *(int*)b - *(int*)a; // 递减</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">13</span>] = { <span class="number">-100</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">-10</span>, <span class="number">9</span>, <span class="number">46</span>, <span class="number">-4</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">44</span>, <span class="number">20</span> };</span><br><span class="line">    <span class="keyword">int</span> len = <span class="number">13</span>;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line">    qsort(a, len, <span class="keyword">sizeof</span>(a[<span class="number">0</span>]), comp);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i < len; i++) {</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>, a[i]);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p>double 排序</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">c</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string"><stdio.h></stdio.h></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string"><stdlib.h></stdlib.h></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 6</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(<span class="keyword">const</span> <span class="keyword">void</span>* a, <span class="keyword">const</span> <span class="keyword">void</span>* b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> ((*(<span class="keyword">double</span>*)a - *(<span class="keyword">double</span>*)b > <span class="number">0</span>) ? <span class="number">1</span> : <span class="number">-1</span>); <span class="comment">//升序</span></span><br><span class="line">    <span class="comment">//return ((*(double*)a - *(double*)b > 0) ? -1 : 1); //降序</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">double</span> s[N] = { <span class="number">1.45</span>, <span class="number">5.78</span>, <span class="number">9.754</span>, <span class="number">124.145</span>, <span class="number">148.15</span>, <span class="number">654.0</span> };</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    qsort(s, N, <span class="keyword">sizeof</span>(s[<span class="number">0</span>]), cmp);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i < N; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lf "</span>, s[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p>再比如，按照字符串的长度排序：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">c</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string"><stdio.h></stdio.h></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string"><stdlib.h></stdlib.h></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string"><string.h></string.h></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> M 12</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 20</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">comp</span><span class="params">(<span class="keyword">const</span> <span class="keyword">void</span>* a, <span class="keyword">const</span> <span class="keyword">void</span>* b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">strlen</span>((<span class="keyword">char</span>*)a) - <span class="built_in">strlen</span>((<span class="keyword">char</span>*)b); <span class="comment">//递增</span></span><br><span class="line">    <span class="comment">//return strlen((char*)b) - strlen((char*)a); //递减</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">char</span> s[M][N] = {</span><br><span class="line">        <span class="string">"January"</span>,</span><br><span class="line">        <span class="string">"February"</span>,</span><br><span class="line">        <span class="string">"March"</span>,</span><br><span class="line">        <span class="string">"April"</span>,</span><br><span class="line">        <span class="string">"May"</span>,</span><br><span class="line">        <span class="string">"June"</span>,</span><br><span class="line">        <span class="string">"July"</span>,</span><br><span class="line">        <span class="string">"August"</span>,</span><br><span class="line">        <span class="string">"September"</span>,</span><br><span class="line">        <span class="string">"October"</span>,</span><br><span class="line">        <span class="string">"November"</span>,</span><br><span class="line">        <span class="string">"December"</span></span><br><span class="line">    };</span><br><span class="line"></span><br><span class="line">    qsort(s, M, <span class="keyword">sizeof</span>(<span class="keyword">char</span>) * N, comp);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i < M; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, s[i]);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p>按照字典序排序</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">c</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string"><stdio.h></stdio.h></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string"><stdlib.h></stdlib.h></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string"><string.h></string.h></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> M 12</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 20</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">comp</span><span class="params">(<span class="keyword">const</span> <span class="keyword">void</span>* a, <span class="keyword">const</span> <span class="keyword">void</span>* b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> *(<span class="keyword">char</span>*)a - *(<span class="keyword">char</span>*)b; <span class="comment">//字典升序</span></span><br><span class="line">    <span class="comment">//return *(char*)b - *(char*)a;//字典降序</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">char</span> s[M][N] = {</span><br><span class="line">        <span class="string">"January"</span>,</span><br><span class="line">        <span class="string">"February"</span>,</span><br><span class="line">        <span class="string">"March"</span>,</span><br><span class="line">        <span class="string">"April"</span>,</span><br><span class="line">        <span class="string">"May"</span>,</span><br><span class="line">        <span class="string">"June"</span>,</span><br><span class="line">        <span class="string">"July"</span>,</span><br><span class="line">        <span class="string">"August"</span>,</span><br><span class="line">        <span class="string">"September"</span>,</span><br><span class="line">        <span class="string">"October"</span>,</span><br><span class="line">        <span class="string">"November"</span>,</span><br><span class="line">        <span class="string">"December"</span></span><br><span class="line">    };</span><br><span class="line"></span><br><span class="line">    qsort(s, M, <span class="keyword">sizeof</span>(<span class="keyword">char</span>) * N, comp);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i < M; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, s[i]);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p>struct 排序</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">c</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string"><stdio.h></stdio.h></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string"><stdlib.h></stdlib.h></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 6</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="keyword">char</span> name[<span class="number">15</span>];</span><br><span class="line">    <span class="keyword">int</span> score;</span><br><span class="line"></span><br><span class="line">} Student;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">comp</span><span class="params">(<span class="keyword">const</span> <span class="keyword">void</span>* a, <span class="keyword">const</span> <span class="keyword">void</span>* b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> ((Student*)a)->score - ((Student*)b)->score;<span class="comment">//按成绩</span></span><br><span class="line">    <span class="comment">//return *(((Student*)a)->name) - *(((Student*)b)->name);//按名字</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(Student s)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%-15s : %d\n"</span>, s.name, s.score);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    Student s[N] = {</span><br><span class="line">        <span class="string">"Zhang San"</span>, <span class="number">94</span>,</span><br><span class="line">        <span class="string">"Li Si"</span>, <span class="number">80</span>,</span><br><span class="line">        <span class="string">"You"</span>, <span class="number">94</span>,</span><br><span class="line">        <span class="string">"I"</span>, <span class="number">100</span>,</span><br><span class="line">        <span class="string">"He"</span>, <span class="number">72</span>,</span><br><span class="line">        <span class="string">"She"</span>, <span class="number">60</span></span><br><span class="line">    };</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    qsort(s, N, <span class="keyword">sizeof</span>(Student), comp);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i < N; i++) {</span><br><span class="line">        <span class="built_in">print</span>(s[i]);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p>通过上面的几个例子，我们不难发现，其实我们只要构造好comp函数就好了。</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/ymz.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/ymz.png" class="lazyload" title></a></p></body></html>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> 算法 </tag>
            
            <tag> 排序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于中行事件的反思</title>
      <link href="/posts/4108344921/"/>
      <url>/posts/4108344921/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>2020年4月21日，WTI 5月原油期货结算价报收-37.63美元/桶，较前一日下跌305.97%，这是自1983年石油期货在纽约商品交易所交易以来首次出现负价。</p><p>关于负油价产生的原因，目前主流观点认为是由于需求萎缩导致库存告急，储运成本过高，多头抛售引致流动性踩踏。也有媒体报道，库欣原油库容已被订购一空，6月份合约存在负价的可能。</p><hr><h2 id="一起来吃瓜"><a href="#一起来吃瓜" class="headerlink" title="一起来吃瓜"></a>一起来吃瓜</h2><p>早上起来，还在和室友吃瓜，谈论哪个倒霉蛋子看多，结果慢慢的中国银行的原油宝就爆出来了，感情还是吃的自家的瓜。</p><p>诚然，玩期货的人都知道这个波动巨大，同时还有穿仓的风险，但是细看这一事件发现事实并不像想象的那么简单，到现在，我们广大群众一眼满脸懵逼，不知道原油宝究竟是个啥。下面我尝试扒一下，看看能不能理出个所以然。</p><h2 id="原油宝的前世今生"><a href="#原油宝的前世今生" class="headerlink" title="原油宝的前世今生"></a>原油宝的前世今生</h2><p>在2020年4月24日中国官方网站上贴出了<a href="https://www.boc.cn/custserv/bi2/202004/t20200424_17793210.html" target="_blank" rel="noopener" title="点击查看">公告</a>，公告如下：<br><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/Apu5TarbJq.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/Apu5TarbJq.png" class="lazyload" title></a></p><p>那么原油宝究竟是什么呢？我们去官网上查查看，我在网上找到了2017.12.18的<a href="https://www.bankofchina.com/pbservice/pb3/201712/t20171218_10998217.html?keywords=%E5%8E%9F%E6%B2%B9%E5%AE%9D" target="_blank" rel="noopener">这个公告</a>.<br><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/rtyghujhgvuytrdf.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/rtyghujhgvuytrdf.png" class="lazyload" title></a></p><p><code>原油宝是指中国银行面向个人客户发行的挂钩境内外原油期货合约的交易产品</code>,好了，这里明确说了，是挂钩境内外原油期货合约的交易产品，是交易产品那么就是中行开的虚拟盘。</p><h2 id="中国银行在这其中充当一个什么角色呢？"><a href="#中国银行在这其中充当一个什么角色呢？" class="headerlink" title="中国银行在这其中充当一个什么角色呢？"></a>中国银行在这其中充当一个什么角色呢？</h2><p>其实银行最早推出的是其实是账户贵金属，十多年前工行就搞了“纸黄金”，后来白银、铂金等其他品种也都纷纷上线。这类个人凭证式账户贵金属的最大特点，是不带杠杆且无法交割实物。不带杠杆，意味着风险可控，不会爆仓，投资者不会闹事。无法交割实物，意味着银行无需承担实物储存运输和交割的成本及风险，对银行来说，这是一种风险可控，成本较低，利润较高的投资品种。</p><p>银行的利润点，来自“点差”。<br>类似于你去银行换外汇，有“外汇买入价”和“外汇卖出价”，银行买入价总是比市场报价低一点，卖出价格则贵一些，这中间的差额，叫“点差”。对银行来说，系统申报上来的多单和空单可以直接内部对冲，自己抽水（点差）拿走后，把输家的钱拨到赢家账户上就OK。本质上，和赌场做的买卖一样。但多空双方的申报单不可能完全一样多，比如12000手多单，对应10000手空单，多出来的2000手多单，专业术语叫“头寸”。多单比空单多的部分叫多头头寸，反之则叫空头头寸。只要头寸这部分到市场上真正买卖就行了。所以多空双向交易开通后，银行收益提升，成本反而下降了。于是银行要转赚尽每一分钱，拿着客户的钱自己去搞原油期货了。</p><p>中行在做产品设计的时候，原本想的是自己做的是稳赚不赔的买卖。因为客户要抵押100%的保证金，名义上产品是不带杠杆的。只要原油交易价格不为负数，客户做多的时候，银行是不存在任何风险的（最多把你本金亏光）。而做空的时候，虽然会有保证金充足率不足的风险，但中行在协议中规定，当保证金充足率不足50%的时候他们会给你预警提醒，当保证金充足率低于最低比例（协议规定为20%）的时候，他们会按照亏损额从大到小的原则逐笔强制平仓。</p><p>这次声名远扬的“负油价”，指的是WTI期货主力合约价格。</p><p>这就要说到WTI和BRENT不同的期货交割方式了，前者规定必须实物交割，后者则允许现金交割。4月21日，是WTI当时的主力合约——5月合约的交割日。意思是说，所有买了WTI2005原油期货的投资者，只有两个选择：要么在这个时间点之前平仓，也就是找到对手盘交易，不管输赢，都结账走人；要么到交割日后，按照合约，补足货款，上门提货。<br>注意，人家不提供送货上门服务，也不提供代为保管服务，你得自己想办法把原油运走并保管。交割地点，位于美国俄克拉荷马州库欣地区。所以牛逼如中国银行，也一样没有实物交割的能力，只能割肉了。</p><p>但是，中国银行不想自己承担如此巨大的损失，于是把所有的损失转嫁给了客户，毕竟当时说的也是<code>原油宝是指中国银行面向个人客户发行的挂钩境内外原油期货合约的交易产品</code>，那么干脆我也弄一个负价，这个本来也无可厚非，由于做多是抵押了100%的保证金的，价格不为负时，是不会触发强平的策略的，但是价格为负就会涉及强平，也就是说会先触发20%的强平机制，根本不会触发50%的预警提示。而且这个强平更不可能是只要达到这个线就会触发的，而是先通知，给客户一段时间的缓冲期，如果客户一直不补款，才会强平，这样也就避免了短期的波动频繁的触发带来的损失，这也就是中行为啥一直表态我们都是按照规矩办事的，不存在违规情况，因为市场已经没有给中行留够足够的时间让他去反应。由于国际市场上5月期货已经是最后期限了，多头已经找不到对手了，中行只能自己强平不了。</p><h2 id="讲讲事件后续发展的可能性"><a href="#讲讲事件后续发展的可能性" class="headerlink" title="讲讲事件后续发展的可能性"></a>讲讲事件后续发展的可能性</h2><h3 id="客户"><a href="#客户" class="headerlink" title="客户"></a>客户</h3><p>对于客户而言，很多事情已经成就了现实，即便不愿承认，但是你的中行账号上的欠款是实实际际的，相信你在中行的其他账户也受到了影响吧，那么你能做的最后的反抗就是认真的研读当时签订的合同，看看里面有没有直接证据证明你买的是理财产品，而不是实实际际的原油期货，如果找到了，那么放手去维权吧，虽然你面对的是个庞然大物，但是只要你能找到合法的证据证明你是受害者，会成功的，只是时间早晚而已。</p><h3 id="中行"><a href="#中行" class="headerlink" title="中行"></a>中行</h3><p>中行目前的做法很是下作，不仅把自己的损失全部转嫁给客户，而且还撤销删除了对原油宝的所有宣传，对于舆论的风控要明显高于资本的风控啊。<br>后续可能<br>1、会暂时不追缴客户欠款，不上征信，但是保留权利。（5月2日更新中行选择了这条）<br>2、敢做敢当，自己咬牙吞下损失<br>3、彻底无赖了，损失全部由客户承担。<br>4、态度模棱两可，对于哭的厉害的给奶吃，对于温和的给与大棒，万事以拖为本，即给客户淡忘的可能留出充足的时间，又给自己积蓄力量留出时间。</p><h3 id="监管"><a href="#监管" class="headerlink" title="监管"></a>监管</h3><p>对于监管层面，出了这档子事情可定是要开会的，可能会自查？肃清同类产品？提高入门门槛？制定更加完善的制度和规则以应付不断发展的进程，同时应对即将在非银金融领域的实战厮杀。</p><h2 id="这些学费花在了什么地方？"><a href="#这些学费花在了什么地方？" class="headerlink" title="这些学费花在了什么地方？"></a>这些学费花在了什么地方？</h2><p>首先概括讲两句：</p><h3 id="1、投资期货要有交割能力（对平台、对个人）"><a href="#1、投资期货要有交割能力（对平台、对个人）" class="headerlink" title="1、投资期货要有交割能力（对平台、对个人）"></a>1、投资期货要有交割能力（对平台、对个人）</h3><p>这点基本上把投机客挡在外面了，这个是双向的，首先要确保平台是有交割能力的，要不你参与的无非就是一场赌博而已，而且充斥着各种野鸡平台。首先确保了平台有交割能力，就要看自己是不是有交割能力了，这个能力分两种，你是否有足量的资本吃下；你吃下的是否有足够的能力处理掉。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">记得在我还在上大学的时候，就有不少电话给我推销贵金属、原油等期货。大概对话内容：</span><br><span class="line"></span><br><span class="line">推销：老板、我们开盘了黄金、贵金属、原油期货投资渠道，可以少量买一点试试，觉得不错的您再入金 balabala。。</span><br><span class="line"></span><br><span class="line">我：你们是什么公司？或者什么平台？</span><br><span class="line">推销：xxxx公司（没听过，记不住）</span><br><span class="line"></span><br><span class="line">我：如果我买了我可能拿到实物吗？</span><br><span class="line">推销：啊，我们这个是贵金属是存在银行里的，不用实物交割，价格就是市场的价格，但是我们这里是以千分之一的份额递增的，balabala。。</span><br><span class="line"></span><br><span class="line">我：我觉得你们的交易成本蛮低的，那我可以提取实物吗？</span><br><span class="line">推销：实物交割太麻烦了，balabala。。我们这个的优势是balabala。。您只需要在手机上买卖就可以轻松挣大钱了。</span><br><span class="line"></span><br><span class="line">我：我还是学生</span><br><span class="line">推销：。。。</span><br></pre></td></tr></tbody></table></figure></div><h3 id="2、入局前如不能制定规则，最起码要熟悉规则（对平台、对个人）"><a href="#2、入局前如不能制定规则，最起码要熟悉规则（对平台、对个人）" class="headerlink" title="2、入局前如不能制定规则，最起码要熟悉规则（对平台、对个人）"></a>2、入局前如不能制定规则，最起码要熟悉规则（对平台、对个人）</h3><p>其实这个前半句基本上是废话，大家都知道庄家通吃一切，但是不是人人都可以的，所以作为绝大部分人要熟悉规则，最起码要看完合同上的条款，这个是对你权益的最终保障</p><h3 id="3、要重新考虑杠杆的含义，有些表面上没有杠杆，但是也可以把底裤输掉。"><a href="#3、要重新考虑杠杆的含义，有些表面上没有杠杆，但是也可以把底裤输掉。" class="headerlink" title="3、要重新考虑杠杆的含义，有些表面上没有杠杆，但是也可以把底裤输掉。"></a>3、要重新考虑杠杆的含义，有些表面上没有杠杆，但是也可以把底裤输掉。</h3><p>长久以来，我都是把借钱投资这个叫做杠杆，但是经过这一事之后，对这个杠杆似乎有更深入的理解， 本质上，本金不足以支撑头寸的时候，你就欠钱了，这个时候已经产生了杠杆，也就是说头寸高于权益就是有杠杆的，那么权益为负肯定是有杠杆的。100%保证金的交易，在做空时，只要发生亏损，就变成了带杠杆的交易了。</p><p>如果买入价格为正时，比如100%保证金100w进场，当货值跌倒-10w时，你已经亏损了110w，权益从100w变成-10w，倒欠保证金，这就已经产生了杠杆。</p><p>如果买入价格为负时，假定100w现金，无论买入多少货值，权益还是100w，以为头寸时负值，你买入的商品得到的收益被负价格的商品抵消（即你现在要处理掉商品，你也是以负价格卖出），所以你的权益是不变的。</p><h3 id="4、当某一投资观念大众形成了统一的看法，那么就不要涉足了。"><a href="#4、当某一投资观念大众形成了统一的看法，那么就不要涉足了。" class="headerlink" title="4、当某一投资观念大众形成了统一的看法，那么就不要涉足了。"></a>4、当某一投资观念大众形成了统一的看法，那么就不要涉足了。</h3><p>从宏观上来说，人类的财富价值总和是和蕴含在万物的人类无差别的劳动力所凝结成的，在短时间内，不发生技术革命的前提下生产力不可能成倍数增加，那么一个投资观念如果可以获利，那么资本会蜂拥而至，迅速抹平这个差距，而普通大众还没有意识到这个可以获利的方式，等到迅速抹平了之后，我们才会看到这个“机会”，因为前面已经有了吃螃蟹的人，那么只要自己照着做一定也会吃到的，可是螃蟹就是那么多，先去的吃到了，留给后来人可以食用的就不多了。</p><h3 id="5、不懂得不要碰，懂的不能承受最大风险的不要碰。"><a href="#5、不懂得不要碰，懂的不能承受最大风险的不要碰。" class="headerlink" title="5、不懂得不要碰，懂的不能承受最大风险的不要碰。"></a>5、不懂得不要碰，懂的不能承受最大风险的不要碰。</h3><p>这个很好理解，不仅仅是投资理财，我们生活中方方面面也都是这样，凡是要考虑风险与收益是否都是自己能够承担的，尝鲜嘛也要提前了解最大的风险，要不那就在玩火，稍不留神就会自焚。这个一定要切记。</p><h3 id="6、慎买银行理财"><a href="#6、慎买银行理财" class="headerlink" title="6、慎买银行理财"></a>6、慎买银行理财</h3><p>这里不是因为这个事情而贬低银行，其实如果你能充分的了解所购买的东西，并且和你预期的一致，银行理财产品是完全没有问题的。</p><p>这里所说的慎买的风险主要是在客户可能根本不了解买的是什么东西，大多数银行理财产品交易的地点都是在银行的营业部，这个就无形中用了银行这个品牌做了强大的背书，让人们从心里感到安全感，但是你可能不知道有些产品可能根本不属于银行，他们只是借了银行营业厅的一部分场地而已，其次，相关的营销人员可能会在有意无意的引导你的购买决策，可能只是把有限的决定权留给你而已。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">比如：你早上买煎饼，当商家问你加一个蛋还是两个蛋的时候，大部分人会在这两个选项里选择一个，很少有人会说我不要蛋或者我要加五个蛋。</span><br></pre></td></tr></tbody></table></figure></div><p>再次，银行的理财产品包装的很美好，这个就需要用锐利的眼光去分辨了，比如说会推荐某些理财产品说收益多少（大约4%高于10w三年前的定期存款收益）同时还会附赠你保险服务，不但有超高的收益同时还会提供保障之类的balabala。。。那么你最终买下来的有很大可能是经过包装的年金险。这个年金险究竟好不好，因人而异。但是有一个原则是专业的事情交给专业的人去做。</p><h3 id="7、耐心是一种美德"><a href="#7、耐心是一种美德" class="headerlink" title="7、耐心是一种美德"></a>7、耐心是一种美德</h3><p>在资本市场里似乎没有什么一招鲜吃遍天的传说，一个领域的成功很难复制到另外一个领域，所以，一旦你有了某种投资的观念，那么就请坚持下来，除非你有明确的证据证明你之前的理念是错误的，否则，请耐心的等待，认真的培育，为了将来的那个机会，早早的布下筹码，苦心经营，相信机会到来的那一瞬间会带来你想要的。</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/ymz.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/ymz.png" class="lazyload" title></a></p></body></html>]]></content>
      
      
      <categories>
          
          <category> 投资 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 投资 </tag>
            
            <tag> 活久见 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>要从头开始学习算法啦</title>
      <link href="/posts/1711964220/"/>
      <url>/posts/1711964220/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>这个起因说起来还很不好意思呢，最开始接触算法的时候是在高中的时候，一次上计算机课程，老师问有没有想参加NOIP的，当时不是很懂，老师解释说是学习计算机编程，通过相关算法解决问题，因为比较年轻，对新鲜的事物充满了好奇，于是就报名了。后来有了大部分时间可以泡在机房里了，但是当时其实对算法不怎么感兴趣，虽然也学过什么快排、堆排、动态规划、二叉树、背包问题什么的，因为当时心思不在这个上面，和几个小玩伴把方向走偏了，其实大部时间泡在机房都是去搞信息安全和看动漫去了，所以理所当然NOIP成绩很糟糕，也错失了保送名牌大学的机会。</p><p>同时由于大部分时间泡在机房里，所以文化课多多少少会有些影响，后来父母知道后对我进行了禁止接触计算机的管制，并且一致认为去搞计算机没什么前途（大概在10多年前吧），后来高考结束后，勉勉强强考了一个211，父母当时坚决抵制我进行报计算机、软件等相关专业，希望我去做医生、老师、海关、税务等，我们进行和友好协商，最后报了机械工程学院。哈哈哈，然后开启了更苦逼的生涯。</p><hr><p>其实在刚上大学的时候，很多计算机的相关技能都没有荒废，所以相关课程成绩很是突出，然后大一的时候我们宿舍组团选修了《计算机游戏设计基础》这门课程，当时也是为了蹭点学分，觉得选修课程也没什么，后来去上课发现，除了我们其余都是计算机专业的，要组小队，然后我们7个业余的机械专业的自成一个小队，（我们尝试过加入其他小队，但是他们不接纳，他们也是组团玩的）气死了。。。后来就变成我挑起这个小队的大梁，勉勉强强完成最初是的DEMO，算是把这个小队成功的带过及格圈里。</p><p>不过我们小队成功的引起了老师的注意，老师私下要招募我，怂恿我去转专业，然后好好带我，将来年薪400k起步，当时可能被禁止接触计算机太久了，果断的拒绝了老师，立志要为中国的机械行业添砖加瓦，老师说他还有二级钳工的证书，当时我的理解，二级钳工就可以去做核弹、原子弹这类的了（别问我哪里知道的，我不会告诉你是《五号特工组》里的托马斯西奥），我还很是遗憾的劝诫老师为啥不在机械行业里深耕，将来或许和钱学森前辈齐名呢（现在想起来，恨不得抽自己俩大嘴巴）就这样我离这个行当越来越远了，后来下个学期选修的时候，我发现了《计算机游戏设计基础》这门课的报名门槛已经变成了仅限计算机专业大二及以上年级选修，不知道是不是我们机械小队给了老师一记暴击。。。</p><hr><p>后来大学终于毕业了，也慢慢看清楚了目前的格局，很是后悔啊。好在还有机会来修正路线，现在刚刚换了工作，和以前的机械行业、自动化行业挥挥手~~顺利的加入码农大军。<br>好了，不知不觉又扯远了，回过来将正题，已经超过5年没写过代码了，很多东西都已经王的差不多了，那就重新开始吧。</p><hr><p>那么最直接的引子是什么呢，入职后的第一次模拟考试，看到题目和提示，我已经知道大概可以用动态规划来解决，但是，我不会了！！不会了！！不会了！！啊啊啊啊。。。好气啊，然后最后只能老老实实的按照逻辑写，虽然最后通过了，但是没有双百（时间复杂度和空间复杂度超过100%的提交人），不开心，怀疑我有洁癖。</p><p>好了，在哪里跌倒就在那里站起来，看来以后要熬夜看算法和熟悉语法了。SSSS<br><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/v2-1f601b8c4987a6954a4e3aa53f4ec53b_hd.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/v2-1f601b8c4987a6954a4e3aa53f4ec53b_hd.jpg" class="lazyload" title></a></p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/ymz.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/ymz.png" class="lazyload" title></a></p></body></html>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小白应该明白的点点滴滴</title>
      <link href="/posts/2304344700/"/>
      <url>/posts/2304344700/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><hr><h1 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h1><p>  在前些日子，我的一个朋友想我借钱，因为时常联系，彼此之间还是了解不少的，知道其最近刚刚离职并且短期内不会去找工作，偿还能力会有所下降，本着朋友能帮就帮的原则，我问问了其借钱的用途，原来是看前一阵子行情不错，想上杠杆，富贵险中求（很是无奈），盘算了一下手里的余粮：自1月下旬开始放假到今还没有上班，过年给了父母3w的红包，加上年后看中一台电脑1w2，然后3月初会扣掉保险钱1w2，加上要交房租保守计算2.5k*4押一付三也差不多1w左右了，索性没有什么房贷车贷的压力，还还花呗、信用卡，那么年前发的工资和年终奖剩下的钱还能勉勉强强度日。二月份我也离职了，正在换工作的窗口期，也就没有了收入，疫情闹得做些什么也不是很方便。遂拒绝了他 >_<</p><h1 id="灵魂拷问：投资理财的目的是什么？"><a href="#灵魂拷问：投资理财的目的是什么？" class="headerlink" title="灵魂拷问：投资理财的目的是什么？"></a>灵魂拷问：投资理财的目的是什么？</h1><p>面对这个灵魂拷问，大家的答案就多种多样了，有的是为了实现财富自由；有的是为了去实现梦想；有的是为了可以体验一下有钱人的快乐与烦恼等等不一而足。</p><p>不管是为了什么，有了目的是好事，那具体怎么去规划实现目的呢？<br>这个就不由我们深思了，你可以读一读下面的，希望可以带来一点启发。</p><h1 id="什么是理财？"><a href="#什么是理财？" class="headerlink" title="什么是理财？"></a>什么是理财？</h1><p>首先明确一点，理财不是投资，而是对待财富的一种处置态度及规划方案。</p><p>所以从这一点上来看，目前你是否有钱对于你的行动没有任何关系，即使身无分文或者负债累累，这都不影响。我们可以从点点滴滴开始你的财富之旅。</p><h2 id="记账"><a href="#记账" class="headerlink" title="记账"></a>记账</h2><p>记账是理财的第一步，虽然记账不会生钱同时还要浪费时间和精力，但是通过记账你可以知道你的钱是怎么来的，同时又是怎么走的，让你对于自身的财富有了更加清晰的掌控。还可以及时理清目前的状况，做出相应的调整，拜托月光或者把钱用到更有价值的地方上去。</p><h2 id="攒钱"><a href="#攒钱" class="headerlink" title="攒钱"></a>攒钱</h2><p>那么理财的第二步就是攒钱了，虽然投资这东西说的好听点就是钱生钱，但是连本都没有那从何谈起呢，小钱靠攒，大钱靠运，没有合适的资源，那么第一桶金绝大部分是要靠攒的。</p><h1 id="那么具体怎么去做呢？"><a href="#那么具体怎么去做呢？" class="headerlink" title="那么具体怎么去做呢？"></a>那么具体怎么去做呢？</h1><h2 id="盘点"><a href="#盘点" class="headerlink" title="盘点"></a>盘点</h2><p>我们要首先知道自己有多少米，那就要盘点一下自身的资产负债情况。咱们普通人资产结构比较简单，资产大致分为：现金类、投资类、期权类、自用类、无形类、其他。负债大致可以分为：消费类、投资类、自用类。</p><p>这里举几个简单的例子：钱包里的现金、银行卡里的余额都算现金类的资产；股票账户里的股票、债券等等都是投资类的资产，如自住房屋、自用代步工具都属于自用类资产。</p><p>比如花呗基本上都是消费类的负债，用于投资买的房产的贷款就是投资类负债。</p><p>你可以根据上面的分类简单的列个表格</p><table><thead><tr><th></th><th></th><th>家庭资产负债表</th><th></th><th></th></tr></thead><tbody><tr><td>资产项</td><td></td><td></td><td>负债项</td><td></td></tr><tr><td>现金及等价物</td><td>活期存款</td><td></td><td>消费性负债</td><td>信用卡、花呗、白条等</td></tr><tr><td></td><td>定期存款</td><td></td><td></td><td>外债</td></tr><tr><td></td><td>货币基金</td><td></td><td></td><td></td></tr><tr><td>投资型资产</td><td>债券</td><td></td><td>投资型负债</td><td>出租房屋的房贷</td></tr><tr><td></td><td>基金</td><td></td><td></td><td>向外租用设备的贷款</td></tr><tr><td></td><td>股票</td><td></td><td></td><td></td></tr><tr><td></td><td>外汇</td><td></td><td></td><td></td></tr><tr><td></td><td>出租房</td><td></td><td></td><td></td></tr><tr><td></td><td>向外租用的设备</td><td></td><td></td><td></td></tr><tr><td>自用性资产</td><td>自住房</td><td></td><td>自用性负债</td><td>自用房房贷</td></tr><tr><td></td><td>自用车</td><td></td><td></td><td>自用车车贷</td></tr><tr><td>其他资产</td><td>公积金</td><td></td><td></td><td></td></tr><tr><td>合计</td><td></td><td></td><td></td><td></td></tr><tr><td>净资产</td><td></td><td></td><td></td><td></td></tr></tbody></table><p>是不是通过盘点就大致清楚了自己有多少米呢？然后我们就可以根据自身的资产负债状况有针对性的制定策略了。</p><h3 id="存钱"><a href="#存钱" class="headerlink" title="存钱"></a>存钱</h3><p>存钱这是个亘古不变的行为，就拿最近的事情来说，一两个月没有工资，支出却不减少，手里没有点余量那可真是度日如年啊，所以一点要学会工资发下来，先存起来，然后再花钱，还可以利用信用卡、花呗、白条等做一个“宝呗青年”，首先这个可不是鼓励去超前消费啊，这个是在确保自己目前能支付的起，优先使用的，相当于一个短期的无息贷款，同时自己的钱却在余额宝这类的具有高流动性有收益的账户里赚取一点点利润，苍蝇再小也是肉啊，要养成良好的习惯，杜绝超前消费，不当月光族。</p><p>定期的存钱可以建立良好的储蓄习惯，还可以增强底气。</p><h3 id="还款"><a href="#还款" class="headerlink" title="还款"></a>还款</h3><p>如果你有负债，一定要在资产负债盘点的时候，分析自己的钱到底花在了哪儿？</p><p>搞清这个问题至关重要，因为它可以让你不在同一个坑上连续栽跟头。</p><p>找到问题的症结后，再根据债务的金额、利息、还款周期，制定具体的还款计划，有些诸如房贷之类的长期债务，甚至可以用投资收益来对冲掉房贷利息。</p><p>无论是存钱也好，还是还债也罢，这两件事都不是一个可以在朝夕间解决的，这当中，最重要的就是坚持。</p><p>有些事儿，不是看到改变，之后再去坚持，而是坚持下去，才会有所改变。</p><h3 id="自我保障"><a href="#自我保障" class="headerlink" title="自我保障"></a>自我保障</h3><p>存钱、还债、投资向目标进发是件好事儿，但过犹不及。</p><p>这里先举一个反例：</p><p>年前，可转债的发行量非常密集，小a接连中了多只新债，本来是一件好事，但他把全部的流动资金，都砸进了新债里，苦哈哈地说：要等年终奖续命。</p><p>这个小伙伴犯的最大问题，就是把自己的生活准备金也给砸进去了，如果在这种情况下，二房东突然破产跑路，房东要收回房子，他该怎么办？又或者遇到裁员、意外，又该怎么办？</p><p>在任何时候，我们都要备好生活准备金，虽然小投不希望大家会用到这笔资金，但是有备无患嘛~</p><p>套用一句话说：我们永远不知道明天和意外哪一个先来。备好准备金我们才能在意外来临时与它周旋一番。</p><p>当然，生活准备金只能抵御我们生活当中的小意外，在遇到大型意外的时候，保险才是挑大梁的角色。</p><p>盘点完资产负债，制定了通用计划，做足了保障，下一步我们就可以进入投资话题了。</p><h2 id="进阶目标"><a href="#进阶目标" class="headerlink" title="进阶目标"></a>进阶目标</h2><h3 id="正视风险"><a href="#正视风险" class="headerlink" title="正视风险"></a>正视风险</h3><p>虽然老话常说高风险高收益，想要赚大钱，就得担得起高风险，但是在真实的投资市场当中，风险和收益其实并不对等。</p><p>很多股民听了高风险高收益这句鬼话，在啥都不懂的情况下，就一头扎进了股市当中，高收益没见着，高风险倒是一点也没错过。</p><p>投资当中的风险水平，很大一部分取决于你的认知水平，有很多风险其实是可以预见的，甚至正因为有着这些风险带来的波动，才会让一些人赚取超额收益。</p><p>投资有风险不是一句玩笑话，在把钱投进去之前，一定要思考一个问题：这个标的回撤多少我会睡不着觉。</p><p>在投资中，心态是非常重要的一环，如果亏损之后辗转反侧难以入眠，则很有可能被情绪左右决策，造成更大损失。</p><p>仔细评估自身的风险承受能力，如果不能承受亏损，可以先从货币基金之类的理财产品开始；</p><p>如果只能承受-5%-10%的亏损，可以参与到债券基金中……</p><p>另外强调一点，如果不能承受50%以上的亏损，一定突发奇想跟着某些消息一起去炒概念，2018炒雄安概念的人，到现在都被牢牢地套着呢。</p><h3 id="规划投资"><a href="#规划投资" class="headerlink" title="规划投资"></a>规划投资</h3><p>看清了风险、目标，才能规划出更适合自己的投资标的。</p><p>账户上的钱，总归会有各种各样的用途，根据使用的周期可以分为三类：</p><p>生活备用金一类的现金；<br>过段时间要用，但现在不用的钱；<br>长期闲置的钱。</p><p>生活备用金一类的现金，可以放在低风险，高灵活度的产品上面，比如：余额宝、零钱通、部分的新型存款。</p><p>有具体时间要花销的钱，可以根据使用周期，可以放在中短债、定期的一些理财产品或者存款，比如：XX中短债、XX银行30天XX之类的。</p><p>长期闲置的钱，就可以投向一些高回报的产品了，如果你的专业知识很强，也许你可以在股票上大展拳脚，如果专业知识不强，那最好的选择就是指数基金。</p><p>最后的最后，股票交易的本质就是低买高卖，如何实现低买高卖呢，就是你和别人有意见的不同，要么你知道的信息比别人更多（你知道这是一家好公司，业绩正在好转），要么你看到的别人没看到（这家公司虽然增长很快，但是这里面有很多水分）。</p><p>当然这些都是很浅的例子，更深的信息需要更深层次的挖掘。</p><p>我们普通人既没有内幕消息（普通人能看到的消息，它不是内幕，甚至可能是鱼饵），也没有啥上市公司总裁级的亲属，想要看到别人看不到的消息，就必须学会在公开的官方信息当中，抽丝剥茧，找到那些别人看不到，就算看到也看不懂的核心知识。</p><p>看到这些，你必须具备非常过硬的专业知识，积极学习，保持良好的投资心态，才是在投资中获胜的不二法门。</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/ymz.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/ymz.png" class="lazyload" title></a></p></body></html>]]></content>
      
      
      <categories>
          
          <category> 投资 </category>
          
          <category> 小白 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 投资 </tag>
            
            <tag> 小白 </tag>
            
            <tag> 理财 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>这是一篇关于markdown语法的测试</title>
      <link href="/posts/3632233996/"/>
      <url>/posts/3632233996/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><hr><h1 id="横线"><a href="#横线" class="headerlink" title="横线"></a>横线</h1><p>***、—、___可以显示横线效果</p><hr><h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><h1 id="文本"><a href="#文本" class="headerlink" title="文本"></a>文本</h1><h3 id="普通文本"><a href="#普通文本" class="headerlink" title="普通文本"></a>普通文本</h3><p>这是一段普通的文本</p><h3 id="单行文本"><a href="#单行文本" class="headerlink" title="单行文本"></a>单行文本</h3><pre><code>Hello,大家好，我是ymz。</code></pre><p>在一行开头加入1个Tab或者4个空格。</p><h3 id="文本块"><a href="#文本块" class="headerlink" title="文本块"></a>文本块</h3><h4 id="语法1"><a href="#语法1" class="headerlink" title="语法1"></a>语法1</h4><p>在连续几行的文本开头加入1个Tab或者4个空格。</p><pre><code>欢迎到访很高兴见到您祝您，早上好，中午好，下午好，晚安</code></pre><h4 id="语法2"><a href="#语法2" class="headerlink" title="语法2"></a>语法2</h4><p>使用一对各三个的反引号：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">欢迎到访</span><br><span class="line">我是C++码农</span><br><span class="line">你可以在知乎、CSDN、简书搜索【ymz】找到我</span><br></pre></td></tr></tbody></table></figure></div><p>该语法也可以实现代码高亮，见<a href="#代码高亮">代码高亮</a></p><h3 id="文字高亮"><a href="#文字高亮" class="headerlink" title="文字高亮"></a>文字高亮</h3><p>文字高亮功能能使行内部分文字高亮，使用一对反引号。<br>语法：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`linux` `网络编程` `socket` `epoll`</span><br></pre></td></tr></tbody></table></figure></div><p>效果：<code>linux</code> <code>网络编程</code> <code>socket</code> <code>epoll</code></p><p>也适合做一篇文章的tag</p><h4 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h4><p>直接回车不能换行，<br>可以在上一行文本后面补两个空格，<br>这样下一行的文本就换行了。</p><p>或者就是在两行文本直接加一个空行。</p><p>也能实现换行效果，不过这个行间距有点大。</p><h4 id="斜体、粗体、删除线"><a href="#斜体、粗体、删除线" class="headerlink" title="斜体、粗体、删除线"></a>斜体、粗体、删除线</h4><table><thead><tr><th>语法</th><th>效果</th></tr></thead><tbody><tr><td><code>*斜体1*</code></td><td><em>斜体1</em></td></tr><tr><td><code>_斜体2_</code></td><td><em>斜体2</em></td></tr><tr><td><code>**粗体1**</code></td><td><strong>粗体1</strong></td></tr><tr><td><code>__粗体2__</code></td><td><strong>粗体2</strong></td></tr><tr><td><code>这是一个 ~~删除线~~</code></td><td>这是一个 <del>删除线</del></td></tr><tr><td><code>***斜粗体1***</code></td><td><strong><em>斜粗体1</em></strong></td></tr><tr><td><code>___斜粗体2___</code></td><td><strong><em>斜粗体2</em></strong></td></tr><tr><td><code>***~~斜粗体删除线1~~***</code></td><td><strong><em><del>斜粗体删除线1</del></em></strong></td></tr><tr><td><code>~~***斜粗体删除线2***~~</code></td><td><del><strong><em>斜粗体删除线2</em></strong></del></td></tr></tbody></table><pre><code>斜体、粗体、删除线可混合使用</code></pre><h1 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h1><p>基本格式：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![alt](URL title)</span><br></pre></td></tr></tbody></table></figure></div><p>alt和title即对应HTML中的alt和title属性（都可省略）：</p><ul><li>alt表示图片显示失败时的替换文本</li><li>title表示鼠标悬停在图片时的显示文本（注意这里要加引号）</li></ul><p>URL即图片的url地址，如果引用本仓库中的图片，直接使用<strong>相对路径</strong>就可了，如果引用其他github仓库中的图片要注意格式，即：<code>仓库地址/raw/分支名/图片路径</code>，如：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/guodongxiaren/ImageCache/raw/master/Logo/foryou.gif</span><br></pre></td></tr></tbody></table></figure></div><table><thead><tr><th>#</th><th>语法</th><th>效果</th></tr></thead><tbody><tr><td>1</td><td><code>![baidu](http://www.baidu.com/img/bdlogo.gif "百度logo")</code></td><td><a href="http://www.baidu.com/img/bdlogo.gif" data-fancybox="group" data-caption="baidu" class="fancybox"><img alt="baidu" title="baidu" data-src="http://www.baidu.com/img/bdlogo.gif" class="lazyload"></a></td></tr><tr><td>2</td><td><code>![][code-past]</code></td><td>![][code-past]</td></tr></tbody></table><p>注意例2的写法使用了<strong>URL标识符</strong>的形式，在<a href="#链接">链接</a>一节有介绍。</p><blockquote><p>在文末有code-past的定义：</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[code-past]:https://img-blog.csdnimg.cn/201908060004034.png</span><br></pre></td></tr></tbody></table></figure></div><h1 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h1><h3 id="链接外部URL"><a href="#链接外部URL" class="headerlink" title="链接外部URL"></a>链接外部URL</h3><table><thead><tr><th>#</th><th>语法</th><th>效果</th></tr></thead><tbody><tr><td>1</td><td><code>[我的博客](http://blog.csdn.net/guodongxiaren "悬停显示")</code></td><td><a href="http://blog.csdn.net/guodongxiaren" target="_blank" rel="noopener" title="悬停显示">我的博客</a></td></tr><tr><td>2</td><td><code>[我的知乎][zhihu]</code></td><td>[我的知乎][zhihu]</td></tr></tbody></table><p>语法2由两部分组成：</p><ul><li>第一部分使用两个中括号，[ ]里的标识符（本例中zhihu），可以是数字，字母等的组合，标识符上下对应就行了（<strong>姑且称之为URL标识符</strong>）</li><li>第二部分标记实际URL。</li></ul><blockquote><p>使用URL标识符能达到复用的目的，一般把全文所有的URL标识符统一放在文章末尾，这样看起来比较干净。</p><blockquote><p>URL标识符是我起的名字，不知道是否准确。囧。。</p></blockquote></blockquote><h3 id="链接本仓库里的URL"><a href="#链接本仓库里的URL" class="headerlink" title="链接本仓库里的URL"></a>链接本仓库里的URL</h3><table><thead><tr><th>语法</th><th>效果</th></tr></thead><tbody><tr><td><code>[我的简介](/example/profile.md)</code></td><td><a href="/example/profile.md">我的简介</a></td></tr><tr><td><code>[example](./example)</code></td><td><a href="./example">example</a></td></tr></tbody></table><h3 id="图片链接"><a href="#图片链接" class="headerlink" title="图片链接"></a>图片链接</h3><p>给图片加链接的本质是混合图片显示语法和普通的链接语法。普通的链接中[ ]内部是链接要显示的文本，而图片链接[ ]里面则是要显示的图片。<br>直接混合两种语法当然可以，但是十分啰嗦，为此我们可以使用URL标识符的形式。</p><table><thead><tr><th>#</th><th>语法</th><th align="center">效果</th></tr></thead><tbody><tr><td>1</td><td><code>[![weibo-logo]](http://weibo.com/linpiaochen)</code></td><td align="center"><a href="http://weibo.com/linpiaochen" target="_blank" rel="noopener">![weibo-logo]</a></td></tr><tr><td>2</td><td><code>[![](/img/zhihu.png "我的知乎，欢迎关注")][zhihu]</code></td><td align="center">[<a href="/img/zhihu.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="/img/zhihu.png" class="lazyload"></a>][zhihu]</td></tr><tr><td>3</td><td><code>[![csdn-logo]][csdn]</code></td><td align="center">[![csdn-logo]][csdn]</td></tr></tbody></table><p>因为图片本身和链接本身都支持URL标识符的形式，所以图片链接也可以很简洁（见例3）。<br>注意，此时鼠标悬停时显示的文字是图片的title，而非链接本身的title了。</p><blockquote><p>本文URL标识符都放置于文末</p></blockquote><h3 id="锚点"><a href="#锚点" class="headerlink" title="锚点"></a>锚点</h3><p>其实呢，每一个标题都是一个锚点，和HTML的锚点（<code>#</code>）类似，比如我们 </p><table><thead><tr><th>语法</th><th>效果</th></tr></thead><tbody><tr><td><code>[回到顶部](#readme)</code></td><td><a href="#readme">回到顶部</a></td></tr></tbody></table><p>不过要注意，标题中的英文字母都被转化为<strong>小写字母</strong>了。</p><blockquote><p>以前GitHub对中文支持的不好，所以中文标题不能正确识别为锚点，但是现在已经没问题啦！</p></blockquote><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">* 昵称：ymz</span><br><span class="line">- 别名：夜忙猪</span><br><span class="line">* 英文名：ymz</span><br></pre></td></tr></tbody></table></figure></div><h4 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h4><ul><li>昵称：ymz</li></ul><ul><li>别名：隔壁老王</li></ul><ul><li>英文名：ymz</li></ul><h3 id="多级无序列表"><a href="#多级无序列表" class="headerlink" title="多级无序列表"></a>多级无序列表</h3><h4 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">* 编程语言</span><br><span class="line">    * 脚本语言</span><br><span class="line">        * Python</span><br></pre></td></tr></tbody></table></figure></div><h4 id="效果-1"><a href="#效果-1" class="headerlink" title="效果"></a>效果</h4><ul><li>编程语言<ul><li>脚本语言<ul><li>Python</li></ul></li></ul></li></ul><h3 id="一级有序列表"><a href="#一级有序列表" class="headerlink" title="一级有序列表"></a>一级有序列表</h3><h4 id="语法-2"><a href="#语法-2" class="headerlink" title="语法"></a>语法</h4><p>就是在数字后面加一个点，再加一个空格。不过看起来起来可能不够明显。 </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">面向对象的三个基本特征：</span><br><span class="line"></span><br><span class="line">1. 封装</span><br><span class="line">2. 继承</span><br><span class="line">3. 多态</span><br></pre></td></tr></tbody></table></figure></div><h4 id="效果-2"><a href="#效果-2" class="headerlink" title="效果"></a>效果</h4><p>面向对象的三个基本特征：</p><ol><li>封装</li><li>继承</li><li>多态</li></ol><h3 id="多级有序列表"><a href="#多级有序列表" class="headerlink" title="多级有序列表"></a>多级有序列表</h3><p>和无序列表一样，有序列表也有多级结构。</p><h4 id="语法-3"><a href="#语法-3" class="headerlink" title="语法"></a>语法</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 这是一级的有序列表，数字1还是1</span><br><span class="line">   1. 这是二级的有序列表，阿拉伯数字在显示的时候变成了罗马数字</span><br><span class="line">      1. 这是三级的有序列表，数字在显示的时候变成了英文字母</span><br></pre></td></tr></tbody></table></figure></div><h4 id="效果-3"><a href="#效果-3" class="headerlink" title="效果"></a>效果</h4><ol><li>这是一级的有序列表，数字1还是1<ol><li>这是二级的有序列表，阿拉伯数字在显示的时候变成了罗马数字<ol><li>这是三级的有序列表，数字在显示的时候变成了英文字母</li></ol></li></ol></li></ol><h3 id="复选框列表"><a href="#复选框列表" class="headerlink" title="复选框列表"></a>复选框列表</h3><h4 id="语法-4"><a href="#语法-4" class="headerlink" title="语法"></a>语法</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- [x] 需求分析</span><br><span class="line">- [x] 系统设计</span><br><span class="line">- [x] 详细设计</span><br><span class="line">- [ ] 编码</span><br><span class="line">- [ ] 测试</span><br><span class="line">- [ ] 交付</span><br></pre></td></tr></tbody></table></figure></div><h4 id="效果-4"><a href="#效果-4" class="headerlink" title="效果"></a>效果</h4><ul><li><input checked disabled type="checkbox"> 需求分析</li><li><input checked disabled type="checkbox"> 系统设计</li><li><input checked disabled type="checkbox"> 详细设计</li><li><input disabled type="checkbox"> 编码</li><li><input disabled type="checkbox"> 测试</li><li><input disabled type="checkbox"> 交付</li></ul><p>您可以使用这个功能来标注某个项目各项任务的完成情况。</p><blockquote><p>Tip:</p><blockquote><p>在GitHub的<strong>issue</strong>中使用该语法是可以实时点击复选框来勾选或解除勾选的，而无需修改issue原文。</p></blockquote></blockquote><h2 id="块引用"><a href="#块引用" class="headerlink" title="块引用"></a>块引用</h2><h3 id="常用于引用文本"><a href="#常用于引用文本" class="headerlink" title="常用于引用文本"></a>常用于引用文本</h3><h4 id="文本摘自《深入理解计算机系统》P27"><a href="#文本摘自《深入理解计算机系统》P27" class="headerlink" title="文本摘自《深入理解计算机系统》P27"></a>文本摘自《深入理解计算机系统》P27</h4><p>　令人吃惊的是，在哪种字节顺序是合适的这个问题上，人们表现得非常情绪化。实际上术语“little endian”（小端）和“big endian”（大端）出自Jonathan Swift的《格利佛游记》一书，其中交战的两个派别无法就应该从哪一端打开一个半熟的鸡蛋达成一致。因此，争论沦为关于社会政治的争论。只要选择了一种规则并且始终如一的坚持，其实对于哪种字节排序的选择都是任意的。</p><blockquote><p><strong>“端”（endian）的起源</strong><br>以下是Jonathan Swift在1726年关于大小端之争历史的描述：<br>“……下面我要告诉你的是，Lilliput和Blefuscu这两大强国在过去36个月里一直在苦战。战争开始是由于以下的原因：我们大家都认为，吃鸡蛋前，原始的方法是打破鸡蛋较大的一端，可是当今的皇帝的祖父小时候吃鸡蛋，一次按古法打鸡蛋时碰巧将一个手指弄破了，因此他的父亲，当时的皇帝，就下了一道敕令，命令全体臣民吃鸡蛋时打破较小的一端，违令者重罚。”</p></blockquote><h3 id="块引用有多级结构"><a href="#块引用有多级结构" class="headerlink" title="块引用有多级结构"></a>块引用有多级结构</h3><h4 id="语法-5"><a href="#语法-5" class="headerlink" title="语法"></a>语法</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">> 数据结构</span><br><span class="line">>> 树</span><br><span class="line">>>> 二叉树</span><br><span class="line">>>>> 平衡二叉树</span><br><span class="line">>>>>> 满二叉树</span><br></pre></td></tr></tbody></table></figure></div><h4 id="效果-5"><a href="#效果-5" class="headerlink" title="效果"></a>效果</h4><blockquote><p>数据结构</p><blockquote><p>树</p><blockquote><p>二叉树</p><blockquote><p>平衡二叉树</p><blockquote><p>满二叉树</p></blockquote></blockquote></blockquote></blockquote></blockquote><h2 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h2><h3 id="语法-6"><a href="#语法-6" class="headerlink" title="语法"></a>语法</h3><p>在三个反引号后面加上编程语言的名字，另起一行开始写代码，最后一行再加上三个反引号。</p><h3 id="效果-6"><a href="#效果-6" class="headerlink" title="效果"></a>效果</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[]args)</span></span>{} <span class="comment">//Java</span></span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">c</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> <span class="comment">//C</span></span></span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"hello GitHub"</span> <span class="comment">#Bash</span></span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">"myH1"</span>).innerHTML=<span class="string">"Welcome to my Homepage"</span>; <span class="comment">//javascipt</span></span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> &<span class="keyword">operator</span>+(<span class="keyword">const</span> <span class="built_in">string</span>& A,<span class="keyword">const</span> <span class="built_in">string</span>& B) <span class="comment">//cpp</span></span><br></pre></td></tr></tbody></table></figure></div><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><table><thead><tr><th>表头1</th><th>表头2</th></tr></thead><tbody><tr><td>表格单元</td><td>表格单元</td></tr><tr><td>表格单元</td><td>表格单元</td></tr></tbody></table><table><thead><tr><th>表头1</th><th>表头2</th></tr></thead><tbody><tr><td>表格单元</td><td>表格单元</td></tr><tr><td>表格单元</td><td>表格单元</td></tr></tbody></table><h3 id="对齐"><a href="#对齐" class="headerlink" title="对齐"></a>对齐</h3><p>表格可以指定对齐方式</p><table><thead><tr><th align="left">左对齐</th><th align="center">居中</th><th align="right">右对齐</th></tr></thead><tbody><tr><td align="left">col 3 is</td><td align="center">some wordy text</td><td align="right">$1600</td></tr><tr><td align="left">col 2 is</td><td align="center">centered</td><td align="right">$12</td></tr><tr><td align="left">zebra stripes</td><td align="center">are neat</td><td align="right">$1</td></tr></tbody></table><h3 id="混合其他语法"><a href="#混合其他语法" class="headerlink" title="混合其他语法"></a>混合其他语法</h3><p>表格单元中的内容可以和其他大多数GFM语法配合使用，如：  </p><h4 id="使用普通文本的删除线，斜体等效果"><a href="#使用普通文本的删除线，斜体等效果" class="headerlink" title="使用普通文本的删除线，斜体等效果"></a>使用普通文本的删除线，斜体等效果</h4><table><thead><tr><th>名字</th><th>描述</th></tr></thead><tbody><tr><td>Help</td><td><del>Display the</del> help window.</td></tr><tr><td>Close</td><td><em>Closes</em> a window</td></tr></tbody></table><h4 id="表格中嵌入图片（链接）"><a href="#表格中嵌入图片（链接）" class="headerlink" title="表格中嵌入图片（链接）"></a>表格中嵌入图片（链接）</h4><p>其实前面介绍图片显示、图片链接的时候为了清晰就是放在在表格中显示的。</p><table><thead><tr><th>图片</th><th>描述</th></tr></thead><tbody><tr><td>![baidu][baidu-logo]</td><td>百度</td></tr></tbody></table><h2 id="表情"><a href="#表情" class="headerlink" title="表情"></a>表情</h2><p>Github的Markdown语法支持添加emoji表情，输入不同的符号码（两个冒号包围的字符）可以显示出不同的表情。</p><p>比如<code>:blush:</code>，可以显示:blush:。</p><p>具体每一个表情的符号码，可以查询GitHub的官方网页<a href="http://www.emoji-cheat-sheet.com" target="_blank" rel="noopener">http://www.emoji-cheat-sheet.com</a>。</p><p>但是这个网页每次都打开<strong>奇慢</strong>。。所以我整理到了本repo中，大家可以直接在此查看<a href="./emoji.md">emoji</a>。</p><h2 id="diff语法"><a href="#diff语法" class="headerlink" title="diff语法"></a>diff语法</h2><p>版本控制的系统中都少不了diff的功能，即展示一个文件内容的增加与删除。<br>GFM中可以显示的展示diff效果。使用绿色表示新增，红色表示删除。</p><h4 id="语法-7"><a href="#语法-7" class="headerlink" title="语法"></a>语法</h4><p>其语法与代码高亮类似，只是在三个反引号后面写diff，<br>并且其内容中，可以用 <code>+</code>开头表示新增，<code>-</code>开头表示删除。<br>另外还有有 <code>!</code>和<code>#</code>的语法。</p><h4 id="效果-7"><a href="#效果-7" class="headerlink" title="效果"></a>效果</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">diff</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight diff"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="addition">+ 人闲桂花落，</span></span><br><span class="line"><span class="deletion">- 夜静春山空。</span></span><br><span class="line"><span class="addition">! 月出惊山鸟，</span></span><br><span class="line"># 时鸣春涧中。</span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/ymz.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/ymz.png" class="lazyload" title></a></p></body></html>]]></content>
      
      
      <categories>
          
          <category> 测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/1243066710/"/>
      <url>/posts/1243066710/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>哈哈哈，这个界面测试用</p><p>这个第一个界面，按照程序员的惯例，“你好，世界”</p><p>“Hello，World！”</p><p><del>好了，这个界面就这样吧！总的来说还是很高兴的，纯小白，租了一个服务器，摸爬滚打的，历时4天，终于有一个像模像样的页面了。</del></p><p>在这个漫长的假期里（这要从一只蝙蝠说起…hahahaha），本着生命不息，折腾不止的原则，我又换了架构。同时我也这这个漫长的假期里换了工作，以后我就是一个正儿八经的的码农啦，可能以后的硬件部分更新的不会特别勤快，又或者是不更了，你们要原谅我哦。经历太有限啦，要做的事情太多啦。</p><p>现在这个博客已经脱离了我之前的那个服务器，之前的文章有一部分还是会搬过来的，做个搬运工好累 0.0</p><p>没准哪天想开了，用那个服务器做个酸酸乳，亦或者搭一个私服。。哈哈哈，都不一定呢，走一步看一步吧，换的新工作而且还换行了，前两年的算是白干了，希望以后不会荒废这点技能，毕竟技多不压身，哈哈哈，好贪心啊我。新的工作好多事情要去学习，要去磨合，一起加油！！！A za a za~</p><p>现在终于可以踏踏实实的记录一些点滴了。</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/ymz.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/ymz.png" class="lazyload" title></a></p></body></html>]]></content>
      
      
      <categories>
          
          <category> 测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>硬件研发成本,除了元器件还有什么?</title>
      <link href="/posts/51501505/"/>
      <url>/posts/51501505/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>很多初创团队计算一个项目是否启动的时候，一般都会先评估BOM成本，然后评判项目是否能够承接。一些客户，也会在面对硬件团队的报价，会表示不理解，为什么比淘宝价贵这么多？</p><p>今天就来细数，除了BOM成本，硬件研发还有哪些成本。</p><h2 id="第一，人力成本。"><a href="#第一，人力成本。" class="headerlink" title="第一，人力成本。"></a>第一，人力成本。</h2><p>人是最宝贵的，也是最贵的。在硬件产品的全流程中的人力投入粗略评估。</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/640.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/640.png" class="lazyload" title></a></p><p>在整个研发流程中，各个环节所需要的人力投入都是需要进行评估的。如果对某一个环节在前期投入不足，一定会造成后续环节的时间加大投入。而且早期不解决问题，越到后期想解决，所带来的代价就会越大。</p><p>例如，如果在早期在器件选型的时候，对于器件生命周期的评估不准确，或者缺少评估。当产品量产后，发现关键器件已经部分或者全部厂家已经停产，则需要备货或者需要更改方案，带来的人力成本是非常大的浪费。</p><p>在整个研发过程中，每个环节的人力投入，或者每个环节的人力成本预算都不可以省略，或者进行裁剪需要进行严格的评估。</p><h2 id="第二、仪器仪表"><a href="#第二、仪器仪表" class="headerlink" title="第二、仪器仪表"></a>第二、仪器仪表</h2><p>万用表、示波器、稳压源这些常规的仪器仪表总要配备吧？你的电路涉及、射频、高速，所需要的仪器仪表的费用，那就不可估量了。</p><p>频谱分析仪、网络分析仪、信号发生器，配齐，发现一套二线城市的房子没有了。</p><p>曾经有一个人用6G带宽的示波器测试电源，被领导怒了：“你怎么拿着宝马测试电源。。。”</p><p>还有个人整天拿着一个极低噪声的频谱分析仪出差，也是胆战心惊，总说自己拎着房子在出差。</p><h2 id="第三、工具其实是消耗品"><a href="#第三、工具其实是消耗品" class="headerlink" title="第三、工具其实是消耗品"></a>第三、工具其实是消耗品</h2><p>除了仪器仪表，还有一些易耗品，工具：搞硬件嘛，螺丝刀，大的、小的、十字、一字，钳子：斜口钳、剥线钳、尖嘴钳；烙铁：烙铁头、烙铁芯、吸锡器、热风焊台，焊锡丝、吸锡扁带、助焊剂、松香、洗板水；镊子、弯头镊子、直头镊子；</p><p>5S做得不好，或者大家不爱惜的话，很容易工具丢失，或者损坏。而且有限工具是消耗品，例如镊子，·很容易变形，变得不能捏起0402封装的电容电阻。</p><h2 id="第四、改板"><a href="#第四、改板" class="headerlink" title="第四、改板"></a>第四、改板</h2><p>PCB制版，往往不是一次成功，可能会有一些错误、或者不稳定的因素，需要通过重新加工新版本的 PCB进行优化方案。如果在调测阶段的改板，主要浪费的是制版费、SMT、物料费用。如果在项目交付接近尾声的时候，如果这时候改板，则所有相关的环节都需要重新做一遍，试验、测试。造成的浪费和损失将会更大。</p><h2 id="第五、直通率"><a href="#第五、直通率" class="headerlink" title="第五、直通率"></a>第五、直通率</h2><p>直通率是对产品从第一道工序开始一次性合格到最后一道工序的参数，能够了解产品生产过程中在所有工序下产品直达到成品的能力，是反应企业质量控制能力的一个参数。</p><p>如果产品直通率不高，所带来的成本，有可能是产品报废率的成本，或者是维修的人力成本，都是极大的浪费。</p><p>直通率不但要关注SMT，还需要关注其他生产环节，结构件装配，生产测试等等。</p><h2 id="第六、物流费"><a href="#第六、物流费" class="headerlink" title="第六、物流费"></a>第六、物流费</h2><p>顺丰最贵，但是有时为了发货时间、稳定可靠，不得不选择。但是中通、德邦快递等等也是各自有各自的优势。</p><h2 id="第七、税费"><a href="#第七、税费" class="headerlink" title="第七、税费"></a>第七、税费</h2><p>之前，中小企业3%营业税。现在营改增。营业税改增值税（以下简称营改增）是指以前缴纳营业税的应税项目改成缴纳增值税，增值税只对产品或者服务的增值部分纳税，减少了重复纳税的环节，是党中央、国务院，根据经济社会发展新形势，从深化改革的总体部署出发做出的重要决策，目的是加快财税体制改革、进一步减轻企业税负，调动各方积极性，促进服务业尤其是科技等高端服务业的发展，促进产业和消费升级、培育新动能、深化供给侧结构性改革。</p><p>企业所得税的税率为25%的比例税率。</p><p>原“企业所得税暂行条例”规定，企业所得税税率是33%，另有两档优惠税率，全年应纳税所得额3－10万元的，税率为27%，应纳税所得额3万元以下的，税率为18%；特区和高新技术开发区的高新技术企业的税率为15%。外资企业所得税税率为30%，另有3%的地方所得税。新所得税法规定法定税率为25%，内资企业和外资企业一致，国家需要重点扶持的高新技术企业为15%，小型微利企业为20%，非居民企业为20%。</p><p>企业应纳所得税额=当期应纳税所得额*适用税率</p><p>应纳税所得额=收入总额-准予扣除项目金额</p><p>企业所得税的税率即据以计算企业所得税应纳税额的法定比率。根据《中华人民共和国企业所得税暂行条例》的规定，2008年新的<中华人民共和国所得税法>；规定一般企业所得税的税率为25%。</p><h2 id="第八、BOM清单中容易忽略的费用"><a href="#第八、BOM清单中容易忽略的费用" class="headerlink" title="第八、BOM清单中容易忽略的费用"></a>第八、BOM清单中容易忽略的费用</h2><p>除了元器件的采购，还有，结构件、开模费、线缆费用、连接器费用、包装、电源、外置天线，这些BOM清单里面的成本往往容易被忽略。</p><h2 id="第九、生产加工"><a href="#第九、生产加工" class="headerlink" title="第九、生产加工"></a>第九、生产加工</h2><p>PCB加工、SMT、整机装配、整机调测、包装。有一些产品在生产环节还需要特殊工艺：例如一些特殊环境的产品，需要做三防、打胶，有一些需要甚至需要做水密测试</p><h2 id="第十、维修、维护费用"><a href="#第十、维修、维护费用" class="headerlink" title="第十、维修、维护费用"></a>第十、维修、维护费用</h2><p>硬件产品售出之后，不是一卖了之。器件都有一点的失效率。器件、甚至包括一些结构件，不可能完全不损坏。现场的故障需要有人能解决，质保期的产品还需要维保。</p><h2 id="第十一、现场安装、升级"><a href="#第十一、现场安装、升级" class="headerlink" title="第十一、现场安装、升级"></a>第十一、现场安装、升级</h2><p>如果，远程搞不定的问题，可能还需要去现场安装、升级、调测。其中产生的差旅费，返修件、替换件等等，都需要成本支出。</p><h2 id="第十二、呆死料"><a href="#第十二、呆死料" class="headerlink" title="第十二、呆死料"></a>第十二、呆死料</h2><p>呆死、死料形成原因：1、设计改型后，原先的材料有新的替代料；2、采购过程中没有进行配套采购，多余的料就形成了呆死料；3、库房盘点不及时，对库存台账没有进行分析；4、材料没有保质期管理，长时间后，可用料变成无用料。</p><p>至此，我们也就可以清楚的看到硬件研发，除了物料成本之外，还有大量的成本需要支出。</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/ymz.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/ymz.png" class="lazyload" title></a></p></body></html>]]></content>
      
      
      <categories>
          
          <category> 硬件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 硬件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>嵌入式系统低功耗设计</title>
      <link href="/posts/3993218583/"/>
      <url>/posts/3993218583/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在嵌入式系统中，低功耗设计是在产品规划以及设计过程中必须要面对的问题。半导体芯片每18个月性能就能翻一倍，但同时，电池的技术却跟不上半导体的步伐，同体积的电池10年容量才能翻一倍，嵌入式系统对于使用时间以及待机时间问题的要求越来越高了。这就需要在设计过程充分考虑功耗的问题，可以从以下几个角度来分别考虑，然后统筹规划。</p><h2 id="1、低功耗器件选型"><a href="#1、低功耗器件选型" class="headerlink" title="1、低功耗器件选型"></a>1、低功耗器件选型</h2><p>随着半导体工艺的不断发展，半导体的制造工艺也在不断进步，选用先进工艺以及低功耗设计的元器件可以从源头上降低整个系统的功耗。</p><p>1）主控芯片的选型要充分考虑到系统的使用场景，对于运算任务比较多的应用场景下，可选用能耗比较高的芯片来设计，比如ambiq的apollo系列芯片，该芯片采用具有专利的spot技术，芯片在亚阈值稳定运行，可以减小能源消耗近14倍，实现极致的低功耗。</p><p>2）对于嵌入式系统，电源芯片对于低功耗设计是一个很重要的器件，电源芯片自身的功耗以及转换效率在很大程度上影响电池的使用时间，进行低功耗的稳压电路设计，需采用低功耗的LDO或DC-DC芯片，如Ti的TPS797系列，自身功耗仅1.2uA。</p><p>3）在满足功能需求的情况下，尽可能选用带触发输出功能的外部器件，及时关闭非需要轮询的外部器件，这样可以减小整体的功耗，同时也可以减少MCU的运行时间，平时Mcu可以一直处于睡眠状态，在满足出发条件时，由外部器件通过中断来唤醒MCU工作。</p><h2 id="2、硬件的低功耗设计与制造技术"><a href="#2、硬件的低功耗设计与制造技术" class="headerlink" title="2、硬件的低功耗设计与制造技术"></a>2、硬件的低功耗设计与制造技术</h2><p>硬件设计对于嵌入式系统的功耗也有着至关重要的因素。</p><p>1）对外围元器件的电源控制，采用带关断功能的器件，对于那些在进入低功耗模式下不需要工作的外设，可以使用MOS管电路并配合Mcu控制或者片选/使能引脚对局部的电路进行电源管理，在该设备不需要工作时，需尽量关断该部分电源以达到更低的功耗。</p><p>2）多级电压设计，电压与功耗之间有着密切的联系，因此功耗的降低可以考虑对于不同电路模块，使用不同的电压模块等级，采用DVFS动态电压频率技术，通过将不同电路模块的工作电压及工作频率降低到恰好满足系统最低要求，来实时降低系统中不同电路模块功耗的办法。</p><p>3）硬件设计对于MCU的每个IO口，都要避免IO口漏电流。当外设掉电时，IO口仍然会有潜在的电流输出，所以IO口需要默认配置成低电平或者高电平状态，避免漏电流。</p><h2 id="3、软件对于系统功耗的优化"><a href="#3、软件对于系统功耗的优化" class="headerlink" title="3、软件对于系统功耗的优化"></a>3、软件对于系统功耗的优化</h2><p>1）适当的降低CPU的运行频率，降低MCU的运行速度，可以有效的降低运行时需要消耗的电流，芯片的功耗和主频是线性的关系，更高的时钟频率意味着更快的MCU运行速度，那么MCU内部CMOS电路更快的开关频率，导致更高的运行电流和待机电流。</p><p>2）合理的使用MCU的待机模式，在当前没有任务需要处理时，将MCU进入低功耗的睡眠模式。对于使用嵌入式操作系统的嵌入式产品，一般都是在idle空闲任务中进入睡眠模式，但是为了进一步降低功耗，实现低功耗最优设计，我们还不能直接把谁爱你或者停机模式直接放在空闲任务就可以了，需要设计一种更先进的休眠机制，比如在freertos操作系统中使用tickless低功耗机制，进入空闲任务后，首先计算可以执行低功耗的最大时间，也就是求出下一个要执行的高优先级任务还剩多长时间，然后把低功耗的唤醒时间设置为这个求出的时间，到时间后，系统会从低功耗模式被唤醒，继续执行多任务。</p><p>3）关注每一个GPIO口的电平状态，在进入睡眠之前，配置所有的GPIO口到高电平或者低电平以降低漏电流。对于外挂的传感器以及外围设备，也需要在进入睡眠之前配置其功耗模式以降低消耗的电流。</p><p>4）合理的关闭MCU内部模块，对于在DeepSLeep模式下不需要工作的内部模块都要关闭时钟以及电源以节省功耗，同时要重点关注模拟IO口，模拟功能一般是耗电大户，在AD/DA功能不使用的时候尽快关闭，减小使用模拟功能的时间，此外，芯片内部SRAM由于要不停的刷新，在睡眠模式下也需要消耗一定的电流，可以配置部分SRAM在睡眠模式下保持刷新降低功耗。</p><p>5）对于包含有无线功能的芯片，配置合理的待机参数以此降低功耗，比如对于BLE芯片CSR1010，在进行BLE广播模式下，60ms的广播时间增大到1.28s，待机电流降低到28uA。对于wifi芯片，比如高通QCA4004芯片，在DTIM1情况下对应功耗为1.5mA，在DTIM10 情况下则降低到334uA 。</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/ymz.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/ymz.png" class="lazyload" title></a></p></body></html>]]></content>
      
      
      <categories>
          
          <category> 硬件 </category>
          
          <category> 低功耗 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 硬件 </tag>
            
            <tag> 低功耗 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开关电源基础知识</title>
      <link href="/posts/2454698225/"/>
      <url>/posts/2454698225/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h2 id="1、输出纹波噪声及输出电路的处理"><a href="#1、输出纹波噪声及输出电路的处理" class="headerlink" title="1、输出纹波噪声及输出电路的处理"></a>1、输出纹波噪声及输出电路的处理</h2><p>PWM开关电源的输出纹波噪声与开关的频率有关。其纹波噪声分为两大部分：纹波（包括开关频率的稳波和周期性及随机性漂移）和噪声（开关过程中产生）</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/power1.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/power1.png" class="lazyload" title></a></p><p>在纹波与噪声的测量过程中，如果不使用正确的测量方法将无法正确的测量出真正的输出纹波噪声。下面是推荐的测量方法：</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/power2.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/power2.png" class="lazyload" title></a></p><p>平行线测量法：输出管脚接平行线后接电容，在电容两端使用20MHz示波器探头测量。具体要求见上图，C为陶瓷电容，负载与模块之间的距离在51mm和76mm（2in和3in）之间。<br>在大多数电路中，电源模块都能满足要求，对于输出纹波有较为严格要求的电源系统可以在输出增加差模滤波器来进一步降低纹波，但在设计过程中注意尽量选择较小的电感和较大的电容，如果需要进一步减小噪声，需要加共模滤波器。</p><p>输入与输出及外壳之间加高压隔离电容（一般为1~2.2nF）也可以减小共模噪声。</p><h2 id="2、多路输出的交互调节及应用"><a href="#2、多路输出的交互调节及应用" class="headerlink" title="2、多路输出的交互调节及应用"></a>2、多路输出的交互调节及应用</h2><p>对于多路输出的电源模块，人们比较关心输出负载发生变化时不同输出路的相互见的影响。例如，当主路输出空载时，辅路输出的负载能力极低。 可以采用集成磁路的概念或者采取双路同步控制使输出电压之间的交互调节性大大改善。</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/power3.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/power3.png" class="lazyload" title></a></p><p>图中的Io1为主路的负载电流，Io2为辅路的负载电流，Vo2为辅路的输出电压<br>由上图可见，在主路负载从20%~100%变化时，辅路输出电压随辅路负载电流得到变化曲线中，辅路输出电压始终在±4%范围内。即使在最坏的情况，即主路空载辅路满载、主路满载辅路空载时，其输出电压也能保证在标称电压的±10%范围内。由此，对于输出稳压精度要求不太高的情况下，这种不稳压的辅路输出不仅能够满足供电的需求，而且相对成本低，器件少，可靠性高。建议用户首先考虑不稳压的电源模块。</p><h2 id="3、容性负载能力与电源输出保护"><a href="#3、容性负载能力与电源输出保护" class="headerlink" title="3、容性负载能力与电源输出保护"></a>3、容性负载能力与电源输出保护</h2><p>建议用户对电源模块的阻性负载取大于10%额定负载，这样模块工作比较稳定。</p><p>电容作为电源去耦及抗干扰能力的手段，在现代电子电路中必不可少，尤其是输出过载保护，容性负载能力不可能太大，否则保护特性将变差因此用户在使用过程中负载电容不应超过最大容性负载能力。</p><p>输出电流保护一般有五种方式：</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/power4.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/power4.png" class="lazyload" title></a></p><p>1）恒流式：当到达电流保护点时，输出电流随负载的进一步加重，略有增加，输出电压不断下降。<br>2）回折式：当到达电流保护点时，输出电流随负载的加重，输出电压不断下降，同时输出电流也不断下降<br>3）截止式：当达到电流保护点时，电源模块输出被禁止。<br>4）恒流-截止式：当到达电流保护点时，首先是恒流式的保护方式，当输出电流达到某值时，电源模块输出被禁止。<br>5）精确自恢复截止式：输出电流达到保护点，电源模块输出被禁止，负载减轻电路自恢复。</p><p>在大部分电路中使用恒流式和截止式较多，比较理想的保护方式是精确自恢复截止式或者恒流-截止式保护。其中恒流式、回折式保护的本质就是自恢复的，但是输出短路时的功耗较大，尤其是恒流式。而截止式、恒流-截止式保护的自恢复特性需加辅助复位电路来完成自恢复，其输出过载时的功耗可以通过复位电路的周期进行调整，即调整间歇启动时间间隔。一般电流保护1.2~2倍标称输出电流。精确自恢复截止式电流保护点设置为标称输出电流1.2倍或1.3倍。</p><p>一般输出有过压嵌位保护。</p><h2 id="4、负载瞬态响应"><a href="#4、负载瞬态响应" class="headerlink" title="4、负载瞬态响应"></a>4、负载瞬态响应</h2><p>当输出的负载迅速变化时输出的电压会出现上冲或下跌，电源模块经过调整恢复原输出电压。这个响应过程中有两个重要指标：过冲电压（Vo）和恢复时间（tr）。过冲越小、恢复时间越短，系统响应速度越快。一般在25%的标称负载阶跃变化，输出电压过冲为4%Vo，恢复时间为500us左右。</p><h2 id="5、热设计"><a href="#5、热设计" class="headerlink" title="5、热设计"></a>5、热设计</h2><p>由于电源模块的转换效率不可能是100%，因此自身有一定的功耗，电源模块本身发热的高低，主要取决于电源模块的转换效率，在一定我外壳散热条件下，电源模块存在一定的温升（即电源模块与环境温度的差异）。电源模块外壳散热表面积的大小直接影响温升。对于环境温度较高的地方，必须将模块降额使用以减小模块的功耗，从而减小温升，保证外壳温度不超过极限值。推荐用户根据环境条件降额使用模块电源，以获得较大的安全余量。</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/power5.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/power5.png" class="lazyload" title></a></p><p>对于功率较大的模块须加相应的散热器以使模块的温升下降，不同的散热器在自然散热的条件下有不同的对环境的热阻，主要影响散热器热阻的因素是散热器的表面积。</p><p>散热器的选择：假设电源模块的效率为η，最大基板允许温度为Tmax，则：电源的耗散功率为PD=Po*（1-η）/η；温差：ΔT=Tmax-Ta（Ta为环境温度）；则：散热器所需要的热阻Rth为：Rth=ΔT/PD；接下来我们只要查散热器的产品目录或手册，从中找出合适尺寸的、在合适环境及自然对流与辐射下的热阻值小于Rth的散热器即可。</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/ymz.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/ymz.png" class="lazyload" title></a></p></body></html>]]></content>
      
      
      <categories>
          
          <category> 硬件 </category>
          
          <category> 电源 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 硬件 </tag>
            
            <tag> 电源 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何为嵌入式设计选择最优的8位MCU？</title>
      <link href="/posts/245078137/"/>
      <url>/posts/245078137/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>尽管竞争激烈，而且32bit的ARM cortex-M处理器等新平台的市场份额在强劲增长，现今8bitMCU仍占据着这个微控制器市场的很大一部分。其优势主要在于以下几个因素：低成本、简单、快速掌握用法以及成熟的生态系统，这个生态系统包含无处不在的工具库。</p><p>目前的8bit MCU技术已经十分成熟，其价格已经接近其下限，这为开发人员带来了选择难题，在选型的时候有很多具有相似价格和功能的产品但是哪个才是最优的选择呢？</p><h2 id="1、生态系统"><a href="#1、生态系统" class="headerlink" title="1、生态系统"></a>1、生态系统</h2><p>1）工具</p><p>当成本成为嵌入式设计应该考虑的主要因素时，避免在编译器许可证或者编码环境花费资金是明智的。在选择MCU之前，请确认供应商的芯片和他们提供的软件示例是否能够在免费的开发平台上使用。否则取决于需要组件数量的不同，即使一家供应商的平均销售价格等于或高于另外一家，最终的实际花费成本也可能是较低的。</p><p>例如来自竞争厂商的两个基于8051的MCU选择可能具有类似的芯片价格，但工具成本不同。如果MCU供应商提供的基于8051的芯片缺少免费编译器或集成开发环境（IDE）许可证，则开发人员必须使用KEIL或IAR并支付许可费用，从而增加了项目的总投资。更加具有成本优势的选择是使用免费IDE和无限制KEIl许可证支持的8bit平台。</p><p>2）软件</p><p>一旦理解了编译器和开发环境，下一个隐形的技术指标是MCU平台上软件示例和生态系统的可用性。例如寻找那些为其外设提供大量代码示例的MCU供应商。这样可以轻松把控所需的每一个外设，如PWM、UART和ADC等等，然后将他们组合到一个项目中，就能很快地进入市场并增加潜在的收入，使得产品拥有更高的溢价能力，所以，良好的MCU生态系统可提供更高的性价比优势。</p><h2 id="2、技术指标：设计、特性和测试"><a href="#2、技术指标：设计、特性和测试" class="headerlink" title="2、技术指标：设计、特性和测试"></a>2、技术指标：设计、特性和测试</h2><p>在仔细阅读相对简单的8bit MCU规格书时，可以从数据手册的摘要中轻松的了解器件的功能，然后参考电气规格表以获得有关重要规格的更多详细信息。然而，事实上比看起来要更加复杂一点，开发人员应该考虑三个关键方面：（1)是否有对设计来说重要的最大值和最小值；（2）这些值的测试条件是否匹配实际使用情况；（3）这些参数是否得到设计、特性或者测试保证。</p><p>由于温度、VDD范围、工作频率和其他因素会影响设计中的真实值，因此需要始终谨慎考虑典型值。如今，业界常见的情况是：在一个基于另一个参数的技术指标下，会发生功能受限的情况。通常数据手册首页上会展现非常有吸引力的技术指标。然而，在深入研究电气技术规范表之后，很明显看似顶尖的技术参数仅存在于各个条件非常受限的情况下，这可能是实际应用环境所满足不了的情况，或者和设计的其他方面相冲突。这种错觉可能会导致失望、更严重的可能导致整个项目的前功尽弃，因为最初的最佳方案进来自首页，然后细读手册后发现那些特殊要求后，设计决策变得不那么明确了。</p><p>此外，在检查数据手册时，重要的是要研究注解，并了解它是否得到设计、特性或测试保证。通常设计在规格中有最低可信度，而测试在规格中有最大的信任度。</p><h2 id="3、灵活性和可扩展性"><a href="#3、灵活性和可扩展性" class="headerlink" title="3、灵活性和可扩展性"></a>3、灵活性和可扩展性</h2><p>在每个项目中切换不同架构和技术可能会推迟设计的完成，从而减缓产品上市时间，虽然供应商A的器件可能是手头项目的最佳选择，但供应商B可能有另外一款器件对于今年晚些时候的项目更好，这需要为每个项目进行优化、权衡并在之间重用开发成果。</p><p>所以在评估当前设计的供应商选择时，请确保他们拥有合适未来产品的解决方案仔细查看MCU系列中的每一个器件型号是值得的，这样能确保功能一致，并在移植到其他器件时不会牺牲重要的功能。</p><h2 id="4、寿命和供应保证"><a href="#4、寿命和供应保证" class="headerlink" title="4、寿命和供应保证"></a>4、寿命和供应保证</h2><p>8bit市场已经非常成熟，8bit器件也已经存在了几十年，因此，现在8bit器件的ASP非常低，这对开发人员来说很好，但对半导体供应商而言可能是个痛点，因为半导体供应商已经接近盈利最低点，而且一些供应商已经放弃 对其8bit产品的新品设计，当供应商发布其寿命终止（EOL）以及“不推荐用于新设计”（NRND）通知时，这种情况可能会变得令人担忧，这可能会威胁到最终产品的使用寿命。</p><p>MCU产品的使用寿命可能不是快速设计的关键问题，例如寿命短且快速下降的消费类产品，但对于医疗、汽车和工业应用来说至关重要，这些应用的终端产品常常需要两到三年的设计时间，然后其应用需求平缓的上升并持续超过10年，如果由于廉价8bit MCU停产而失去重要的、可盈利的终端产品市场，那么对于企业将是一个巨大的损失。</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/ymz.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/ymz.png" class="lazyload" title></a></p></body></html>]]></content>
      
      
      <categories>
          
          <category> 硬件 </category>
          
          <category> 选型 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 硬件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通过远程桌面图形界面的方式操作Ubuntu服务器</title>
      <link href="/posts/3759941023/"/>
      <url>/posts/3759941023/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>前一段时间，在服务器上使用了IIS服务，虽然之前就有耳闻，IIS服务会有各种各样莫名其妙的坑，让你来慢慢填，并且网上相关的资料少的可怜，这次相信大家的选择了，这里也就不吐槽IIS了，既然选用了apache，那Windows留着也没啥意思 了，干脆直接换Linux，这次直接装了公共镜像Ubuntu18.04.1 LTS 64位，然后意识到没有图形界面，就倒腾倒腾。</p><h2 id="目的："><a href="#目的：" class="headerlink" title="目的："></a>目的：</h2><p>希望通过本地的Windows远程桌面，通过远程桌面图形界面的方式操作服务器。</p><h2 id="具体实现方式："><a href="#具体实现方式：" class="headerlink" title="具体实现方式："></a>具体实现方式：</h2><p>(1) 首先通过Windows系统下连接Linux系统的命令行工具连接Ubuntu服务器,(工具:xshell,securecrt,putty等)。</p><p>(2) 通过Windows下工具连接到linux操作系统,之后打开命令窗口,切换到root权限。</p><p>(3) 先安装更新:apt-get upate。</p><p>(4) 安装xrdp:输入apt-get install xrdp–>回车–>输入”y”–>回车,安装完成。<br>(xrdp: An open source remote desktop protocol(rdp) server)</p><p>(5) 安装vnc4server:输入apt-get install vnc4server”–>回车–>输入”y”–>回车,安装完成。<br>(VNC (Virtual Network Console)是虚拟网络控制台的缩写)</p><p>(6) 安装xfce4:输入apt-get install xubuntu-desktop”–>回车–>输入”y”–>回车。<br>–>输入echo “xfce4-session” >~/.xsession–>回车–>输入 service xrdp restart–>回车,安装完成。<br>(Xfce是一个自由软件,运行在类Unix操作系统 (如Linux、FreeBSD 和 Solaris)上,提供轻量级桌面环境。)</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/Ubuntu1.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/Ubuntu1.png" class="lazyload" title></a></p><p>(7) 在本地Windows电脑上,使用”窗口键+R”打开”运行对话框”–>输入”mstsc”–>回车–>输入Ubuntu主机的IP地址–>”连接”。</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/Ubuntu2.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/Ubuntu2.png" class="lazyload" title></a></p><p>(8) 选择”sesman-Xvnc”–>输入”用户名和密码”–>回车,成功登录到Ubuntu桌面,现在可以进行远程操作了。</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/Ubuntu3.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/Ubuntu3.png" class="lazyload" title></a></p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>界面是看到了，但是对于服务器的资源消耗比较严重，所以就不要这个功能了，还是老老实实的用命令行吧。>_<</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/ymz.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/ymz.png" class="lazyload" title></a></p></body></html>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
          <category> Ubuntu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UCCx8C4x BiCMOS低功耗电流模式PWM控制器（ucc28c40）</title>
      <link href="/posts/1574715952/"/>
      <url>/posts/1574715952/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>前一段时间（很长很长的一段时间）安排了一些电源设计的工作，发现了一个PWM控制器，略有感触，记录一下。ti的片子，手册如下：<a href="http://www.ti.com/cn/lit/ds/symlink/ucc28c40.pdf" target="_blank" rel="noopener">http://www.ti.com/cn/lit/ds/symlink/ucc28c40.pdf</a></p><h2 id="描述："><a href="#描述：" class="headerlink" title="描述："></a>描述：</h2><p>UCCx8C4x系列是高性能，电流模式PWM控制器。UCCx8C4x是增强型BiCMOS版本，与业界标准UCx84xA系列和UCx84x系列PWM控制器具有引脚对引脚兼容性。BiCMOS技术提供更低的功耗，以提高效率以及更快的电流检测和振荡器频率。此外，7 V的较低启动电压版本作为UCCx8C40和UCCx8C41提供，用于电池系统。UCC28C4x系列的额定工作温度范围为-40°C至105°C，UCC38C4x系列的工作温度范围为0°C至70°C。</p><p>该系列提供控制固定频率，峰值电流模式电源的必要功能，具有以下性能优势。该器件提供高达1 MHz的高频工作，适用于高速应用。与UCx84x系列相比，经过调整的放电电流可以更精确地编程最大占空比和死区时间限制。降低启动和工作电流可最大限度地降低启动损耗和低工作功耗，从而提高效率。该器件还具有35 ns的快速电流检测输出延迟时间，可在电源开关上实现出色的过载保护，并具有±1 A的峰值输出电流能力，并可改善直接驱动大型外部MOSFET的上升和下降时间。</p><h2 id="功能框图"><a href="#功能框图" class="headerlink" title="功能框图"></a>功能框图</h2><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/blockdia_slus458.gif" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/blockdia_slus458.gif" class="lazyload" title></a></p><h2 id="引脚定义"><a href="#引脚定义" class="headerlink" title="引脚定义"></a>引脚定义</h2><h3 id="1、-COMP"><a href="#1、-COMP" class="headerlink" title="1、 COMP"></a>1、 COMP</h3><p>UCCx8C4x系列中的误差放大器具有1.5 MHz的单位增益带宽。COMP端子可以提供电流和吸收电流。误差放大器在内部是电流限制的，因此可以通过外部强制COMP到GND来命令零占空比。</p><h3 id="2-、FB"><a href="#2-、FB" class="headerlink" title="2 、FB"></a>2 、FB</h3><p>FB是误差放大器的反相输入。误差放大器的同相输入内部调整为2.5 V±1％。FB用于控制电源转换器电压反馈环路的稳定性。为获得最佳稳定性，请尽可能缩短FB引线长度，尽可能缩小FB杂散电容。</p><h3 id="3-、CS"><a href="#3-、CS" class="headerlink" title="3 、CS"></a>3 、CS</h3><p>UCCx8C4x电流检测输入直接连接到PWM比较器。将CS连接到MOSFET源极电流检测电阻。PWM使用该信号终止OUT开关导通。可以对该引脚施加电压斜坡，以使用电压模式控制配置运行器件或增加斜率补偿。为防止由于前沿噪声引起的误触发，可能需要RC电流检测滤波器。电流检测放大器的增益通常为3 V / V.</p><h3 id="4-、RT-CT"><a href="#4-、RT-CT" class="headerlink" title="4 、RT / CT"></a>4 、RT / CT</h3><p>RT / CT是振荡器定时引脚。对于固定频率操作，通过在VREF和RT / CT之间连接一个电阻来设置定时电容充电电流。通过将定时电容从RT / CT连接到GND来设置频率。为获得最佳性能，请将定时电容引线尽可能短且直接接地。如果可能，请为定时电容和所有其他功能使用单独的接地走线。</p><p>UCCx8C4x的振荡器允许工作在1 MHz。该器件使用外部电阻设置外部电容的充电电流，从而决定振荡器频率。TI建议定时电阻值为1kΩ至100kΩ，定时电容值为220 pF至4.7 nF。UCCx8C4x振荡器适用于较低频率的原始双极器件的曲线，但将频率可编程范围扩展至至少1 MHz。这使器件能够在需要时提供引脚对引脚功能，并能够将工作范围扩展到更高的频率。有关设置振荡器频率的元件值，请参见下图。</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/D001_slus458-300x224.gif" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/D001_slus458-300x224.gif" class="lazyload" title></a></p><h3 id="5-、GND"><a href="#5-、GND" class="headerlink" title="5 、GND"></a>5 、GND</h3><p>GND是信号和电源返回地。TI建议将信号返回路径和高电流栅极驱动器路径分开，以使信号不受开关电流的影响。</p><h3 id="6-、OUT"><a href="#6-、OUT" class="headerlink" title="6 、OUT"></a>6 、OUT</h3><p>UCCx8C4x的高电流输出级为了直接驱动功率MOSFET而经过重新设计，图腾柱输出驱动器吸收或提供高达1 A的电流峰值。UCCx8C40，UCCx8C42和UCCx8C43器件的OUT以与振荡器相同的频率切换，并且可以在100％占空比附近工作。在UCCx8C41，UCCx8C44和UCCx8C45中，由于内部T触发器，OUT的开关频率是振荡器的一半。这将UCCx8C41，UCCx8C44和UCCx8C45的最大占空比限制为<50％。</p><h3 id="7-、VDD"><a href="#7-、VDD" class="headerlink" title="7 、VDD"></a>7 、VDD</h3><p>VDD是该器件的电源输入连接。在正常工作时，通过限流电阻为VDD供电。绝对最大电源电压为20 V（瞬间超过之后也会烧毁芯片，之前没太注意让vdd为12v觉得离20v还有8v的安全电压，也没有加入限流电阻，震荡之后，会把vdd直接带飞，坏了不少片子，当时买的单价大概17元左右把很是心疼，所以这里要慎重），包括可能存在的任何瞬变。如果超过此电压，可能会损坏设备。这与之前的双极型器件形成对比，后者可在输入偏置引脚上承受高达30 V的电压。此外，由于器件中不包含内部钳位，因此必须保护VDD引脚免受可能超过20 V电平的外部源的影响。如果包含来自辅助绕组N A的启动和自举电源电压在所有线路和负载条件下都不能达到20 V以下，使用从VDD到GND的齐纳保护二极管。根据自举电源的阻抗和布置，可能需要在辅助绕组上串联一个电阻R_VDD，以限制流入齐纳二极管的电流。确保在所有公差和温度范围内，最小齐纳电压高于最高UVLO上限阈值。为确保不产生与噪声相关的问题，请使用陶瓷旁路电容将VDD滤波至GND。VDD引脚必须尽可能靠近GND引脚去耦。</p><h3 id="8-、VREF"><a href="#8-、VREF" class="headerlink" title="8 、VREF"></a>8 、VREF</h3><p>VREF是误差放大器以及IC中许多其他内部电路的参考电压。UCCx8C4x系列的5V参考容差为±1％。高速开关逻辑使用VREF作为逻辑电源。参考电压在内部分压为2.5 V±1％，并连接到误差放大器的同相输入，以实现精确的输出电压调节。参考电压设置内部偏置电流和阈值，用于振荡器上限和下限阈值以及过流限制阈值。输出短路电流为55 mA（最大值）。为避免设备过热和损坏，请勿将VREF拉至接地，以此作为终止开关的方法。为了提高参考稳定性并防止高速开关瞬态噪声问题，使用靠近IC封装的陶瓷电容将VREF旁路至GND。至少需要0.1μF陶瓷电容。参考上的外部负载需要额外的VREF旁路。除陶瓷电容器外，还可以使用电解电容器。</p><h2 id="功能："><a href="#功能：" class="headerlink" title="功能："></a>功能：</h2><h3 id="1、欠压锁定"><a href="#1、欠压锁定" class="headerlink" title="1、欠压锁定"></a>1、欠压锁定</h3><p>提供了三组UVLO阈值，分别具有（14.5 V和9 V），（8.4 V和7.6 V）和（7 V和6.6 V）的开启和关闭阈值。第一组主要用于离线和48V分布式电源应用，在这些应用中，较宽的磁滞允许较低的频率工作和较长的转换器软启动时间。第二组UVLO选项非常适合通常由12-VDC输入运行的高频DC-DC转换器。第三组是最新的，已添加到电池供电和便携式应用中。表2列出了各器件的最大占空比和UVLO阈值。</p><table><thead><tr><th>最大占空比</th><th>UVLO ON</th><th>UVLO Off</th><th>零件号</th></tr></thead><tbody><tr><td>100%</td><td>14.5伏</td><td>9伏</td><td>UCCx8C42</td></tr><tr><td>100%</td><td>8.4伏</td><td>7.6伏</td><td>UCCx8C43</td></tr><tr><td>100%</td><td>7伏</td><td>6.6伏</td><td>UCCx8C40</td></tr><tr><td>50%</td><td>14.5伏</td><td>9伏</td><td>UCCx8C44</td></tr><tr><td>50%</td><td>8.4伏</td><td>7.6伏</td><td>UCCx8C45</td></tr><tr><td>50%</td><td>7伏</td><td>6.6伏</td><td>UCCx8C41</td></tr></tbody></table><h3 id="2、电流检测和过流限制"><a href="#2、电流检测和过流限制" class="headerlink" title="2、电流检测和过流限制"></a>2、电流检测和过流限制</h3><p>外部串联电阻（R CS）用来检测电流并将该电流转换为电压，该电压成为CS引脚的输入，使用I SENSE=Vcs/Rcs来确定峰值I SENSE电流。CS引脚是PWM比较器的同相输入。将CS输入与差分放大器的同向输出电压的信号进行比较；电流检测放大器的增益通常为3 V / V。V CS的典型值为1V 。可能需要一个小的RC滤波器（R CSF和C CSF）来抑制由次级侧二极管的反向恢复或等效电容负载引起的开关瞬变，除了寄生电路阻抗。该滤波器的时间常数应大大小于转换器的开关周期。</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/isense_circuit_slus458.gif" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/isense_circuit_slus458.gif" class="lazyload" title></a><br>电流检测电路的原理</p><p>在PWM比较器上执行的逐周期脉宽调制的本质上是将差分放大器的输出与电流检测输入进行比较。这不是直接的电压比，因为差分放大器输出网络在连接到PWM比较器之前将两个二极管与一个电阻分压器网络串联在一起。两二极管压降会增加一个偏置电压，该偏置电压可实现低放大器输出的零占空比。2R / R电阻分压器有助于更宽泛的误差放大器输出摆幅的使用，该摆幅可以更对称地集中在2.5V同相输入电压上。</p><p>与差分放大器的PWM比较器输入相关的1V齐纳二极管不是该器件设计中的实际二极管，而是最大电流检测输入幅度为1 V（典型值）的指示。达到此阈值时，无论误差放大器的输出电压如何，都会出现逐周期电流限制，并且输出脉冲宽度在35 ns（典型值）内终止。该电流限制阈值的最小值为0.9 V，最大值为1.1V。除了此参数的公差之外，还必须考虑电流检测电阻或电流检测电路的精度。在确定所有功率半导体和磁性元件的额定值和最坏情况时，建议考虑一次和二次电流的最坏情况。</p><h3 id="3、振荡器同步"><a href="#3、振荡器同步" class="headerlink" title="3、振荡器同步"></a>3、振荡器同步</h3><p>通过将定时电容电压强制高于振荡器内部上限，可以最好地实现同步。一个小电阻与C CT串联到GND。该电阻器用作同步脉冲的输入，该同步脉冲将C CT电压升高到振荡器的内部上限阈值以上。允许PWM以R RT和C CT设置的频率运行，直到出现同步脉冲。该方案具有几个优点，包括使本地斜坡可用于斜率补偿。必须将UCCx8C4x振荡器的频率设置为低于同步脉冲流的频率，通常将其设置为20％，并在电阻两端施加0.5V脉冲。</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/sync_circuit_slus458.gif" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/sync_circuit_slus458.gif" class="lazyload" title></a><br>振荡器同步电路</p><h3 id="4、软启动"><a href="#4、软启动" class="headerlink" title="4、软启动"></a>4、软启动</h3><p>软启动是一种通过以零为起点缓慢增加有效占空比并逐渐上升的方式，以良好控制的方式逐渐为转换器供电的技术。PWM启动后，误差放大器的反相输入为低电平，命令误差放大器的输出变为高电平。放大器的输出级通常可提供1 mA的电流，足以驱动大多数高阻抗补偿网络，但不足以快速驱动大型负载。通过给一个较大的大于1 µF的电容充电（C SS），可以通过一个PNP晶体管连接到误差放大器的输出，从而实现软启动，如下图所示。</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/ss_slus458.gif" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/ss_slus458.gif" class="lazyload" title></a></p><p>放大器流入电容器的有限充电电流转化为差分放大器输出的dv / dt限制。当PWM比较器的输入之一逐渐升高时，这直接对应于电流模式控制系统中初级电流的某个最大变化率。R SS和C SS的值必须选择使COMP引脚以受控的速率上升，从而限制功率级提供的峰值电流。在软启动间隔完成之后，电容器继续充电至VREF，从而有效地将PNP晶体管从电路考虑中移除。在电流模式控制系统中，软启动执行的功能与电压模式控制中执行的功能不同，通常是首选功能。在电流模式下，软启动控制峰值开关电流的上升。在电压模式控制下，无论初级电流或上升速率如何，软启动都会逐渐扩大占空比。</p><p>电阻R SS和二极管的目的是，在正常运行期间，一旦软启动完成并且电容器已充满电，则将软启动电容器从误差放大器的路径中取出。每当PWM进入UVLO条件时，与电阻并联的可选二极管都会强制软启动，从而迫使VREF变低。如果没有二极管，则电容器会在短暂的电源中断或掉电期间保持充电状态，并且在重新施加VDD时不会启用软启动。</p><h3 id="5、启用和禁用"><a href="#5、启用和禁用" class="headerlink" title="5、启用和禁用"></a>5、启用和禁用</h3><p>有几种方法可以启用或禁用UCCx8C4x设备，具体取决于所需的重启类型。两种基本技术使用外部晶体管将误差放大器输出拉低（<2 V BE）或将电流检测输入拉高（> 1.1 V）。禁用信号的施加导致PWM比较器的输出为高。PWM锁存器以复位为主导，因此，在COMP或CS引脚的关断条件消除后，输出保持低电平直到下一个时钟周期为止。在没有软启动的情况下重启的另一种选择是将电流检测输入拉高到逐周期电流限制阈值以上。可以使用从基准电压到电流检测输入的逻辑电平P沟道FET。</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/shutdown_ckt_slus458.gif" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/shutdown_ckt_slus458.gif" class="lazyload" title></a></p><p>禁用电路</p><h3 id="6、坡度补偿"><a href="#6、坡度补偿" class="headerlink" title="6、坡度补偿"></a>6、坡度补偿</h3><p>使用电流模式控制时，需要使用斜率补偿来稳定占空比超过50％的整个环路。尽管不是必需的，但斜率补偿还可以在最大占空比低于50％的情况下提高应用的稳定性。通过将振荡器波形的一部分注入实际感测的初级电流来引入斜率补偿。这两个信号在滤波电容器的电流检测输入（CS）连接处相加。为了最大程度地减少振荡器上的负载，最好用一个小晶体管来缓冲定时电容器的波形，该小晶体管的集电极连接到参考电压。</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/slope_compensation_slus458.gif" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/slope_compensation_slus458.gif" class="lazyload" title></a></p><h3 id="7、电压模式"><a href="#7、电压模式" class="headerlink" title="7、电压模式"></a>7、电压模式</h3><p>在某些应用中，出于多种原因，电压模式控制可能是首选的控制策略。电压模式控制可通过任何电流模式控制器轻松执行，尤其是UCCx8C4x系列成员。要实现，需要生成一个0V至0.9V的锯齿形信号，以输入到电流检测引脚（CS），这也是PWM比较器的一个输入。将其与PWM比较器另一输入端的分频误差放大器输出电压进行比较。随着误差放大器输出的变化，它在不同的时间点与锯齿波形相交，从而产生不同的脉冲宽度。这是一种线性生成宽度与误差电压成比例的脉冲的简单方法。</p><p>通过使用一部分振荡器定时电容器（C CT）波形，可以实现电压模式控制。如下图所示：</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/voltagemode_slus458.gif" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/voltagemode_slus458.gif" class="lazyload" title></a></p><p>它可以被细分并馈送到电流检测引脚。必须选择振荡器的时序分量，使其尽可能接近线性锯齿波形。尽管定时电阻呈指数充电，但较大的定时电阻值和较小的定时电容值有助于近似更线性的波形。一个小晶体管用于缓冲电阻分压器网络负载中的振荡器定时分量。由于振荡器的较低时序阈值存在偏移，因此添加了一个隔直电容。</p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><h3 id="实例1"><a href="#实例1" class="headerlink" title="实例1"></a>实例1</h3><p>UCCx8C4x控制器是峰值电流模式脉冲宽度调制器。这些控制器具有一个板载放大器，可用于隔离和非隔离电源设计中。板上有一个图腾柱栅极驱动器，能够提供1 A的峰值电流。这是一种高速PWM，能够以高达1 MHz的开关频率工作。下图显示了典型的离线应用电路。</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/typ_offline_app.gif" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/typ_offline_app.gif" class="lazyload" title></a></p><h3 id="实例2"><a href="#实例2" class="headerlink" title="实例2"></a>实例2</h3><p>UCC28C42在离线反激式转换器中的典型应用下图所示。</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/application_sch_new_slus458.gif" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/application_sch_new_slus458.gif" class="lazyload" title></a></p><p>UCC28C42使用内部电流控制环路，该环路包含一个小电流检测电阻器，用于检测初级电感器的电流斜坡。该电流检测电阻器将电感器电流波形转换为电压信号，该电压信号直接输入到初级侧PWM比较器中。该内部环路确定对输入电压变化的响应。外部电压控制环路涉及将输出电压的一部分与误差放大器输入端的参考电压进行比较。在离线隔离应用中使用时，隔离输出的电压反馈可使用次级侧误差放大器和可调电压基准（例如TL431）来实现。误差信号使用光隔离器跨越一次隔离到二次隔离边界，其光收集器连接到VREF引脚，发射极连接到FB。外部电压控制环路确定对负载变化的响应。</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/ymz.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/ymz.png" class="lazyload" title></a></p></body></html>]]></content>
      
      
      <categories>
          
          <category> 硬件 </category>
          
          <category> 电源 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 硬件 </tag>
            
            <tag> 电源 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开关电源——输入瞬态电压保护</title>
      <link href="/posts/1708959747/"/>
      <url>/posts/1708959747/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h2 id="说在前面的话"><a href="#说在前面的话" class="headerlink" title="说在前面的话"></a>说在前面的话</h2><p>尽管各种开关变换技术在电路设计上存在很大的不同，但是经过多年的发展，都具备相似的基本功能特性，成为普遍接受的工业标准，不论设计方案和电路如何，设计者在确定设计之前必须考虑的标准的所有细节， 否则在设计和开发结束时再去增加一些细微的、曾被忽略的功能往往是非常困难的。</p><h2 id="基本概念："><a href="#基本概念：" class="headerlink" title="基本概念："></a>基本概念：</h2><p>离线（direct-off-line)开关电源 ：“离线”（direct-off-line)开关电源之所以得其名，是因为它直接由交流电源供电，而不采用线性电源常用的、体积庞大的50~60Hz低频隔离变压器。</p><h2 id="交流电力线的浪涌保护"><a href="#交流电力线的浪涌保护" class="headerlink" title="交流电力线的浪涌保护"></a>交流电力线的浪涌保护</h2><p>随着“离线”开关电源中灵敏电子基本控制电路的使用，人们已更普遍地认识到交流供电输入电线的瞬变浪涌保护和必要性。</p><p>IEEE多年的测量结果展示了统计基础上各种人为或自然的电气现象发生的频率、典型辐维和波形数据。这些发现发表在IEEE 587-1980标准，见表1.2.1.这些工作为交流输入电线的瞬变浪涌保护设备的设计提供基础。<br><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/KcP4pNoRwGV5Aml.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/KcP4pNoRwGV5Aml.jpg" class="lazyload" title></a></p><p>1、在高阻抗的测试样品或负载电路中，电压表现为浪涌电压。在仿真测试中，采用测试发生器的开路电压值。<br>2、在低阻抗的测试样品或负载电路中，电流表现为浪涌的放电电流（而不是电力系统的短路电流），在仿真测试中，采用测试发生器的短路电流值。<br>3、有不同的钳位电压的其他抑制器会接收不同的能量水平。<br><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/j8u5Eezd9HWLr2a.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/j8u5Eezd9HWLr2a.png" class="lazyload" title></a></p><h2 id="（1）A类别："><a href="#（1）A类别：" class="headerlink" title="（1）A类别："></a>（1）A类别：</h2><p>输出端和长分支电路。这是最低应力的类别，适用于以下场合。<br>a.距 B类电力线超过10M（30ft)并采用14-10号线的所有引出线。<br>b.距电源输入超过20M(60ft)并采用14-10号线的所有引出 线。在这些远离接线端的位置，电压应力可达6KV，但电流应力相对低，最大只能达到200A。</p><h2 id="（2）B类别："><a href="#（2）B类别：" class="headerlink" title="（2）B类别："></a>（2）B类别：</h2><p>主馈电和短分支电路。这一类别包括 开关电源中所能见到的最高应力的场合。它应用于下面的场合。<br>a.配电屏装置<br>b.工厂中的总线和馈电系统<br>c.商用大楼的照明系统<br>注意：B类位置更接近于用户引入线。所受电压应力与A类别相似，但电流可达到300A。</p><h2 id="（3）C类别："><a href="#（3）C类别：" class="headerlink" title="（3）C类别："></a>（3）C类别：</h2><p>户外和用户引入线。这种位置在户外。非常高应力的情况都会发生，因为线距和绝缘间隔很大，并且闪络电压将会超过6KV，好在大多数开关电源都处于部分地受到保护的室内环境内的A或B类别位置，通常只需要保护A类和B类别应力的场合。</p><p>大多数室内配电屏和插座连接器在高于6KV或稍低于6KV电压时会引起火花，这些加上配电屏系统固有的电阻，使室内的应力状态限制在低得多的水平。<br>在 开关电源要进行浪涌保护的地方，应清楚地了解保护的类别，其归类应于预 期的位置一致。因为B类别位置保护装置比较大，价格比较高，所以除非明确地要求，否则不归类 到此保护 类别。<br>在全分布式开关电源系 统中要保护一些 开关电源，通常采用菜用一个总保护，可在全部系统的供电 输入线处安装一个瞬变浪流保护器。</p><h2 id="措施"><a href="#措施" class="headerlink" title="措施"></a>措施</h2><p>在低强度的A类场合，普遍地采用硅压敏电阻与瞬态抑制二极管、滤波电感和电容结合使。在更高功率地B类别场合，这些器件与更高额定电流地气体放电管或火花间隙配合使用，当使用气体放电装置时，也可以安装快速响应地熔断器或断路器。</p><h3 id="1、金属氧化物压敏电阻（MOV）："><a href="#1、金属氧化物压敏电阻（MOV）：" class="headerlink" title="1、金属氧化物压敏电阻（MOV）："></a>1、金属氧化物压敏电阻（MOV）：</h3><p>表现为电压依赖的电阻特性。在转变电压之下时，该器件具有高电阻和很小的负载。当两端电压超过转变电压时，其电阻急剧减小，而电流急剧增大。</p><p>优点：1）低成本。2）相当高的瞬变能量吸收能力。</p><p>缺点：在反复的过压下会逐渐老化并具有相当大的动态电阻。</p><h3 id="2、瞬态保护二极管（TVS-："><a href="#2、瞬态保护二极管（TVS-：" class="headerlink" title="2、瞬态保护二极管（TVS)："></a>2、瞬态保护二极管（TVS)：</h3><p>分为单向和双向两种。硅瞬态保护二极管由一个为高瞬变能力而配置地雪崩电压钳位器件构成。在双极型保护器中，采用两个结背对背地串联连接，而一个雪崩二极管在正向表现为一个普通二极管的特性。</p><p>优点：1）钳位动作非常快速，雪崩条件能在几个纳秒内建立。2）导通范围内的动态电阻非常低。</p><p>缺点：1）价格高（当热这个不是它的缺点，是我们的缺点😭）2）电流容量有限</p><h3 id="3、充气浪涌放电器："><a href="#3、充气浪涌放电器：" class="headerlink" title="3、充气浪涌放电器："></a>3、充气浪涌放电器：</h3><p>大得多的瞬变电流可由各种气体放电抑制器进行处理。在这类抑制器中，两个或更多的电极在密封的高压惰性气体环境里被精确地设置了间距，当电器两端电压超过起弧电压时，电极之间首先发生电离辉光放电，随着电流地增大，会产生电弧放电，这就为所有的内部电极之间提供了一条低阻抗的通道。</p><p>优点：1）有效短路电源，内部损耗较小。</p><p>缺点：1）对过压应力的反应速度相对慢。2）当瞬变过程结束时仍有维持导通的倾向。</p><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/bpwNYSEcWyalsPG.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/bpwNYSEcWyalsPG.jpg" class="lazyload" title></a><br>具有噪声滤波器的交流电源火线—中线与交流电源线—地线的瞬变保护电路（使用了MOV、电涌放电器（SVP）和瞬变保护二极管（TVS）适用于中高功率的应用场合。</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/ymz.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/ymz.png" class="lazyload" title></a></p></body></html>]]></content>
      
      
      <categories>
          
          <category> 硬件 </category>
          
          <category> 电源 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 硬件 </tag>
            
            <tag> 电源 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电源设计的优先级</title>
      <link href="/posts/2420910988/"/>
      <url>/posts/2420910988/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>排在优先级第一位的是电源的设计方向。对于磁芯而言，大的设计方向有4个，但是电源的设计方向会多一些，下面我列出了6个方向。</p><h2 id="设计方向一：极限尺寸"><a href="#设计方向一：极限尺寸" class="headerlink" title="设计方向一：极限尺寸"></a>设计方向一：极限尺寸</h2><p>例如Anker 30W PD充电器就做了一次极限小体积，把尺寸做到了最小，但是代价就是价格昂贵。</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/20190607_104264_b60fb31d2ca3506fea290XVSwonReYfx-768x1289.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/20190607_104264_b60fb31d2ca3506fea290XVSwonReYfx-768x1289.jpg" class="lazyload" title></a></p><p>这里需要注意的是，极限体积下面还有一个小的设计方向——极限厚度，平板电视这类应用就是对电源的厚度有着非常严格的要求，所以有了平面变压器，PCB变压器这类的设计方案。</p><p>我们许多的电源应用都是限制尺寸设计方案，我们设计电源都会被各种要求尺寸尽可能小，能够适合一些特殊的外壳设计，这也是现代电源设计最常用的一个设计方案。</p><h2 id="设计方向二：极限低成本"><a href="#设计方向二：极限低成本" class="headerlink" title="设计方向二：极限低成本"></a>设计方向二：极限低成本</h2><p>说起这个，我们第一想到的就是大街小摊上随处可见的售价不足15元的山寨5V/1A的充电头。大家千万不要笑话，那个电路绝对是一个行业顶级工程师设计的，当然，之后抄作业的不算。虽然它什么安全标准都不符合，性能也一塌糊涂，但是它依然实现了基本功能，并且很赚钱，当然我不会建议大家学习这样的设计，毕竟这样的东西可能会毁掉一个行业。如何在符合安全标准的前提下尽可能的降低成本，这才是我们要学习的一个课题。</p><p>曾经我淘了一批（5、6个）这样的设计（电子垃圾）（有机会记录记录捡垃圾的事情），最后成交价格三块一个全新未拆封（当然还有可以一块钱可以拿下的东西，那个在用料上就已经看出低劣的特性了），拆解了一个，仔细看过电路（也没啥好看的），你会惊叹这个设计，当然我还是大胆的把它接上电，长时间给我的音响供电，基本功能还是可以的，如果没有保护措施，不建议使用该类产品，更不建议使用该类产品给贵重设备供电，比如手机之类的。毕竟马有失蹄的时候，这类产品出现问题的可能性要远远超过正规产品。</p><h2 id="设计方向三：极限高低温"><a href="#设计方向三：极限高低温" class="headerlink" title="设计方向三：极限高低温"></a>设计方向三：极限高低温</h2><p>许多应用需要相对较宽的环境温度容忍度，于是就有了宽温磁芯和宽温电容的市场。但是很多时候，我们电源设计的时候都会忽略这条标准。例如丰田混合动力汽车普锐斯的电源系统，报价乍一看很贵，但是如果你仔细去核算一下宽温设计成本，就会发现报价其实是合理的。而且宽温设计对散热和电源转换效率都提出了很高的要求，这些要求最终就体现在体积和价格上。</p><h2 id="设计方向四：极限输入电压"><a href="#设计方向四：极限输入电压" class="headerlink" title="设计方向四：极限输入电压"></a>设计方向四：极限输入电压</h2><p>由于电源的波动问题，许多应用环境是需要宽电压输入的，那宽电压设计的代价是什么呢？依然是体积和价格，而且宽电压设计会使变压器的利用率显著下降。许多人都会问，某某磁芯实际能做输出功率多大的电源？但是在不知道输入电压范围，不知道工作温度，也不知道客户能够承受的报价时，我们是没有办法说出某某磁芯能够对应的输出功率的。</p><h2 id="设计方向五：高可靠性"><a href="#设计方向五：高可靠性" class="headerlink" title="设计方向五：高可靠性"></a>设计方向五：高可靠性</h2><p>高可靠性其实是一个很模糊的定义。高可靠性究竟是什么？CQC认证？高EMC成绩？有人可能会说，电源用着不炸。那么什么才能保证你的电源不炸呢？没人敢给出明确的答案。</p><p>这里分享一个金升阳培训大会上的一个小故事，金升阳以前的电源推荐设计，使用的都是10k471压敏电阻。但不幸的是，总有个别地方会炸，数量并不多，一直查不出原因，最后改用了10k561型号的压敏电阻，问题彻底解决了。两者的区别只有压敏电阻不同，一个470v，一个560v，在正常的浪涌测试下，10卡71成绩更好，以为压敏电压低，可以吸收更多的浪涌，但是就是这款浪涌成绩更好的10k471最终成了设备故障的原因</p><p>因为压敏电阻其实是一次性器件，许多小的电压冲击虽然不能让压敏电阻彻底毁坏，但是会造成积累性的物理损伤，最终导致压敏电阻炸毁，虽然压敏电阻称职的完成了自己的使命，但是顾客不满意了，因为电源炸了，要修了。所以最后大家都换上了10k561压敏电阻。</p><p>高可靠性是评价一位工程师是否有经验的地方，是看不见的价值，也是最容易被忽略的地方，那技术指标是不是不重要了呢？当然不是，技术指标依然是必须要追求的硬指标。</p><h2 id="设计方向六：高可生产性"><a href="#设计方向六：高可生产性" class="headerlink" title="设计方向六：高可生产性"></a>设计方向六：高可生产性</h2><p>可生产性可能是许多人忽视的内容，行业内有专业设计电源经验的工程师非常紧俏，多数人设计电源是新手上路（我当然也是这个行列里面的），把电源当作数字电路板设计，这肯定是要吃苦头的。其实不管设计什么电路，我们首先要知道自己工厂的加工工艺如何，这就是所谓的可生产性和可制造性。</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/ymz.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/ymz.png" class="lazyload" title></a></p></body></html>]]></content>
      
      
      <categories>
          
          <category> 硬件 </category>
          
          <category> 电源 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 硬件 </tag>
            
            <tag> 电源 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开关电源主电路拓扑—Boost</title>
      <link href="/posts/3787596451/"/>
      <url>/posts/3787596451/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>Boost变换器又称升压变换器、并联开关电路、三端开关型升压稳压器。</p><h2 id="线路组成"><a href="#线路组成" class="headerlink" title="线路组成"></a>线路组成</h2><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/4567.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/4567.png" class="lazyload" title></a></p><p>如图所示：电路由占空比为D的晶体管T，二极管D1，电感L和电容C组成的Boost变换器电路图。电路实现的功能为：把Vs升压到Vo。</p><h2 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h2><p>为了方便分析稳态特性、简化推导公式的过程，特作如下假定：</p><p>（1）开关晶体管、二极管均是理想元件、也就是可以快速地“导通”和“截止”，且导通时电压降为零，截止时漏电流为零。<br>（2）电感、电容是理想元件。电感工作在线性区而未饱和，寄生电阻为零，电容的等效串联电阻为零。<br>（3）输出电压中的纹波电压与输出电压的比值小到允许忽略</p><h2 id="工作过程"><a href="#工作过程" class="headerlink" title="工作过程"></a>工作过程</h2><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/9876.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/9876.png" class="lazyload" title></a><br>Boost变换器电路的工作过程<br>当晶体管T导通时，电路如上图（a）所示，电流iL流过电感线圈L，电流线性增加电能以磁能的形式储存在电感线圈L中，此时，电容C放电，R上流过电流Io。R两端为输出电压Vo，极性上正下负。由于晶体管导通，二极管阳极接Vs负极，二极管承受反向电压，所以电容不能通过开关管放电。</p><p>当晶体管T关断时，电路如上图（b）所示，由于线圈L中的磁场将改变线圈L两端的电压极性，以保持 iL不变，这样线圈L磁能转化成电压VL与电源Vs串联，以高于Vo的电压向电容C、负载R供电。高于Vo时，电容有充电电流，等于Vo时，充电电流为零，当Vo有下降趋势时，电容向负载R放电，维持Vo不变。</p><p>由于VL+Vs向负载R供电时，Vo高于Vs，故称其为升压变换器。工作中输入电流is=iL是连续的。但是流经二极管D1电流是脉动的，由于有电容C的存在，负载R上仍有稳定、连续的负载电流Io。</p><h2 id="电路各点的波形"><a href="#电路各点的波形" class="headerlink" title="电路各点的波形"></a>电路各点的波形</h2><p>按iL在周期开始时是否从零开始，可以分为连续工作状态和不连续工作状态两种模式，波形分别如下图。</p><p>在iL连续工作状态，开关周期Ts最后的时刻电流Is值就是下一周期的开始值，但是如果电感量太小，电流线性下降快，即在电感中能量释放完时，尚未达到晶体管重新导通的时刻，因而能量得不到及时的补充，这样就会出现电流不连续的工作状态。再要求相同功率输出时，此晶体管和二级管的最大瞬时电流比连续状态下要大，同时输出直流电压的纹波也增加。</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/1.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/1.png" class="lazyload" title></a><br>电感电流连续<br><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/4.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/4.png" class="lazyload" title></a><br>电感电流不连续<br>在连续状态下，输入电流不是脉动的，纹波电流随L增加而减小。不连续工作状态，输入电流iL是脉动的。晶体管输出电流iT不管连续或不连续工作方式总是脉动的。而且，峰值电流比较大。另外，在不连续时，D3*Ts的时间内，L从输出端脱离，这时只有电容C向负载提供所需的能量，因此，要求比较大的电容C，才能适应输出电压、电流纹波小的要求。</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/ymz.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/ymz.png" class="lazyload" title></a></p></body></html>]]></content>
      
      
      <categories>
          
          <category> 硬件 </category>
          
          <category> 电源 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 硬件 </tag>
            
            <tag> 电源 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开关电源主电路拓扑—Buck</title>
      <link href="/posts/1840790501/"/>
      <url>/posts/1840790501/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>Buck变换器又称为降压变换器，串联开关稳压电源、三端开关型降压稳压器。</p><h2 id="线路组成"><a href="#线路组成" class="headerlink" title="线路组成"></a>线路组成</h2><p>如图所示，由占空比为D的晶体管Tr，二极管D1，电感L和电容C组成的Buck变换器电路图。电路实现的功能为：把Vs转换成Vo。<br><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/SgzbCG53PZ89Etv.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/SgzbCG53PZ89Etv.png" class="lazyload" title></a></p><h2 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h2><p>为了方便分析稳态特性、简化推导公式的过程，特作如下假定：</p><p>（1）开关晶体管、二极管均是理想元件、也就是可以快速地“导通”和“截止”，且导通时电压降为零，截止时漏电流为零。<br>（2）电感、电容是理想元件。电感工作在线性区而未饱和，寄生电阻为零，电容的等效串联电阻为零。<br>（3）输出电压中的纹波电压与输出电压的比值小到允许忽略。</p><h2 id="工作过程"><a href="#工作过程" class="headerlink" title="工作过程"></a>工作过程</h2><p>当晶体管Tr导通时，如图所示 流过电感线圈L 的电流：iL=is，负载R上流过的电流为Io，两端的电压为Vo，极性上正下负。当is>Io时，电容在充电状态。这时二极管D1承受反向电压。<br><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/YxcjAhs2fGCU3JM.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/YxcjAhs2fGCU3JM.png" class="lazyload" title></a></p><p>经过tON时间（tON为晶体管打开的时间）后，晶体管Tr截止，电路如下图，由于线圈L的电流不能突变，产生了反电动势，线圈两端的极性改变，负载R两端仍然是上正下负。在iL<io时，电容处在放电状态，以维持io、vo不变，这时二极管正向偏置，流经的电流为il（所以叫其续流二极管）。<br><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/WTUhre4FRYcxdjo.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/WTUhre4FRYcxdjo.png" class="lazyload" title></a></io时，电容处在放电状态，以维持io、vo不变，这时二极管正向偏置，流经的电流为il（所以叫其续流二极管）。<br></p><p>由于Vo<vs，故称其为降压变换器。工作电流在晶体管导通时is>0，在晶体管截止时is=0。但是输出电流Io在L、D、C的作用下是连续平稳的。</vs，故称其为降压变换器。工作电流在晶体管导通时is></p><h2 id="主要概念及关系式"><a href="#主要概念及关系式" class="headerlink" title="主要概念及关系式"></a>主要概念及关系式</h2><p>按照电感电流iL在周期开始时是否从零开始，可以分为电感电流连续工作模式和电感电流不连续工作模式两种，波形分别如下所示</p><h3 id="1、电感电流连续模式"><a href="#1、电感电流连续模式" class="headerlink" title="1、电感电流连续模式"></a>1、电感电流连续模式</h3><p>下面分析一下晶体管导通及截止与输出电压的关系。</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/ANPDCO2vZb5xcLu.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/ANPDCO2vZb5xcLu.png" class="lazyload" title></a></p><p>设晶体管导通时间为tON=t1=D1<em>Ts，晶体管截止时间tOFF=t2-t1=D2</em>Ts（其中D1为导通占空比，D2为关断占空比，D1+D2=1，Ts为周期）<br>在输入输出不变的前提下，当晶体管导通时，波形如0~t1所示，电感电流平均值iL=Io=Vo/R。电感电流线性上升的增量为：<br><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/OCU3nPeXgcWDIhL.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/OCU3nPeXgcWDIhL.png" class="lazyload" title></a></p><p>当晶体管截止时，波形如t1~t2时间段所示，iL的电流增量为：<br><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/ziHPIF1DqXloRbj.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/ziHPIF1DqXloRbj.png" class="lazyload" title></a></p><p>由于稳态时这两个电流变化量相等，即 Δ iL1=| Δ iL2|，所以</p><p>(Vs-Vo)/L<em>D1<em>Ts=Vo/L</em>D2*Ts=Vo/L</em>(1-D1)*Ts</p><p>即Vo=Vs*D1</p><h3 id="2、电感电流不连续模式"><a href="#2、电感电流不连续模式" class="headerlink" title="2、电感电流不连续模式"></a>2、电感电流不连续模式</h3><p>当电感L较小，负载电阻较大，或Ts较大时，将出现电感电流已经降低到0，新的周期却没有开始，在新的周期内，电感电流从0开始线性增加，这种工作方式称为电感电流不连续的模式，波形如下图。</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/1-1-1.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/1-1-1.png" class="lazyload" title></a><br>当晶体管导通时，占空比为D1 。 Δ iL1=（Vs-Vo）/L<em>D1</em>Ts<br>当晶体管截止时， Δ iL2=-Vo/ L<em>D2</em>Ts<br>由于 Δ iL1=| Δ iL2 |则：<br>（Vs-Vo）/L<em>D1</em>Ts=Vo/L<em>D2</em>Ts<br>即：Vo=D1/（D1+D2）*Vs<br>式中的D2为晶体管关断（二极管导通）时间占空比，这里D1+D2≠1</p><p>由波形图可以看出，稳态负载电流Io即是iL等腰三角形面积在Ts时间内的平均值，且Io=Vo/R。即：<br><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/D5kb9OctKV7i4wf.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/D5kb9OctKV7i4wf.png" class="lazyload" title></a></p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/Dbegr1LZUyVtqnN.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/Dbegr1LZUyVtqnN.png" class="lazyload" title></a></p><h3 id="3、连续与不连续的临界条件"><a href="#3、连续与不连续的临界条件" class="headerlink" title="3、连续与不连续的临界条件"></a>3、连续与不连续的临界条件</h3><p>在连续与不连续状态之间有个临界状态，由波形图所示：<br><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/DPHB7WE8nKgrCot.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/DPHB7WE8nKgrCot.png" class="lazyload" title></a><br>连续状态 Δ iL<2*Io</p><p>临界状态 Δ iL=2*Io</p><p>不连续状态 Δ iL >2*Io</p><p>整理得 Δ iL=Vo/L<em>D2</em>Ts=Vo/R<br>即：D2<em>Ts=2</em>L/R</p><p>临界电感L=D2<em>R</em>Ts/2=Vo<em>D2<em>Ts/2/Io=Vo</em>tOFF/2/Io=Vo^2</em>(1-D1)/2/Po/fs</p><p>其中fs为开关工作频率fs=1/Ts<br>Po为变换器输出功率Po=Io*Vo</p><h3 id="4、纹波电压-Δ-Vo"><a href="#4、纹波电压-Δ-Vo" class="headerlink" title="4、纹波电压 Δ Vo"></a>4、纹波电压 Δ Vo</h3><p>流经电容的电流ic（iL-Io）对电容充电产生的电压 Δ Vo称为纹波电压，其波形如图所示：</p><p>当ic为t的线性函数时<br><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/aCjX8xADMRQIB5W.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/aCjX8xADMRQIB5W.png" class="lazyload" title></a></p><p>由临界电感公式可知，对于L和D2为固定值时，降压变换器的电流连续与否是由R值决定的。当R增大时，工作状态将从连续转化为不连续。<br>另一方面，如果R和D2*Ts是固定的，则当电感器L<临界电感时，其工作状态由连续转化为不连续。<br>当fs增大时，即Ts减小，则保持开关变换器在连续状态工作的临界电感量降低。</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/ymz.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/ymz.png" class="lazyload" title></a></p></body></html>]]></content>
      
      
      <categories>
          
          <category> 硬件 </category>
          
          <category> 电源 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 硬件 </tag>
            
            <tag> 电源 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开关电源—MOS管GS震荡</title>
      <link href="/posts/2183954523/"/>
      <url>/posts/2183954523/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>我们测试MOS管GS波形时，有时会看到下图中的这种波形，在芯片输出端是非常好的方波输出，但一旦到了MOS管的G极就出问题了，有振荡，这个振荡小的时候还能勉强过关，但是有时候振荡特别大，看着都教人担心会不会重启。</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/5PUKOe1mk8I3D9N.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/5PUKOe1mk8I3D9N.jpg" class="lazyload" title></a></p><p>IC出来的波形正常，到C1两端的波形就有振荡了。</p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>实际上这个振荡就是R1,L1和C1三个元器件的串联振荡引起的，R1为驱动电阻，是我们外加的，L1是PCB上走线的寄生电感，C1是mos管gs的寄生电容。</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/WAQdECZ1T8MpeIs.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/WAQdECZ1T8MpeIs.jpg" class="lazyload" title></a></p><p>对于一个RLC串联谐振电路，其中L1和C1不消耗功率，电阻R1起到阻值振荡的作用阻尼作用。上图可以简化为：</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/t9Dc3pjnJ2CPdZG.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/t9Dc3pjnJ2CPdZG.png" class="lazyload" title></a></p><hr><h2 id="建立方程求解"><a href="#建立方程求解" class="headerlink" title="建立方程求解"></a>建立方程求解</h2><p>RLC串联电路的微分方程，先列KVL</p><p>uR(t)+uL(t)+uC(t)=uS(t)</p><p>带入元件VCR</p><p>i(t)=iL(t)=iC(t)=c*duC/dt</p><p>uR(t)=Ri(t)=RC*duC/dt</p><p>uL(t)=L<em>di/dt=LC</em>d^2uC/dt^2</p><p>得：</p><p>LC<em>d^2uC/dt^2+RC</em>duC/dt+uC=uS(t)</p><hr><p>这是一个常系数非齐次线性二阶微分方程。为了得到电路的零输入响应，令uS(t)=0,得二阶齐次微分方程：</p><p>LC<em>d^2uC/dt^2+RC</em>duC/dt+uC=0</p><p>其特征方程为：LCs^2+RCs+1=0</p><p>解得：</p><p>s1=-R/(2L)+{[R/(2L)]^2-1/(LC)}^0.5</p><p>s2=-R/(2L)-{[R/(2L)]^2-1/(LC)}^0.5</p><p>特征根称为电路得固有频率。</p><hr><h2 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h2><p>实际上这个电阻的值就决定了C1两端会不会振荡。</p><h3 id="1、当R1-gt-2-L1-C1-0-5时，S1，S2为不相等的实数根。过阻尼情况。"><a href="#1、当R1-gt-2-L1-C1-0-5时，S1，S2为不相等的实数根。过阻尼情况。" class="headerlink" title="1、当R1>2(L1/C1)^0.5时，S1，S2为不相等的实数根。过阻尼情况。"></a>1、当R1>2(L1/C1)^0.5时，S1，S2为不相等的实数根。过阻尼情况。</h3><p>齐次微分方程得解为：</p><p>uC(t)=A1<em>e^(s1</em>t)+A2<em>e^(s2</em>t)</p><p>A1、A2由初始条件确定:</p><p>令式中的t=0+得：uC（0+）=A1+A2</p><p>对uC(t)求导，再另t=0+得：[duC(t)/dt|t=0+]=A1<em>s1+A2</em>s2=iL(0+)/C</p><p>联立可求得：</p><p>A1=1/(s2-s1)*[s2*uC(0+)-iL(0+)/C]</p><p>A2=1/(s1-s2)*[s1*uC(0+)-iL(0+)/C]</p><p>将A1、A2带入uC(t)得到电容电压得零输入响应（mos得g极的电压），再利用KCL方程和电容的VCR可以得到电感电流的零输入响应。</p><p>当uC(0+)=U0,iL(0+)=0,t>0时：</p><p>uC(t)=s2<em>U0/(s2-s1)</em>e^(s1<em>t)-s1</em>U0/(s2-s1)<em>e^(s2</em>t)</p><p>i(t)=C<em>duC(t)/dt=U0/[L</em>(s2-s1)]*[e^(s1<em>t)-e^(s2</em>t)]</p><p>uL(t)=L<em>di/dt=U0/(s1-s2)</em>[s1<em>e^(s1</em>t)-s2<em>e^(s2</em>t)]</p><p>在这种情况下，基本不会发生振荡的。</p><h3 id="2、当R1-2-L1-C1-0-5时，S1，S2为两个相等的实数根。临界情况。"><a href="#2、当R1-2-L1-C1-0-5时，S1，S2为两个相等的实数根。临界情况。" class="headerlink" title="2、当R1=2(L1/C1)^0.5时，S1，S2为两个相等的实数根。临界情况。"></a>2、当R1=2(L1/C1)^0.5时，S1，S2为两个相等的实数根。临界情况。</h3><p>在这种情况下，有振荡也是比较微弱的。</p><h3 id="3、当R1-lt-2-L1-C1-0-5时，S1，S2为共轭复数根。欠阻尼情况。"><a href="#3、当R1-lt-2-L1-C1-0-5时，S1，S2为共轭复数根。欠阻尼情况。" class="headerlink" title="3、当R1<2(L1/C1)^0.5时，S1，S2为共轭复数根。欠阻尼情况。"></a>3、当R1<2(L1/C1)^0.5时，S1，S2为共轭复数根。欠阻尼情况。</h3><p>在这种情况下，电路一定会发生振荡。</p><hr><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>所以对于上述的几个振荡需要消除的话，我们有几个选择.</p><p>1，增大电阻R1使R1≥2(L1/C1)^0.5，来消除振荡，对于增大R1会降低电源效率的，我们一般选择接近临界的阻值。</p><p>2，减小PCB走线寄生电感，这个就是说在布局布线中一定要注意的。</p><p>3、增大C1,对于这个我们往往都不太好改变，C1的增大会使开通时间大大加长，我们一般都不去改变他。</p><p>所以最主要的还是在布局布线的时候，特别注意走线的长度“整个驱动回路的长度”越短越好，另外可以适当加大R1.</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/ymz.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/ymz.png" class="lazyload" title></a></p></body></html>]]></content>
      
      
      <categories>
          
          <category> 硬件 </category>
          
          <category> 电源 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 硬件 </tag>
            
            <tag> 电源 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电源设计的SOR</title>
      <link href="/posts/2582721021/"/>
      <url>/posts/2582721021/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h2 id="问题一：你希望设计的开关电源的工作电压范围是多少？85-256v还是195-265v？"><a href="#问题一：你希望设计的开关电源的工作电压范围是多少？85-256v还是195-265v？" class="headerlink" title="问题一：你希望设计的开关电源的工作电压范围是多少？85-256v还是195-265v？"></a>问题一：你希望设计的开关电源的工作电压范围是多少？85-256v还是195-265v？</h2><p>如果你愿意牺牲输入电压范围，那开关电源的整体体积就会缩小，成本也会降低。如果你需要85-256v的宽电压输入，那你的产品就可以销往110v电压供电的国家。<br>我的建议是国内销售的产品完全可以用单电压电源设计方案，例如在100-115v的国家使用85-35v的输入电压，而在国内产品用195-265v的输入电压，这样不仅可以降低成本、缩小体积，更可以避免水货对当地经销商的冲击。所以很多时候，通用的设计并不一定是最优的设计。</p><h2 id="问题二：你希望设计的开关电源有几路输出？"><a href="#问题二：你希望设计的开关电源有几路输出？" class="headerlink" title="问题二：你希望设计的开关电源有几路输出？"></a>问题二：你希望设计的开关电源有几路输出？</h2><p>简单的flyback多路输出只有一路输出是稳压的，如果用DC-DC产生多路输出则会增加成本。</p><h2 id="问题三：设计的多路输出之间是否需要隔离？"><a href="#问题三：设计的多路输出之间是否需要隔离？" class="headerlink" title="问题三：设计的多路输出之间是否需要隔离？"></a>问题三：设计的多路输出之间是否需要隔离？</h2><p>多路输出隔离会增加变压器屏蔽成本，而且不容易过辐射。</p><h2 id="问题四：每路输出的电压电流是多少？"><a href="#问题四：每路输出的电压电流是多少？" class="headerlink" title="问题四：每路输出的电压电流是多少？"></a>问题四：每路输出的电压电流是多少？</h2><p>开关电源产品的实际功率越大，产品的体积就越大，价格也会越高。</p><h2 id="问题五：电源的工作温度范围是多少？"><a href="#问题五：电源的工作温度范围是多少？" class="headerlink" title="问题五：电源的工作温度范围是多少？"></a>问题五：电源的工作温度范围是多少？</h2><p>常见的电源工作温度范围选项有-40-85℃、0-70℃,电源的工作温度范围越大，体积越大，价格越贵。</p><h2 id="问题六：高低压侧是否需要隔离？"><a href="#问题六：高低压侧是否需要隔离？" class="headerlink" title="问题六：高低压侧是否需要隔离？"></a>问题六：高低压侧是否需要隔离？</h2><p>有非隔离的AC-DC方案，而且价格也很便宜，不用定做变压器，用现成得到电感就可以。例如<br><a href="https://www.alldatasheet.com/view.jsp?Searchword=LNK302" target="_blank" rel="noopener" title="datasheet">lnk302芯片</a>其电路体积就比隔离电源小很多，而且设计快，占很多优势。</p><h2 id="问题七：高低压侧的隔离电压是多少？"><a href="#问题七：高低压侧的隔离电压是多少？" class="headerlink" title="问题七：高低压侧的隔离电压是多少？"></a>问题七：高低压侧的隔离电压是多少？</h2><p>隔离电压越高，变压器越贵，体积会越大，电源模块的总体积也越大，而且宽脚距的光耦也比普通的光耦要贵一些。</p><h2 id="问题八：对电源的尺寸有什么要求？"><a href="#问题八：对电源的尺寸有什么要求？" class="headerlink" title="问题八：对电源的尺寸有什么要求？"></a>问题八：对电源的尺寸有什么要求？</h2><p>电源的体积越小，价格越贵，容量越小。</p><h2 id="问题九：设计的制作工艺是什么？"><a href="#问题九：设计的制作工艺是什么？" class="headerlink" title="问题九：设计的制作工艺是什么？"></a>问题九：设计的制作工艺是什么？</h2><p>制作工艺有单面直插、正面直插正面贴片、正面直插反面贴片、一面直插两面贴片、两面直插两面贴片。<br>正面直插反面贴片最便宜，因为只需要一次波峰焊，但是需要点胶机。正面直插正面贴片次之，它需要一次回流焊，一次波峰焊。单面直插看似BOM成本最便宜，但由于人工成本居高不下，而且PCB的面积也相对最大，所以总体的设计比不划算。一面直插两面贴片是高密度设计，资金充裕时可以考虑使用，两面直插两面贴片是失败的设计，因为注定逃不掉手工焊接。<br>可能有人会问，就不能设计成全贴片的吗？回答是不能，因为大量的安规器件只允许用直插件，也只有直插件，所以AC-DC是逃不掉波峰焊的命运的。</p><h2 id="问题十：开关电源的限制功率输出温度是多少？"><a href="#问题十：开关电源的限制功率输出温度是多少？" class="headerlink" title="问题十：开关电源的限制功率输出温度是多少？"></a>问题十：开关电源的限制功率输出温度是多少？</h2><p>电源模块在极限高温和极限低温下都会有输出功率的缩水问题，一般情况下在-10~55℃会输出极限功率，超过60℃或者低于-10℃输出功率会直线下降。</p><h2 id="问题十一：开关电源的限制功率输出电压是多少？"><a href="#问题十一：开关电源的限制功率输出电压是多少？" class="headerlink" title="问题十一：开关电源的限制功率输出电压是多少？"></a>问题十一：开关电源的限制功率输出电压是多少？</h2><p>开关电源输入在极限高压和极限低压时也会有输出功率缩水的问题，一般有10%~20%的缩水。</p><h2 id="问题十二：开关电源需要通过哪些测试项目与等级？"><a href="#问题十二：开关电源需要通过哪些测试项目与等级？" class="headerlink" title="问题十二：开关电源需要通过哪些测试项目与等级？"></a>问题十二：开关电源需要通过哪些测试项目与等级？</h2><p>比如浪涌、辐射、传导、辐射抗扰度、传导抗扰度、EFT正态脉冲群、静电放电等等。需要通过的测试项目与等级级别越高，价格越贵。</p><p>EMC特性：<br><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/emctexing.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/emctexing.png" class="lazyload" title></a></p><h2 id="问题十三：电源的转换效率有什么要求？"><a href="#问题十三：电源的转换效率有什么要求？" class="headerlink" title="问题十三：电源的转换效率有什么要求？"></a>问题十三：电源的转换效率有什么要求？</h2><p>电源转换效率越高，芯片方案越新，当然价格也越高。</p><h2 id="问题十四：电源的稳波要求如何？"><a href="#问题十四：电源的稳波要求如何？" class="headerlink" title="问题十四：电源的稳波要求如何？"></a>问题十四：电源的稳波要求如何？</h2><p>稳波要求越高，输出的固态电容越多，体积越大，价格越高。</p><h2 id="问题十五：设计中是否接受塑料挡墙？"><a href="#问题十五：设计中是否接受塑料挡墙？" class="headerlink" title="问题十五：设计中是否接受塑料挡墙？"></a>问题十五：设计中是否接受塑料挡墙？</h2><p>许多电源为了安规距离无法达到的极限尺寸，会使用塑料挡墙来提高安规间距。</p><h2 id="问题十六：是否接受独立金属散热片？"><a href="#问题十六：是否接受独立金属散热片？" class="headerlink" title="问题十六：是否接受独立金属散热片？"></a>问题十六：是否接受独立金属散热片？</h2><p>增加散热片就意味着一堆工艺的加入，尤其是那种定尺寸外形的金属散热片，不仅需要机械工程师定做，还增加了人工安装的工时，所以许多40W左右的电源为了避免使用散热片，宁愿买一些贵一些的高效率芯片解决问题。</p><h2 id="问题十七：能接受的最终产品报价是多少？"><a href="#问题十七：能接受的最终产品报价是多少？" class="headerlink" title="问题十七：能接受的最终产品报价是多少？"></a>问题十七：能接受的最终产品报价是多少？</h2><p>这个问题可能让很多人心里没有底，但是我需要提醒大家，千万不要按照淘宝上卖的产品去估价。</p><h2 id="问题十八：能接受的产品加工工时是多久？"><a href="#问题十八：能接受的产品加工工时是多久？" class="headerlink" title="问题十八：能接受的产品加工工时是多久？"></a>问题十八：能接受的产品加工工时是多久？</h2><p>在需要爆量的时候，这是必须要考虑的问题。</p><h2 id="问题十九：研发时间多长？"><a href="#问题十九：研发时间多长？" class="headerlink" title="问题十九：研发时间多长？"></a>问题十九：研发时间多长？</h2><p>甲方要求的工期越短，单位时间工作量越大，工程价格就越贵，而且是以指数关系增长的。（这里吐槽一下，每一个电源的设计都是根据需求单独定制的，不同的设计之间虽有可以借鉴的地方，但是必要的研发工时是不可缺少的，同时研发的难度也是不降低的，并不是说之前做成功了一个电源，那么所有的电源设计就没有问题了，可以信手拈来，分分钟钟搞定）</p><h2 id="问题二十：研发成本有多少？"><a href="#问题二十：研发成本有多少？" class="headerlink" title="问题二十：研发成本有多少？"></a>问题二十：研发成本有多少？</h2><p>研发是需要成本的，愿意花费的代价是必须要思考且无法避免的问题。</p><h2 id="问题二十一：设计的电源需求是否明确？"><a href="#问题二十一：设计的电源需求是否明确？" class="headerlink" title="问题二十一：设计的电源需求是否明确？"></a>问题二十一：设计的电源需求是否明确？</h2><p>这个是一个最重要的问题，所以放到最后来说，在设计电源之初，就要把所有的需求、要求、限制都明确，并且要考虑到极限的情况，如果需求变更，需要从头来评估整体的方案，而不是在设计了一半的基础上去调整，来应对需求的变更。</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/ymz.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/ymz.png" class="lazyload" title></a></p></body></html>]]></content>
      
      
      <categories>
          
          <category> 硬件 </category>
          
          <category> 电源 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 硬件 </tag>
            
            <tag> 电源 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EMC（电磁兼容性）</title>
      <link href="/posts/402795366/"/>
      <url>/posts/402795366/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>电磁兼容性EMC是指设备或系统在其电磁环境中能正常工作且不对该环境中任何事物构成不能承受电磁骚扰的能力。传感器电磁兼容性是指传感器在电磁环境中的适应性，保持其固有性能、完成规定功能的能力。它包含两个方面要求：一方面要求传感器在正常运行过程中对所在环境产生电磁干扰不能超过一定限值;另一方面要求传感器对所在环境中存在电磁干扰具有一定程度抗扰度。</p><p>电磁兼容是研究在有限的空间、时间、频谱资源条件下，各种用电设备（广义还包括生物体）可以共存，并不致引起降级的一门学科。它包括电磁干扰和电磁敏感度两部分，电磁干扰测试是测量被测设备在正常工作状态下产生并向外发射的电磁波信号的大小来反应对周围电子设备干扰的强弱。电磁敏感度测试是测量被测设备对电磁骚扰的抗干扰的能力强弱 。</p><h2 id="电磁兼容测试项目"><a href="#电磁兼容测试项目" class="headerlink" title="电磁兼容测试项目"></a>电磁兼容测试项目</h2><p>传导conduction emission （9kHz-30MHz）<br>功率辐射power clamp （30MHz-300MHz）<br>磁场辐射magnetic emission（9kHz-30MHz）<br>空间辐射radiated emission（30MHz-18GHz）<br>断续传导干扰click<br>谐波harmonics class a,b ,c,d<br>电压闪烁flicker plt .pst<br>静电ESD （±0.1-±16.5kV）<br>辐射抗扰度（1GHz以下）<br>快速脉冲群EFT/B （±0.1-±4.4kV）<br>浪涌surge （0.1-6.6kV）<br>传导抗扰度CS（0.1-30V）<br>抗磁场干扰MS（0-120A/m）<br>断电Dips（0%-100%）<br>振荡波浪涌 Oscillatory Waves Surge 0.1-6.6kV 波形100kHz<br>谐波、谐间波抗干扰 Harmonic、interharmonic immunity<br>磁场EFM 10Hz-400kHz （EN50366）</p><h2 id="EMC技术的国家标准（电磁兼容国标、EMC国标）"><a href="#EMC技术的国家标准（电磁兼容国标、EMC国标）" class="headerlink" title="EMC技术的国家标准（电磁兼容国标、EMC国标）"></a>EMC技术的国家标准（电磁兼容国标、EMC国标）</h2><h3 id="基础类标准"><a href="#基础类标准" class="headerlink" title="基础类标准"></a>基础类标准</h3><p>GB/T 4365–2003 电磁兼容术语<br>GB/T 6113–2018 无线电干扰和抗扰度测量设备规范<br>GB/T 15658–2012 无线电噪声测量方法</p><h3 id="通用类标准"><a href="#通用类标准" class="headerlink" title="通用类标准"></a>通用类标准</h3><p>GB 8702–2014 电磁环境控制限值<br>GB/T 17626.1-2006 电磁兼容 试验和测量技术 抗扰度试验总论<br>GB/T 17626.2-2018 电磁兼容 试验和测量技术 静电放电抗扰度试验<br>GB/T 17626.3-2016 电磁兼容 试验和测量技术 射频电磁场辐射抗扰度试验<br>GB/T 17626.4-2018 电磁兼容 试验和测量技术 电快速瞬变脉冲群抗扰度试验<br>GB/T 17626.5-2008 电磁兼容.试验和测量技术.浪涌(冲击)抗扰度试验<br>GB/T 17626.5-2019 电磁兼容 试验和测量技术 浪涌（冲击）抗扰度试验<br>GB/T 17626.6-2017 电磁兼容 试验和测量技术 射频场感应的传导骚扰抗扰度<br>GB/T 17626.7-2017 电磁兼容 试验和测量技术 供电系统及所连设备谐波、间谐波的测量和测量仪器导则<br>GB/T 17626.8-2006 电磁兼容 试验和测量技术 工频磁场抗扰度试验<br>GB/T 17626.9-2011 电磁兼容.试验和测量技术.脉冲磁场抗扰度试验<br>GB/T 17626.10-2017 电磁兼容 试验和测量技术 阻尼振荡磁场抗扰度试验<br>GB/T 17626.11-2008 电磁兼容.试验和测量技术.电压暂降、短时中断和电压变化的抗扰度试验<br>GB/T 17626.13-2006 电磁兼容 试验和测量技术 交流电源端口谐波、谐间波及电网信号的低频抗扰度试验<br>GB/T 17626.14-2005 电磁兼容 试验和测量技术 电压波动抗扰度试验<br>GB/T 17626.15-2011 电磁兼容.试验和测量技术.闪烁仪功能和设计规范<br>GB/T 17626.16-2007 电磁兼容 试验和测量技术 OHz～150kHz共模传导骚扰抗扰度试验<br>GB/T 17626.17-2005 电磁兼容 试验和测量技术 直流电源输入端口纹波抗扰度试验<br>GB/T 17626.18-2016 电磁兼容 试验和测量技术 阻尼振荡波抗扰度试验<br>GB/T 17626.20-2014 电磁兼容 试验和测量技术 横电磁波(TEM)波导中的发射和抗扰度试验<br>GB/T 17626.21-2014 电磁兼容 试验和测量技术 混波室试验方法<br>GB/T 17626.22-2017 电磁兼容 试验和测量技术 全电波暗室中的辐射发射和抗扰度测量<br>GB/T 17626.24-2012 电磁兼容.试验和测量技术.HEMP传导骚扰保护装置的试验方法<br>GB/T 17626.27-2006 电磁兼容 试验和测量技术 三相电压不平衡抗扰度试验<br>GB/T 17626.28-2006 电磁兼容 试验和测量技术 工频频率变化抗扰度试验<br>GB/T 17626.29-2006 电磁兼容 试验和测量技术 直流电源输入端口电压暂降、短时中断和电压变化的抗扰度试验<br>GB/T 17626.30-2012 电磁兼容.试验和测量技术.电能质量测量方法<br>GB/T 17626.34-2012 电磁兼容.试验和测量技术.主电源每相电流大于16A的设备的电压暂降、短时中断和电压变化抗扰度试验<br>GB/T 14431–1993 无线电业务要求的信号/干扰保护比和最小可用场强</p><p>注：标准参考更新与2019.07</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/ymz.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/ymz.png" class="lazyload" title></a></p></body></html>]]></content>
      
      
      <categories>
          
          <category> 硬件 </category>
          
          <category> EMC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 硬件 </tag>
            
            <tag> EMC </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
