<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>小白应该明白的点点滴滴</title>
      <link href="/posts/2304344700/"/>
      <url>/posts/2304344700/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><hr><h1 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h1><p>  在前些日子，我的一个朋友想我借钱，因为时常联系，彼此之间还是了解不少的，知道其最近刚刚离职并且短期内不会去找工作，偿还能力会有所下降，本着朋友能帮就帮的原则，我问问了其借钱的用途，原来是看前一阵子行情不错，想上杠杆，富贵险中求（很是无奈），盘算了一下手里的余粮：自1月下旬开始放假到今还没有上班，过年给了父母3w的红包，加上年后看中一台电脑1w2，然后3月初会扣掉保险钱1w2，加上要交房租保守计算2.5k*4押一付三也差不多1w左右了，索性没有什么房贷车贷的压力，还还花呗、信用卡，那么年前发的工资和年终奖剩下的钱还能勉勉强强度日。二月份我也离职了，正在换工作的窗口期，也就没有了收入，疫情闹得做些什么也不是很方便。遂拒绝了他 >_<</p><h1 id="灵魂拷问：投资理财的目的是什么？"><a href="#灵魂拷问：投资理财的目的是什么？" class="headerlink" title="灵魂拷问：投资理财的目的是什么？"></a>灵魂拷问：投资理财的目的是什么？</h1><p>面对这个灵魂拷问，大家的答案就多种多样了，有的是为了实现财富自由；有的是为了去实现梦想；有的是为了可以体验一下有钱人的快乐与烦恼等等不一而足。</p><p>不管是为了什么，有了目的是好事，那具体怎么去规划实现目的呢？<br>这个就不由我们深思了，你可以读一读下面的，希望可以带来一点启发。</p><h1 id="什么是理财？"><a href="#什么是理财？" class="headerlink" title="什么是理财？"></a>什么是理财？</h1><p>首先明确一点，理财不是投资，而是对待财富的一种处置态度及规划方案。</p><p>所以从这一点上来看，目前你是否有钱对于你的行动没有任何关系，即使身无分文或者负债累累，这都不影响。我们可以从点点滴滴开始你的财富之旅。</p><h2 id="记账"><a href="#记账" class="headerlink" title="记账"></a>记账</h2><p>记账是理财的第一步，虽然记账不会生钱同时还要浪费时间和精力，但是通过记账你可以知道你的钱是怎么来的，同时又是怎么走的，让你对于自身的财富有了更加清晰的掌控。还可以及时理清目前的状况，做出相应的调整，拜托月光或者把钱用到更有价值的地方上去。</p><h2 id="攒钱"><a href="#攒钱" class="headerlink" title="攒钱"></a>攒钱</h2><p>那么理财的第二步就是攒钱了，虽然投资这东西说的好听点就是钱生钱，但是连本都没有那从何谈起呢，小钱靠攒，大钱靠运，没有合适的资源，那么第一桶金绝大部分是要靠攒的。</p><h1 id="那么具体怎么去做呢？"><a href="#那么具体怎么去做呢？" class="headerlink" title="那么具体怎么去做呢？"></a>那么具体怎么去做呢？</h1><h2 id="盘点"><a href="#盘点" class="headerlink" title="盘点"></a>盘点</h2><p>我们要首先知道自己有多少米，那就要盘点一下自身的资产负债情况。咱们普通人资产结构比较简单，资产大致分为：现金类、投资类、期权类、自用类、无形类、其他。负债大致可以分为：消费类、投资类、自用类。</p><p>这里举几个简单的例子：钱包里的现金、银行卡里的余额都算现金类的资产；股票账户里的股票、债券等等都是投资类的资产，如自住房屋、自用代步工具都属于自用类资产。</p><p>比如花呗基本上都是消费类的负债，用于投资买的房产的贷款就是投资类负债。</p><p>你可以根据上面的分类简单的列个表格，<br>|||家庭资产负债表|||<br>|—|—|—-|—-|—-|—|<br>|资产项 |||负债项<br>|现金及等价物 |活期存款 || 消费性负债 |信用卡、花呗、白条等|<br> ||定期存款 |||外债<br> ||货币基金<br> |投资型资产| 债券|| 投资型负债| 出租房屋的房贷<br> ||基金 |||向外租用设备的贷款<br> ||股票<br> ||外汇<br> ||出租房<br> ||向外租用的设备<br>|自用性资产 |自住房 ||自用性负债 |自用房房贷<br> ||自用车  |||自用车车贷<br>|其他资产 |公积金<br>|合计<br>|净资产</p><p>是不是通过盘点就大致清楚了自己有多少米呢？然后我们就可以根据自身的资产负债状况有针对性的制定策略了。</p><h2 id="存钱"><a href="#存钱" class="headerlink" title="存钱"></a>存钱</h2><p>存钱这是个亘古不变的行为，就拿最近的事情来说，一两个月没有工资，支出却不减少，手里没有点余量那可真是度日如年啊，所以一点要学会工资发下来，先存起来，然后再花钱，还可以利用信用卡、花呗、白条等做一个“宝呗青年”，首先这个可不是鼓励去超前消费啊，这个是在确保自己目前能支付的起，优先使用的，相当于一个短期的无息贷款，同时自己的钱却在余额宝这类的具有高流动性有收益的账户里赚取一点点利润，苍蝇再小也是肉啊，要养成良好的习惯，杜绝超前消费，不当月光族。</p></body></html>]]></content>
      
      
      <categories>
          
          <category> 理财 </category>
          
          <category> 小白 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小白 </tag>
            
            <tag> 理财 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>这是一篇关于markdown语法的测试</title>
      <link href="/posts/3632233996/"/>
      <url>/posts/3632233996/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><hr><h3 id="横线"><a href="#横线" class="headerlink" title="横线"></a>横线</h3><hr><p>***、—、___可以显示横线效果</p><hr><hr><hr><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><h2 id="文本"><a href="#文本" class="headerlink" title="文本"></a>文本</h2><h3 id="普通文本"><a href="#普通文本" class="headerlink" title="普通文本"></a>普通文本</h3><p>这是一段普通的文本</p><h3 id="单行文本"><a href="#单行文本" class="headerlink" title="单行文本"></a>单行文本</h3><pre><code>Hello,大家好，我是ymz。</code></pre><p>在一行开头加入1个Tab或者4个空格。</p><h3 id="文本块"><a href="#文本块" class="headerlink" title="文本块"></a>文本块</h3><h4 id="语法1"><a href="#语法1" class="headerlink" title="语法1"></a>语法1</h4><p>在连续几行的文本开头加入1个Tab或者4个空格。</p><pre><code>欢迎到访很高兴见到您祝您，早上好，中午好，下午好，晚安</code></pre><h4 id="语法2"><a href="#语法2" class="headerlink" title="语法2"></a>语法2</h4><p>使用一对各三个的反引号：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">欢迎到访</span><br><span class="line">我是C++码农</span><br><span class="line">你可以在知乎、CSDN、简书搜索【ymz】找到我</span><br></pre></td></tr></tbody></table></figure></div><p>该语法也可以实现代码高亮，见<a href="#代码高亮">代码高亮</a></p><h3 id="文字高亮"><a href="#文字高亮" class="headerlink" title="文字高亮"></a>文字高亮</h3><p>文字高亮功能能使行内部分文字高亮，使用一对反引号。<br>语法：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`linux` `网络编程` `socket` `epoll`</span><br></pre></td></tr></tbody></table></figure></div><p>效果：<code>linux</code> <code>网络编程</code> <code>socket</code> <code>epoll</code></p><p>也适合做一篇文章的tag</p><h4 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h4><p>直接回车不能换行，<br>可以在上一行文本后面补两个空格，<br>这样下一行的文本就换行了。</p><p>或者就是在两行文本直接加一个空行。</p><p>也能实现换行效果，不过这个行间距有点大。</p><h4 id="斜体、粗体、删除线"><a href="#斜体、粗体、删除线" class="headerlink" title="斜体、粗体、删除线"></a>斜体、粗体、删除线</h4><table><thead><tr><th>语法</th><th>效果</th></tr></thead><tbody><tr><td><code>*斜体1*</code></td><td><em>斜体1</em></td></tr><tr><td><code>_斜体2_</code></td><td><em>斜体2</em></td></tr><tr><td><code>**粗体1**</code></td><td><strong>粗体1</strong></td></tr><tr><td><code>__粗体2__</code></td><td><strong>粗体2</strong></td></tr><tr><td><code>这是一个 ~~删除线~~</code></td><td>这是一个 <del>删除线</del></td></tr><tr><td><code>***斜粗体1***</code></td><td><strong><em>斜粗体1</em></strong></td></tr><tr><td><code>___斜粗体2___</code></td><td><strong><em>斜粗体2</em></strong></td></tr><tr><td><code>***~~斜粗体删除线1~~***</code></td><td><strong><em><del>斜粗体删除线1</del></em></strong></td></tr><tr><td><code>~~***斜粗体删除线2***~~</code></td><td><del><strong><em>斜粗体删除线2</em></strong></del></td></tr></tbody></table><pre><code>斜体、粗体、删除线可混合使用</code></pre><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p>基本格式：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![alt](URL title)</span><br></pre></td></tr></tbody></table></figure></div><p>alt和title即对应HTML中的alt和title属性（都可省略）：</p><ul><li>alt表示图片显示失败时的替换文本</li><li>title表示鼠标悬停在图片时的显示文本（注意这里要加引号）</li></ul><p>URL即图片的url地址，如果引用本仓库中的图片，直接使用<strong>相对路径</strong>就可了，如果引用其他github仓库中的图片要注意格式，即：<code>仓库地址/raw/分支名/图片路径</code>，如：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/guodongxiaren/ImageCache/raw/master/Logo/foryou.gif</span><br></pre></td></tr></tbody></table></figure></div><table><thead><tr><th>#</th><th>语法</th><th>效果</th></tr></thead><tbody><tr><td>1</td><td><code>![baidu](http://www.baidu.com/img/bdlogo.gif "百度logo")</code></td><td><a href="http://www.baidu.com/img/bdlogo.gif" data-fancybox="group" data-caption="baidu" class="fancybox"><img alt="baidu" title="baidu" data-src="http://www.baidu.com/img/bdlogo.gif" class="lazyload"></a></td></tr><tr><td>2</td><td><code>![][code-past]</code></td><td>![][code-past]</td></tr></tbody></table><p>注意例2的写法使用了<strong>URL标识符</strong>的形式，在<a href="#链接">链接</a>一节有介绍。</p><blockquote><p>在文末有code-past的定义：</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[code-past]:https://img-blog.csdnimg.cn/201908060004034.png</span><br></pre></td></tr></tbody></table></figure></div><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><h3 id="链接外部URL"><a href="#链接外部URL" class="headerlink" title="链接外部URL"></a>链接外部URL</h3><table><thead><tr><th>#</th><th>语法</th><th>效果</th></tr></thead><tbody><tr><td>1</td><td><code>[我的博客](http://blog.csdn.net/guodongxiaren "悬停显示")</code></td><td><a href="http://blog.csdn.net/guodongxiaren" target="_blank" rel="noopener" title="悬停显示">我的博客</a></td></tr><tr><td>2</td><td><code>[我的知乎][zhihu]</code></td><td>[我的知乎][zhihu]</td></tr></tbody></table><p>语法2由两部分组成：</p><ul><li>第一部分使用两个中括号，[ ]里的标识符（本例中zhihu），可以是数字，字母等的组合，标识符上下对应就行了（<strong>姑且称之为URL标识符</strong>）</li><li>第二部分标记实际URL。</li></ul><blockquote><p>使用URL标识符能达到复用的目的，一般把全文所有的URL标识符统一放在文章末尾，这样看起来比较干净。</p><blockquote><p>URL标识符是我起的名字，不知道是否准确。囧。。</p></blockquote></blockquote><h3 id="链接本仓库里的URL"><a href="#链接本仓库里的URL" class="headerlink" title="链接本仓库里的URL"></a>链接本仓库里的URL</h3><table><thead><tr><th>语法</th><th>效果</th></tr></thead><tbody><tr><td><code>[我的简介](/example/profile.md)</code></td><td><a href="/example/profile.md">我的简介</a></td></tr><tr><td><code>[example](./example)</code></td><td><a href="./example">example</a></td></tr></tbody></table><h3 id="图片链接"><a href="#图片链接" class="headerlink" title="图片链接"></a>图片链接</h3><p>给图片加链接的本质是混合图片显示语法和普通的链接语法。普通的链接中[ ]内部是链接要显示的文本，而图片链接[ ]里面则是要显示的图片。<br>直接混合两种语法当然可以，但是十分啰嗦，为此我们可以使用URL标识符的形式。</p><table><thead><tr><th>#</th><th>语法</th><th align="center">效果</th></tr></thead><tbody><tr><td>1</td><td><code>[![weibo-logo]](http://weibo.com/linpiaochen)</code></td><td align="center"><a href="http://weibo.com/linpiaochen" target="_blank" rel="noopener">![weibo-logo]</a></td></tr><tr><td>2</td><td><code>[![](/img/zhihu.png "我的知乎，欢迎关注")][zhihu]</code></td><td align="center">[<a href="/img/zhihu.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="/img/zhihu.png" class="lazyload"></a>][zhihu]</td></tr><tr><td>3</td><td><code>[![csdn-logo]][csdn]</code></td><td align="center">[![csdn-logo]][csdn]</td></tr></tbody></table><p>因为图片本身和链接本身都支持URL标识符的形式，所以图片链接也可以很简洁（见例3）。<br>注意，此时鼠标悬停时显示的文字是图片的title，而非链接本身的title了。</p><blockquote><p>本文URL标识符都放置于文末</p></blockquote><h3 id="锚点"><a href="#锚点" class="headerlink" title="锚点"></a>锚点</h3><p>其实呢，每一个标题都是一个锚点，和HTML的锚点（<code>#</code>）类似，比如我们 </p><table><thead><tr><th>语法</th><th>效果</th></tr></thead><tbody><tr><td><code>[回到顶部](#readme)</code></td><td><a href="#readme">回到顶部</a></td></tr></tbody></table><p>不过要注意，标题中的英文字母都被转化为<strong>小写字母</strong>了。</p><blockquote><p>以前GitHub对中文支持的不好，所以中文标题不能正确识别为锚点，但是现在已经没问题啦！</p></blockquote><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">* 昵称：ymz</span><br><span class="line">- 别名：隔壁老王</span><br><span class="line">* 英文名：ymz</span><br></pre></td></tr></tbody></table></figure></div><h4 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h4><ul><li>昵称：ymz</li></ul><ul><li>别名：隔壁老王</li></ul><ul><li>英文名：ymz</li></ul><h3 id="多级无序列表"><a href="#多级无序列表" class="headerlink" title="多级无序列表"></a>多级无序列表</h3><h4 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">* 编程语言</span><br><span class="line">    * 脚本语言</span><br><span class="line">        * Python</span><br></pre></td></tr></tbody></table></figure></div><h4 id="效果-1"><a href="#效果-1" class="headerlink" title="效果"></a>效果</h4><ul><li>编程语言<ul><li>脚本语言<ul><li>Python</li></ul></li></ul></li></ul><h3 id="一级有序列表"><a href="#一级有序列表" class="headerlink" title="一级有序列表"></a>一级有序列表</h3><h4 id="语法-2"><a href="#语法-2" class="headerlink" title="语法"></a>语法</h4><p>就是在数字后面加一个点，再加一个空格。不过看起来起来可能不够明显。 </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">面向对象的三个基本特征：</span><br><span class="line"></span><br><span class="line">1. 封装</span><br><span class="line">2. 继承</span><br><span class="line">3. 多态</span><br></pre></td></tr></tbody></table></figure></div><h4 id="效果-2"><a href="#效果-2" class="headerlink" title="效果"></a>效果</h4><p>面向对象的三个基本特征：</p><ol><li>封装</li><li>继承</li><li>多态</li></ol><h3 id="多级有序列表"><a href="#多级有序列表" class="headerlink" title="多级有序列表"></a>多级有序列表</h3><p>和无序列表一样，有序列表也有多级结构。</p><h4 id="语法-3"><a href="#语法-3" class="headerlink" title="语法"></a>语法</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 这是一级的有序列表，数字1还是1</span><br><span class="line">   1. 这是二级的有序列表，阿拉伯数字在显示的时候变成了罗马数字</span><br><span class="line">      1. 这是三级的有序列表，数字在显示的时候变成了英文字母</span><br></pre></td></tr></tbody></table></figure></div><h4 id="效果-3"><a href="#效果-3" class="headerlink" title="效果"></a>效果</h4><ol><li>这是一级的有序列表，数字1还是1<ol><li>这是二级的有序列表，阿拉伯数字在显示的时候变成了罗马数字<ol><li>这是三级的有序列表，数字在显示的时候变成了英文字母</li></ol></li></ol></li></ol><h3 id="复选框列表"><a href="#复选框列表" class="headerlink" title="复选框列表"></a>复选框列表</h3><h4 id="语法-4"><a href="#语法-4" class="headerlink" title="语法"></a>语法</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- [x] 需求分析</span><br><span class="line">- [x] 系统设计</span><br><span class="line">- [x] 详细设计</span><br><span class="line">- [ ] 编码</span><br><span class="line">- [ ] 测试</span><br><span class="line">- [ ] 交付</span><br></pre></td></tr></tbody></table></figure></div><h4 id="效果-4"><a href="#效果-4" class="headerlink" title="效果"></a>效果</h4><ul><li><input checked disabled type="checkbox"> 需求分析</li><li><input checked disabled type="checkbox"> 系统设计</li><li><input checked disabled type="checkbox"> 详细设计</li><li><input disabled type="checkbox"> 编码</li><li><input disabled type="checkbox"> 测试</li><li><input disabled type="checkbox"> 交付</li></ul><p>您可以使用这个功能来标注某个项目各项任务的完成情况。</p><blockquote><p>Tip:</p><blockquote><p>在GitHub的<strong>issue</strong>中使用该语法是可以实时点击复选框来勾选或解除勾选的，而无需修改issue原文。</p></blockquote></blockquote><h2 id="块引用"><a href="#块引用" class="headerlink" title="块引用"></a>块引用</h2><h3 id="常用于引用文本"><a href="#常用于引用文本" class="headerlink" title="常用于引用文本"></a>常用于引用文本</h3><h4 id="文本摘自《深入理解计算机系统》P27"><a href="#文本摘自《深入理解计算机系统》P27" class="headerlink" title="文本摘自《深入理解计算机系统》P27"></a>文本摘自《深入理解计算机系统》P27</h4><p>　令人吃惊的是，在哪种字节顺序是合适的这个问题上，人们表现得非常情绪化。实际上术语“little endian”（小端）和“big endian”（大端）出自Jonathan Swift的《格利佛游记》一书，其中交战的两个派别无法就应该从哪一端打开一个半熟的鸡蛋达成一致。因此，争论沦为关于社会政治的争论。只要选择了一种规则并且始终如一的坚持，其实对于哪种字节排序的选择都是任意的。</p><blockquote><p><strong>“端”（endian）的起源</strong><br>以下是Jonathan Swift在1726年关于大小端之争历史的描述：<br>“……下面我要告诉你的是，Lilliput和Blefuscu这两大强国在过去36个月里一直在苦战。战争开始是由于以下的原因：我们大家都认为，吃鸡蛋前，原始的方法是打破鸡蛋较大的一端，可是当今的皇帝的祖父小时候吃鸡蛋，一次按古法打鸡蛋时碰巧将一个手指弄破了，因此他的父亲，当时的皇帝，就下了一道敕令，命令全体臣民吃鸡蛋时打破较小的一端，违令者重罚。”</p></blockquote><h3 id="块引用有多级结构"><a href="#块引用有多级结构" class="headerlink" title="块引用有多级结构"></a>块引用有多级结构</h3><h4 id="语法-5"><a href="#语法-5" class="headerlink" title="语法"></a>语法</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">> 数据结构</span><br><span class="line">>> 树</span><br><span class="line">>>> 二叉树</span><br><span class="line">>>>> 平衡二叉树</span><br><span class="line">>>>>> 满二叉树</span><br></pre></td></tr></tbody></table></figure></div><h4 id="效果-5"><a href="#效果-5" class="headerlink" title="效果"></a>效果</h4><blockquote><p>数据结构</p><blockquote><p>树</p><blockquote><p>二叉树</p><blockquote><p>平衡二叉树</p><blockquote><p>满二叉树</p></blockquote></blockquote></blockquote></blockquote></blockquote><h2 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h2><h3 id="语法-6"><a href="#语法-6" class="headerlink" title="语法"></a>语法</h3><p>在三个反引号后面加上编程语言的名字，另起一行开始写代码，最后一行再加上三个反引号。</p><h3 id="效果-6"><a href="#效果-6" class="headerlink" title="效果"></a>效果</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[]args)</span></span>{} <span class="comment">//Java</span></span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">c</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> <span class="comment">//C</span></span></span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"hello GitHub"</span> <span class="comment">#Bash</span></span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">"myH1"</span>).innerHTML=<span class="string">"Welcome to my Homepage"</span>; <span class="comment">//javascipt</span></span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> &<span class="keyword">operator</span>+(<span class="keyword">const</span> <span class="built_in">string</span>& A,<span class="keyword">const</span> <span class="built_in">string</span>& B) <span class="comment">//cpp</span></span><br></pre></td></tr></tbody></table></figure></div><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><table><thead><tr><th>表头1</th><th>表头2</th></tr></thead><tbody><tr><td>表格单元</td><td>表格单元</td></tr><tr><td>表格单元</td><td>表格单元</td></tr></tbody></table><table><thead><tr><th>表头1</th><th>表头2</th></tr></thead><tbody><tr><td>表格单元</td><td>表格单元</td></tr><tr><td>表格单元</td><td>表格单元</td></tr></tbody></table><h3 id="对齐"><a href="#对齐" class="headerlink" title="对齐"></a>对齐</h3><p>表格可以指定对齐方式</p><table><thead><tr><th align="left">左对齐</th><th align="center">居中</th><th align="right">右对齐</th></tr></thead><tbody><tr><td align="left">col 3 is</td><td align="center">some wordy text</td><td align="right">$1600</td></tr><tr><td align="left">col 2 is</td><td align="center">centered</td><td align="right">$12</td></tr><tr><td align="left">zebra stripes</td><td align="center">are neat</td><td align="right">$1</td></tr></tbody></table><h3 id="混合其他语法"><a href="#混合其他语法" class="headerlink" title="混合其他语法"></a>混合其他语法</h3><p>表格单元中的内容可以和其他大多数GFM语法配合使用，如：  </p><h4 id="使用普通文本的删除线，斜体等效果"><a href="#使用普通文本的删除线，斜体等效果" class="headerlink" title="使用普通文本的删除线，斜体等效果"></a>使用普通文本的删除线，斜体等效果</h4><table><thead><tr><th>名字</th><th>描述</th></tr></thead><tbody><tr><td>Help</td><td><del>Display the</del> help window.</td></tr><tr><td>Close</td><td><em>Closes</em> a window</td></tr></tbody></table><h4 id="表格中嵌入图片（链接）"><a href="#表格中嵌入图片（链接）" class="headerlink" title="表格中嵌入图片（链接）"></a>表格中嵌入图片（链接）</h4><p>其实前面介绍图片显示、图片链接的时候为了清晰就是放在在表格中显示的。</p><table><thead><tr><th>图片</th><th>描述</th></tr></thead><tbody><tr><td>![baidu][baidu-logo]</td><td>百度</td></tr></tbody></table><h2 id="表情"><a href="#表情" class="headerlink" title="表情"></a>表情</h2><p>Github的Markdown语法支持添加emoji表情，输入不同的符号码（两个冒号包围的字符）可以显示出不同的表情。</p><p>比如<code>:blush:</code>，可以显示:blush:。</p><p>具体每一个表情的符号码，可以查询GitHub的官方网页<a href="http://www.emoji-cheat-sheet.com" target="_blank" rel="noopener">http://www.emoji-cheat-sheet.com</a>。</p><p>但是这个网页每次都打开<strong>奇慢</strong>。。所以我整理到了本repo中，大家可以直接在此查看<a href="./emoji.md">emoji</a>。</p><h2 id="diff语法"><a href="#diff语法" class="headerlink" title="diff语法"></a>diff语法</h2><p>版本控制的系统中都少不了diff的功能，即展示一个文件内容的增加与删除。<br>GFM中可以显示的展示diff效果。使用绿色表示新增，红色表示删除。</p><h4 id="语法-7"><a href="#语法-7" class="headerlink" title="语法"></a>语法</h4><p>其语法与代码高亮类似，只是在三个反引号后面写diff，<br>并且其内容中，可以用 <code>+</code>开头表示新增，<code>-</code>开头表示删除。<br>另外还有有 <code>!</code>和<code>#</code>的语法。</p><h4 id="效果-7"><a href="#效果-7" class="headerlink" title="效果"></a>效果</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">diff</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight diff"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="addition">+ 人闲桂花落，</span></span><br><span class="line"><span class="deletion">- 夜静春山空。</span></span><br><span class="line"><span class="addition">! 月出惊山鸟，</span></span><br><span class="line"># 时鸣春涧中。</span><br></pre></td></tr></tbody></table></figure></div></body></html>]]></content>
      
      
      <categories>
          
          <category> 测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/1243066710/"/>
      <url>/posts/1243066710/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>哈哈哈，这个界面测试用</p><p>这个第一个界面，按照程序员的惯例，“你好，世界”</p><p>“Hello，World！”</p><p><del>好了，这个界面就这样吧！总的来说还是很高兴的，纯小白，租了一个服务器，摸爬滚打的，历时4天，终于有一个像模像样的页面了。</del></p><p>在这个漫长的假期里（这要从一只蝙蝠说起…hahahaha），本着生命不息，折腾不止的原则，我又换了架构。同时我也这这个漫长的假期里换了工作，以后我就是一个正儿八经的的码农啦，可能以后的硬件部分更新的不会特别勤快，又或者是不更了，你们要原谅我哦。经历太有限啦，要做的事情太多啦。</p><p>现在这个博客已经脱离了我之前的那个服务器，之前的文章有一部分还是会搬过来的，做个搬运工好累 0.0</p><p>没准哪天想开了，用那个服务器做个酸酸乳，亦或者搭一个私服。。哈哈哈，都不一定呢，走一步看一步吧，换的新工作而且还换行了，前两年的算是白干了，希望以后不会荒废这点技能，毕竟技多不压身，哈哈哈，好贪心啊我。新的工作好多事情要去学习，要去磨合，一起加油！！！A za a za~</p><p>现在终于可以踏踏实实的记录一些点滴了。</p></body></html>]]></content>
      
      
      <categories>
          
          <category> 测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>硬件研发成本,除了元器件还有什么?</title>
      <link href="/posts/51501505/"/>
      <url>/posts/51501505/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>很多初创团队计算一个项目是否启动的时候，一般都会先评估BOM成本，然后评判项目是否能够承接。一些客户，也会在面对硬件团队的报价，会表示不理解，为什么比淘宝价贵这么多？</p><p>今天就来细数，除了BOM成本，硬件研发还有哪些成本。</p><h2 id="第一，人力成本。"><a href="#第一，人力成本。" class="headerlink" title="第一，人力成本。"></a>第一，人力成本。</h2><p>人是最宝贵的，也是最贵的。在硬件产品的全流程中的人力投入粗略评估。</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/640.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/640.png" class="lazyload"></a></p><p>在整个研发流程中，各个环节所需要的人力投入都是需要进行评估的。如果对某一个环节在前期投入不足，一定会造成后续环节的时间加大投入。而且早期不解决问题，越到后期想解决，所带来的代价就会越大。</p><p>例如，如果在早期在器件选型的时候，对于器件生命周期的评估不准确，或者缺少评估。当产品量产后，发现关键器件已经部分或者全部厂家已经停产，则需要备货或者需要更改方案，带来的人力成本是非常大的浪费。</p><p>在整个研发过程中，每个环节的人力投入，或者每个环节的人力成本预算都不可以省略，或者进行裁剪需要进行严格的评估。</p><h2 id="第二、仪器仪表"><a href="#第二、仪器仪表" class="headerlink" title="第二、仪器仪表"></a>第二、仪器仪表</h2><p>万用表、示波器、稳压源这些常规的仪器仪表总要配备吧？你的电路涉及、射频、高速，所需要的仪器仪表的费用，那就不可估量了。</p><p>频谱分析仪、网络分析仪、信号发生器，配齐，发现一套二线城市的房子没有了。</p><p>曾经有一个人用6G带宽的示波器测试电源，被领导怒了：“你怎么拿着宝马测试电源。。。”</p><p>还有个人整天拿着一个极低噪声的频谱分析仪出差，也是胆战心惊，总说自己拎着房子在出差。</p><h2 id="第三、工具其实是消耗品"><a href="#第三、工具其实是消耗品" class="headerlink" title="第三、工具其实是消耗品"></a>第三、工具其实是消耗品</h2><p>除了仪器仪表，还有一些易耗品，工具：搞硬件嘛，螺丝刀，大的、小的、十字、一字，钳子：斜口钳、剥线钳、尖嘴钳；烙铁：烙铁头、烙铁芯、吸锡器、热风焊台，焊锡丝、吸锡扁带、助焊剂、松香、洗板水；镊子、弯头镊子、直头镊子；</p><p>5S做得不好，或者大家不爱惜的话，很容易工具丢失，或者损坏。而且有限工具是消耗品，例如镊子，·很容易变形，变得不能捏起0402封装的电容电阻。</p><h2 id="第四、改板"><a href="#第四、改板" class="headerlink" title="第四、改板"></a>第四、改板</h2><p>PCB制版，往往不是一次成功，可能会有一些错误、或者不稳定的因素，需要通过重新加工新版本的 PCB进行优化方案。如果在调测阶段的改板，主要浪费的是制版费、SMT、物料费用。如果在项目交付接近尾声的时候，如果这时候改板，则所有相关的环节都需要重新做一遍，试验、测试。造成的浪费和损失将会更大。</p><h2 id="第五、直通率"><a href="#第五、直通率" class="headerlink" title="第五、直通率"></a>第五、直通率</h2><p>直通率是对产品从第一道工序开始一次性合格到最后一道工序的参数，能够了解产品生产过程中在所有工序下产品直达到成品的能力，是反应企业质量控制能力的一个参数。</p><p>如果产品直通率不高，所带来的成本，有可能是产品报废率的成本，或者是维修的人力成本，都是极大的浪费。</p><p>直通率不但要关注SMT，还需要关注其他生产环节，结构件装配，生产测试等等。</p><h2 id="第六、物流费"><a href="#第六、物流费" class="headerlink" title="第六、物流费"></a>第六、物流费</h2><p>顺丰最贵，但是有时为了发货时间、稳定可靠，不得不选择。但是中通、德邦快递等等也是各自有各自的优势。</p><h2 id="第七、税费"><a href="#第七、税费" class="headerlink" title="第七、税费"></a>第七、税费</h2><p>之前，中小企业3%营业税。现在营改增。营业税改增值税（以下简称营改增）是指以前缴纳营业税的应税项目改成缴纳增值税，增值税只对产品或者服务的增值部分纳税，减少了重复纳税的环节，是党中央、国务院，根据经济社会发展新形势，从深化改革的总体部署出发做出的重要决策，目的是加快财税体制改革、进一步减轻企业税负，调动各方积极性，促进服务业尤其是科技等高端服务业的发展，促进产业和消费升级、培育新动能、深化供给侧结构性改革。</p><p>企业所得税的税率为25%的比例税率。</p><p>原“企业所得税暂行条例”规定，企业所得税税率是33%，另有两档优惠税率，全年应纳税所得额3－10万元的，税率为27%，应纳税所得额3万元以下的，税率为18%；特区和高新技术开发区的高新技术企业的税率为15%。外资企业所得税税率为30%，另有3%的地方所得税。新所得税法规定法定税率为25%，内资企业和外资企业一致，国家需要重点扶持的高新技术企业为15%，小型微利企业为20%，非居民企业为20%。</p><p>企业应纳所得税额=当期应纳税所得额*适用税率</p><p>应纳税所得额=收入总额-准予扣除项目金额</p><p>企业所得税的税率即据以计算企业所得税应纳税额的法定比率。根据《中华人民共和国企业所得税暂行条例》的规定，2008年新的<中华人民共和国所得税法>；规定一般企业所得税的税率为25%。</p><h2 id="第八、BOM清单中容易忽略的费用"><a href="#第八、BOM清单中容易忽略的费用" class="headerlink" title="第八、BOM清单中容易忽略的费用"></a>第八、BOM清单中容易忽略的费用</h2><p>除了元器件的采购，还有，结构件、开模费、线缆费用、连接器费用、包装、电源、外置天线，这些BOM清单里面的成本往往容易被忽略。</p><h2 id="第九、生产加工"><a href="#第九、生产加工" class="headerlink" title="第九、生产加工"></a>第九、生产加工</h2><p>PCB加工、SMT、整机装配、整机调测、包装。有一些产品在生产环节还需要特殊工艺：例如一些特殊环境的产品，需要做三防、打胶，有一些需要甚至需要做水密测试</p><h2 id="第十、维修、维护费用"><a href="#第十、维修、维护费用" class="headerlink" title="第十、维修、维护费用"></a>第十、维修、维护费用</h2><p>硬件产品售出之后，不是一卖了之。器件都有一点的失效率。器件、甚至包括一些结构件，不可能完全不损坏。现场的故障需要有人能解决，质保期的产品还需要维保。</p><h2 id="第十一、现场安装、升级"><a href="#第十一、现场安装、升级" class="headerlink" title="第十一、现场安装、升级"></a>第十一、现场安装、升级</h2><p>如果，远程搞不定的问题，可能还需要去现场安装、升级、调测。其中产生的差旅费，返修件、替换件等等，都需要成本支出。</p><h2 id="第十二、呆死料"><a href="#第十二、呆死料" class="headerlink" title="第十二、呆死料"></a>第十二、呆死料</h2><p>呆死、死料形成原因：1、设计改型后，原先的材料有新的替代料；2、采购过程中没有进行配套采购，多余的料就形成了呆死料；3、库房盘点不及时，对库存台账没有进行分析；4、材料没有保质期管理，长时间后，可用料变成无用料。</p><p>至此，我们也就可以清楚的看到硬件研发，除了物料成本之外，还有大量的成本需要支出。</p></body></html>]]></content>
      
      
      <categories>
          
          <category> 硬件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 硬件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>嵌入式系统低功耗设计</title>
      <link href="/posts/3993218583/"/>
      <url>/posts/3993218583/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在嵌入式系统中，低功耗设计是在产品规划以及设计过程中必须要面对的问题。半导体芯片每18个月性能就能翻一倍，但同时，电池的技术却跟不上半导体的步伐，同体积的电池10年容量才能翻一倍，嵌入式系统对于使用时间以及待机时间问题的要求越来越高了。这就需要在设计过程充分考虑功耗的问题，可以从以下几个角度来分别考虑，然后统筹规划。</p><h2 id="1、低功耗器件选型"><a href="#1、低功耗器件选型" class="headerlink" title="1、低功耗器件选型"></a>1、低功耗器件选型</h2><p>随着半导体工艺的不断发展，半导体的制造工艺也在不断进步，选用先进工艺以及低功耗设计的元器件可以从源头上降低整个系统的功耗。</p><p>1）主控芯片的选型要充分考虑到系统的使用场景，对于运算任务比较多的应用场景下，可选用能耗比较高的芯片来设计，比如ambiq的apollo系列芯片，该芯片采用具有专利的spot技术，芯片在亚阈值稳定运行，可以减小能源消耗近14倍，实现极致的低功耗。</p><p>2）对于嵌入式系统，电源芯片对于低功耗设计是一个很重要的器件，电源芯片自身的功耗以及转换效率在很大程度上影响电池的使用时间，进行低功耗的稳压电路设计，需采用低功耗的LDO或DC-DC芯片，如Ti的TPS797系列，自身功耗仅1.2uA。</p><p>3）在满足功能需求的情况下，尽可能选用带触发输出功能的外部器件，及时关闭非需要轮询的外部器件，这样可以减小整体的功耗，同时也可以减少MCU的运行时间，平时Mcu可以一直处于睡眠状态，在满足出发条件时，由外部器件通过中断来唤醒MCU工作。</p><h2 id="2、硬件的低功耗设计与制造技术"><a href="#2、硬件的低功耗设计与制造技术" class="headerlink" title="2、硬件的低功耗设计与制造技术"></a>2、硬件的低功耗设计与制造技术</h2><p>硬件设计对于嵌入式系统的功耗也有着至关重要的因素。</p><p>1）对外围元器件的电源控制，采用带关断功能的器件，对于那些在进入低功耗模式下不需要工作的外设，可以使用MOS管电路并配合Mcu控制或者片选/使能引脚对局部的电路进行电源管理，在该设备不需要工作时，需尽量关断该部分电源以达到更低的功耗。</p><p>2）多级电压设计，电压与功耗之间有着密切的联系，因此功耗的降低可以考虑对于不同电路模块，使用不同的电压模块等级，采用DVFS动态电压频率技术，通过将不同电路模块的工作电压及工作频率降低到恰好满足系统最低要求，来实时降低系统中不同电路模块功耗的办法。</p><p>3）硬件设计对于MCU的每个IO口，都要避免IO口漏电流。当外设掉电时，IO口仍然会有潜在的电流输出，所以IO口需要默认配置成低电平或者高电平状态，避免漏电流。</p><h2 id="3、软件对于系统功耗的优化"><a href="#3、软件对于系统功耗的优化" class="headerlink" title="3、软件对于系统功耗的优化"></a>3、软件对于系统功耗的优化</h2><p>1）适当的降低CPU的运行频率，降低MCU的运行速度，可以有效的降低运行时需要消耗的电流，芯片的功耗和主频是线性的关系，更高的时钟频率意味着更快的MCU运行速度，那么MCU内部CMOS电路更快的开关频率，导致更高的运行电流和待机电流。</p><p>2）合理的使用MCU的待机模式，在当前没有任务需要处理时，将MCU进入低功耗的睡眠模式。对于使用嵌入式操作系统的嵌入式产品，一般都是在idle空闲任务中进入睡眠模式，但是为了进一步降低功耗，实现低功耗最优设计，我们还不能直接把谁爱你或者停机模式直接放在空闲任务就可以了，需要设计一种更先进的休眠机制，比如在freertos操作系统中使用tickless低功耗机制，进入空闲任务后，首先计算可以执行低功耗的最大时间，也就是求出下一个要执行的高优先级任务还剩多长时间，然后把低功耗的唤醒时间设置为这个求出的时间，到时间后，系统会从低功耗模式被唤醒，继续执行多任务。</p><p>3）关注每一个GPIO口的电平状态，在进入睡眠之前，配置所有的GPIO口到高电平或者低电平以降低漏电流。对于外挂的传感器以及外围设备，也需要在进入睡眠之前配置其功耗模式以降低消耗的电流。</p><p>4）合理的关闭MCU内部模块，对于在DeepSLeep模式下不需要工作的内部模块都要关闭时钟以及电源以节省功耗，同时要重点关注模拟IO口，模拟功能一般是耗电大户，在AD/DA功能不使用的时候尽快关闭，减小使用模拟功能的时间，此外，芯片内部SRAM由于要不停的刷新，在睡眠模式下也需要消耗一定的电流，可以配置部分SRAM在睡眠模式下保持刷新降低功耗。</p><p>5）对于包含有无线功能的芯片，配置合理的待机参数以此降低功耗，比如对于BLE芯片CSR1010，在进行BLE广播模式下，60ms的广播时间增大到1.28s，待机电流降低到28uA。对于wifi芯片，比如高通QCA4004芯片，在DTIM1情况下对应功耗为1.5mA，在DTIM10 情况下则降低到334uA 。</p></body></html>]]></content>
      
      
      <categories>
          
          <category> 硬件 </category>
          
          <category> 低功耗 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 硬件 </tag>
            
            <tag> 低功耗 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开关电源基础知识</title>
      <link href="/posts/2454698225/"/>
      <url>/posts/2454698225/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h2 id="1、输出纹波噪声及输出电路的处理"><a href="#1、输出纹波噪声及输出电路的处理" class="headerlink" title="1、输出纹波噪声及输出电路的处理"></a>1、输出纹波噪声及输出电路的处理</h2><p>PWM开关电源的输出纹波噪声与开关的频率有关。其纹波噪声分为两大部分：纹波（包括开关频率的稳波和周期性及随机性漂移）和噪声（开关过程中产生）</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/power1.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/power1.png" class="lazyload"></a></p><p>在纹波与噪声的测量过程中，如果不使用正确的测量方法将无法正确的测量出真正的输出纹波噪声。下面是推荐的测量方法：</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/power2.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/power2.png" class="lazyload"></a></p><p>平行线测量法：输出管脚接平行线后接电容，在电容两端使用20MHz示波器探头测量。具体要求见上图，C为陶瓷电容，负载与模块之间的距离在51mm和76mm（2in和3in）之间。<br>在大多数电路中，电源模块都能满足要求，对于输出纹波有较为严格要求的电源系统可以在输出增加差模滤波器来进一步降低纹波，但在设计过程中注意尽量选择较小的电感和较大的电容，如果需要进一步减小噪声，需要加共模滤波器。</p><p>输入与输出及外壳之间加高压隔离电容（一般为1~2.2nF）也可以减小共模噪声。</p><h2 id="2、多路输出的交互调节及应用"><a href="#2、多路输出的交互调节及应用" class="headerlink" title="2、多路输出的交互调节及应用"></a>2、多路输出的交互调节及应用</h2><p>对于多路输出的电源模块，人们比较关心输出负载发生变化时不同输出路的相互见的影响。例如，当主路输出空载时，辅路输出的负载能力极低。 可以采用集成磁路的概念或者采取双路同步控制使输出电压之间的交互调节性大大改善。</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/power3.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/power3.png" class="lazyload"></a></p><p>图中的Io1为主路的负载电流，Io2为辅路的负载电流，Vo2为辅路的输出电压<br>由上图可见，在主路负载从20%~100%变化时，辅路输出电压随辅路负载电流得到变化曲线中，辅路输出电压始终在±4%范围内。即使在最坏的情况，即主路空载辅路满载、主路满载辅路空载时，其输出电压也能保证在标称电压的±10%范围内。由此，对于输出稳压精度要求不太高的情况下，这种不稳压的辅路输出不仅能够满足供电的需求，而且相对成本低，器件少，可靠性高。建议用户首先考虑不稳压的电源模块。</p><h2 id="3、容性负载能力与电源输出保护"><a href="#3、容性负载能力与电源输出保护" class="headerlink" title="3、容性负载能力与电源输出保护"></a>3、容性负载能力与电源输出保护</h2><p>建议用户对电源模块的阻性负载取大于10%额定负载，这样模块工作比较稳定。</p><p>电容作为电源去耦及抗干扰能力的手段，在现代电子电路中必不可少，尤其是输出过载保护，容性负载能力不可能太大，否则保护特性将变差因此用户在使用过程中负载电容不应超过最大容性负载能力。</p><p>输出电流保护一般有五种方式：</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/power4.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/power4.png" class="lazyload"></a></p><p>1）恒流式：当到达电流保护点时，输出电流随负载的进一步加重，略有增加，输出电压不断下降。<br>2）回折式：当到达电流保护点时，输出电流随负载的加重，输出电压不断下降，同时输出电流也不断下降<br>3）截止式：当达到电流保护点时，电源模块输出被禁止。<br>4）恒流-截止式：当到达电流保护点时，首先是恒流式的保护方式，当输出电流达到某值时，电源模块输出被禁止。<br>5）精确自恢复截止式：输出电流达到保护点，电源模块输出被禁止，负载减轻电路自恢复。</p><p>在大部分电路中使用恒流式和截止式较多，比较理想的保护方式是精确自恢复截止式或者恒流-截止式保护。其中恒流式、回折式保护的本质就是自恢复的，但是输出短路时的功耗较大，尤其是恒流式。而截止式、恒流-截止式保护的自恢复特性需加辅助复位电路来完成自恢复，其输出过载时的功耗可以通过复位电路的周期进行调整，即调整间歇启动时间间隔。一般电流保护1.2~2倍标称输出电流。精确自恢复截止式电流保护点设置为标称输出电流1.2倍或1.3倍。</p><p>一般输出有过压嵌位保护。</p><h2 id="4、负载瞬态响应"><a href="#4、负载瞬态响应" class="headerlink" title="4、负载瞬态响应"></a>4、负载瞬态响应</h2><p>当输出的负载迅速变化时输出的电压会出现上冲或下跌，电源模块经过调整恢复原输出电压。这个响应过程中有两个重要指标：过冲电压（Vo）和恢复时间（tr）。过冲越小、恢复时间越短，系统响应速度越快。一般在25%的标称负载阶跃变化，输出电压过冲为4%Vo，恢复时间为500us左右。</p><h2 id="5、热设计"><a href="#5、热设计" class="headerlink" title="5、热设计"></a>5、热设计</h2><p>由于电源模块的转换效率不可能是100%，因此自身有一定的功耗，电源模块本身发热的高低，主要取决于电源模块的转换效率，在一定我外壳散热条件下，电源模块存在一定的温升（即电源模块与环境温度的差异）。电源模块外壳散热表面积的大小直接影响温升。对于环境温度较高的地方，必须将模块降额使用以减小模块的功耗，从而减小温升，保证外壳温度不超过极限值。推荐用户根据环境条件降额使用模块电源，以获得较大的安全余量。</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/power5.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/power5.png" class="lazyload"></a></p><p>对于功率较大的模块须加相应的散热器以使模块的温升下降，不同的散热器在自然散热的条件下有不同的对环境的热阻，主要影响散热器热阻的因素是散热器的表面积。</p><p>散热器的选择：假设电源模块的效率为η，最大基板允许温度为Tmax，则：电源的耗散功率为PD=Po*（1-η）/η；温差：ΔT=Tmax-Ta（Ta为环境温度）；则：散热器所需要的热阻Rth为：Rth=ΔT/PD；接下来我们只要查散热器的产品目录或手册，从中找出合适尺寸的、在合适环境及自然对流与辐射下的热阻值小于Rth的散热器即可。</p></body></html>]]></content>
      
      
      <categories>
          
          <category> 硬件 </category>
          
          <category> 电源 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 硬件 </tag>
            
            <tag> 电源 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何为嵌入式设计选择最优的8位MCU？</title>
      <link href="/posts/245078137/"/>
      <url>/posts/245078137/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>尽管竞争激烈，而且32bit的ARM cortex-M处理器等新平台的市场份额在强劲增长，现今8bitMCU仍占据着这个微控制器市场的很大一部分。其优势主要在于以下几个因素：低成本、简单、快速掌握用法以及成熟的生态系统，这个生态系统包含无处不在的工具库。</p><p>目前的8bit MCU技术已经十分成熟，其价格已经接近其下限，这为开发人员带来了选择难题，在选型的时候有很多具有相似价格和功能的产品但是哪个才是最优的选择呢？</p><h2 id="1、生态系统"><a href="#1、生态系统" class="headerlink" title="1、生态系统"></a>1、生态系统</h2><p>1）工具</p><p>当成本成为嵌入式设计应该考虑的主要因素时，避免在编译器许可证或者编码环境花费资金是明智的。在选择MCU之前，请确认供应商的芯片和他们提供的软件示例是否能够在免费的开发平台上使用。否则取决于需要组件数量的不同，即使一家供应商的平均销售价格等于或高于另外一家，最终的实际花费成本也可能是较低的。</p><p>例如来自竞争厂商的两个基于8051的MCU选择可能具有类似的芯片价格，但工具成本不同。如果MCU供应商提供的基于8051的芯片缺少免费编译器或集成开发环境（IDE）许可证，则开发人员必须使用KEIL或IAR并支付许可费用，从而增加了项目的总投资。更加具有成本优势的选择是使用免费IDE和无限制KEIl许可证支持的8bit平台。</p><p>2）软件</p><p>一旦理解了编译器和开发环境，下一个隐形的技术指标是MCU平台上软件示例和生态系统的可用性。例如寻找那些为其外设提供大量代码示例的MCU供应商。这样可以轻松把控所需的每一个外设，如PWM、UART和ADC等等，然后将他们组合到一个项目中，就能很快地进入市场并增加潜在的收入，使得产品拥有更高的溢价能力，所以，良好的MCU生态系统可提供更高的性价比优势。</p><h2 id="2、技术指标：设计、特性和测试"><a href="#2、技术指标：设计、特性和测试" class="headerlink" title="2、技术指标：设计、特性和测试"></a>2、技术指标：设计、特性和测试</h2><p>在仔细阅读相对简单的8bit MCU规格书时，可以从数据手册的摘要中轻松的了解器件的功能，然后参考电气规格表以获得有关重要规格的更多详细信息。然而，事实上比看起来要更加复杂一点，开发人员应该考虑三个关键方面：（1)是否有对设计来说重要的最大值和最小值；（2）这些值的测试条件是否匹配实际使用情况；（3）这些参数是否得到设计、特性或者测试保证。</p><p>由于温度、VDD范围、工作频率和其他因素会影响设计中的真实值，因此需要始终谨慎考虑典型值。如今，业界常见的情况是：在一个基于另一个参数的技术指标下，会发生功能受限的情况。通常数据手册首页上会展现非常有吸引力的技术指标。然而，在深入研究电气技术规范表之后，很明显看似顶尖的技术参数仅存在于各个条件非常受限的情况下，这可能是实际应用环境所满足不了的情况，或者和设计的其他方面相冲突。这种错觉可能会导致失望、更严重的可能导致整个项目的前功尽弃，因为最初的最佳方案进来自首页，然后细读手册后发现那些特殊要求后，设计决策变得不那么明确了。</p><p>此外，在检查数据手册时，重要的是要研究注解，并了解它是否得到设计、特性或测试保证。通常设计在规格中有最低可信度，而测试在规格中有最大的信任度。</p><h2 id="3、灵活性和可扩展性"><a href="#3、灵活性和可扩展性" class="headerlink" title="3、灵活性和可扩展性"></a>3、灵活性和可扩展性</h2><p>在每个项目中切换不同架构和技术可能会推迟设计的完成，从而减缓产品上市时间，虽然供应商A的器件可能是手头项目的最佳选择，但供应商B可能有另外一款器件对于今年晚些时候的项目更好，这需要为每个项目进行优化、权衡并在之间重用开发成果。</p><p>所以在评估当前设计的供应商选择时，请确保他们拥有合适未来产品的解决方案仔细查看MCU系列中的每一个器件型号是值得的，这样能确保功能一致，并在移植到其他器件时不会牺牲重要的功能。</p><h2 id="4、寿命和供应保证"><a href="#4、寿命和供应保证" class="headerlink" title="4、寿命和供应保证"></a>4、寿命和供应保证</h2><p>8bit市场已经非常成熟，8bit器件也已经存在了几十年，因此，现在8bit器件的ASP非常低，这对开发人员来说很好，但对半导体供应商而言可能是个痛点，因为半导体供应商已经接近盈利最低点，而且一些供应商已经放弃 对其8bit产品的新品设计，当供应商发布其寿命终止（EOL）以及“不推荐用于新设计”（NRND）通知时，这种情况可能会变得令人担忧，这可能会威胁到最终产品的使用寿命。</p><p>MCU产品的使用寿命可能不是快速设计的关键问题，例如寿命短且快速下降的消费类产品，但对于医疗、汽车和工业应用来说至关重要，这些应用的终端产品常常需要两到三年的设计时间，然后其应用需求平缓的上升并持续超过10年，如果由于廉价8bit MCU停产而失去重要的、可盈利的终端产品市场，那么对于企业将是一个巨大的损失。</p></body></html>]]></content>
      
      
      <categories>
          
          <category> 硬件 </category>
          
          <category> 选型 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 硬件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通过远程桌面图形界面的方式操作Ubuntu服务器</title>
      <link href="/posts/3759941023/"/>
      <url>/posts/3759941023/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>前一段时间，在服务器上使用了IIS服务，虽然之前就有耳闻，IIS服务会有各种各样莫名其妙的坑，让你来慢慢填，并且网上相关的资料少的可怜，这次相信大家的选择了，这里也就不吐槽IIS了，既然选用了apache，那Windows留着也没啥意思 了，干脆直接换Linux，这次直接装了公共镜像Ubuntu18.04.1 LTS 64位，然后意识到没有图形界面，就倒腾倒腾。</p><h2 id="目的："><a href="#目的：" class="headerlink" title="目的："></a>目的：</h2><p>希望通过本地的Windows远程桌面，通过远程桌面图形界面的方式操作服务器。</p><h2 id="具体实现方式："><a href="#具体实现方式：" class="headerlink" title="具体实现方式："></a>具体实现方式：</h2><p>(1) 首先通过Windows系统下连接Linux系统的命令行工具连接Ubuntu服务器,(工具:xshell,securecrt,putty等)。</p><p>(2) 通过Windows下工具连接到linux操作系统,之后打开命令窗口,切换到root权限。</p><p>(3) 先安装更新:apt-get upate。</p><p>(4) 安装xrdp:输入apt-get install xrdp–>回车–>输入”y”–>回车,安装完成。<br>(xrdp: An open source remote desktop protocol(rdp) server)</p><p>(5) 安装vnc4server:输入apt-get install vnc4server”–>回车–>输入”y”–>回车,安装完成。<br>(VNC (Virtual Network Console)是虚拟网络控制台的缩写)</p><p>(6) 安装xfce4:输入apt-get install xubuntu-desktop”–>回车–>输入”y”–>回车。<br>–>输入echo “xfce4-session” >~/.xsession–>回车–>输入 service xrdp restart–>回车,安装完成。<br>(Xfce是一个自由软件,运行在类Unix操作系统 (如Linux、FreeBSD 和 Solaris)上,提供轻量级桌面环境。)</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/Ubuntu1.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/Ubuntu1.png" class="lazyload"></a></p><p>(7) 在本地Windows电脑上,使用”窗口键+R”打开”运行对话框”–>输入”mstsc”–>回车–>输入Ubuntu主机的IP地址–>”连接”。</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/Ubuntu2.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/Ubuntu2.png" class="lazyload"></a></p><p>(8) 选择”sesman-Xvnc”–>输入”用户名和密码”–>回车,成功登录到Ubuntu桌面,现在可以进行远程操作了。</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/Ubuntu3.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/Ubuntu3.png" class="lazyload"></a></p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>界面是看到了，但是对于服务器的资源消耗比较严重，所以就不要这个功能了，还是老老实实的用命令行吧。>_<</p></body></html>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
          <category> Ubuntu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开关电源—MOS管GS震荡</title>
      <link href="/posts/2183954523/"/>
      <url>/posts/2183954523/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>我们测试MOS管GS波形时，有时会看到下图中的这种波形，在芯片输出端是非常好的方波输出，但一旦到了MOS管的G极就出问题了，有振荡，这个振荡小的时候还能勉强过关，但是有时候振荡特别大，看着都教人担心会不会重启。</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/5PUKOe1mk8I3D9N.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/5PUKOe1mk8I3D9N.jpg" class="lazyload"></a></p><p>IC出来的波形正常，到C1两端的波形就有振荡了。</p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>实际上这个振荡就是R1,L1和C1三个元器件的串联振荡引起的，R1为驱动电阻，是我们外加的，L1是PCB上走线的寄生电感，C1是mos管gs的寄生电容。</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/WAQdECZ1T8MpeIs.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/WAQdECZ1T8MpeIs.jpg" class="lazyload"></a></p><p>对于一个RLC串联谐振电路，其中L1和C1不消耗功率，电阻R1起到阻值振荡的作用阻尼作用。上图可以简化为：</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/t9Dc3pjnJ2CPdZG.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/t9Dc3pjnJ2CPdZG.png" class="lazyload"></a></p><hr><h2 id="建立方程求解"><a href="#建立方程求解" class="headerlink" title="建立方程求解"></a>建立方程求解</h2><p>RLC串联电路的微分方程，先列KVL</p><p>uR(t)+uL(t)+uC(t)=uS(t)</p><p>带入元件VCR</p><p>i(t)=iL(t)=iC(t)=c*duC/dt</p><p>uR(t)=Ri(t)=RC*duC/dt</p><p>uL(t)=L<em>di/dt=LC</em>d^2uC/dt^2</p><p>得：</p><p>LC<em>d^2uC/dt^2+RC</em>duC/dt+uC=uS(t)</p><hr><p>这是一个常系数非齐次线性二阶微分方程。为了得到电路的零输入响应，令uS(t)=0,得二阶齐次微分方程：</p><p>LC<em>d^2uC/dt^2+RC</em>duC/dt+uC=0</p><p>其特征方程为：LCs^2+RCs+1=0</p><p>解得：</p><p>s1=-R/(2L)+{[R/(2L)]^2-1/(LC)}^0.5</p><p>s2=-R/(2L)-{[R/(2L)]^2-1/(LC)}^0.5</p><p>特征根称为电路得固有频率。</p><hr><h2 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h2><p>实际上这个电阻的值就决定了C1两端会不会振荡。</p><h3 id="1、当R1-gt-2-L1-C1-0-5时，S1，S2为不相等的实数根。过阻尼情况。"><a href="#1、当R1-gt-2-L1-C1-0-5时，S1，S2为不相等的实数根。过阻尼情况。" class="headerlink" title="1、当R1>2(L1/C1)^0.5时，S1，S2为不相等的实数根。过阻尼情况。"></a>1、当R1>2(L1/C1)^0.5时，S1，S2为不相等的实数根。过阻尼情况。</h3><p>齐次微分方程得解为：</p><p>uC(t)=A1<em>e^(s1</em>t)+A2<em>e^(s2</em>t)</p><p>A1、A2由初始条件确定:</p><p>令式中的t=0+得：uC（0+）=A1+A2</p><p>对uC(t)求导，再另t=0+得：[duC(t)/dt|t=0+]=A1<em>s1+A2</em>s2=iL(0+)/C</p><p>联立可求得：</p><p>A1=1/(s2-s1)*[s2*uC(0+)-iL(0+)/C]</p><p>A2=1/(s1-s2)*[s1*uC(0+)-iL(0+)/C]</p><p>将A1、A2带入uC(t)得到电容电压得零输入响应（mos得g极的电压），再利用KCL方程和电容的VCR可以得到电感电流的零输入响应。</p><p>当uC(0+)=U0,iL(0+)=0,t>0时：</p><p>uC(t)=s2<em>U0/(s2-s1)</em>e^(s1<em>t)-s1</em>U0/(s2-s1)<em>e^(s2</em>t)</p><p>i(t)=C<em>duC(t)/dt=U0/[L</em>(s2-s1)]*[e^(s1<em>t)-e^(s2</em>t)]</p><p>uL(t)=L<em>di/dt=U0/(s1-s2)</em>[s1<em>e^(s1</em>t)-s2<em>e^(s2</em>t)]</p><p>在这种情况下，基本不会发生振荡的。</p><h3 id="2、当R1-2-L1-C1-0-5时，S1，S2为两个相等的实数根。临界情况。"><a href="#2、当R1-2-L1-C1-0-5时，S1，S2为两个相等的实数根。临界情况。" class="headerlink" title="2、当R1=2(L1/C1)^0.5时，S1，S2为两个相等的实数根。临界情况。"></a>2、当R1=2(L1/C1)^0.5时，S1，S2为两个相等的实数根。临界情况。</h3><p>在这种情况下，有振荡也是比较微弱的。</p><h3 id="3、当R1-lt-2-L1-C1-0-5时，S1，S2为共轭复数根。欠阻尼情况。"><a href="#3、当R1-lt-2-L1-C1-0-5时，S1，S2为共轭复数根。欠阻尼情况。" class="headerlink" title="3、当R1<2(L1/C1)^0.5时，S1，S2为共轭复数根。欠阻尼情况。"></a>3、当R1<2(L1/C1)^0.5时，S1，S2为共轭复数根。欠阻尼情况。</h3><p>在这种情况下，电路一定会发生振荡。</p><hr><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>所以对于上述的几个振荡需要消除的话，我们有几个选择.</p><p>1，增大电阻R1使R1≥2(L1/C1)^0.5，来消除振荡，对于增大R1会降低电源效率的，我们一般选择接近临界的阻值。</p><p>2，减小PCB走线寄生电感，这个就是说在布局布线中一定要注意的。</p><p>3、增大C1,对于这个我们往往都不太好改变，C1的增大会使开通时间大大加长，我们一般都不去改变他。</p><p>所以最主要的还是在布局布线的时候，特别注意走线的长度“整个驱动回路的长度”越短越好，另外可以适当加大R1.</p></body></html>]]></content>
      
      
      <categories>
          
          <category> 硬件 </category>
          
          <category> 电源 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 硬件 </tag>
            
            <tag> 电源 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UCCx8C4x BiCMOS低功耗电流模式PWM控制器（ucc28c40）</title>
      <link href="/posts/1574715952/"/>
      <url>/posts/1574715952/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>前一段时间（很长很长的一段时间）安排了一些电源设计的工作，发现了一个PWM控制器，略有感触，记录一下。ti的片子，手册如下：<a href="http://www.ti.com/cn/lit/ds/symlink/ucc28c40.pdf" target="_blank" rel="noopener">http://www.ti.com/cn/lit/ds/symlink/ucc28c40.pdf</a></p><h2 id="描述："><a href="#描述：" class="headerlink" title="描述："></a>描述：</h2><p>UCCx8C4x系列是高性能，电流模式PWM控制器。UCCx8C4x是增强型BiCMOS版本，与业界标准UCx84xA系列和UCx84x系列PWM控制器具有引脚对引脚兼容性。BiCMOS技术提供更低的功耗，以提高效率以及更快的电流检测和振荡器频率。此外，7 V的较低启动电压版本作为UCCx8C40和UCCx8C41提供，用于电池系统。UCC28C4x系列的额定工作温度范围为-40°C至105°C，UCC38C4x系列的工作温度范围为0°C至70°C。</p><p>该系列提供控制固定频率，峰值电流模式电源的必要功能，具有以下性能优势。该器件提供高达1 MHz的高频工作，适用于高速应用。与UCx84x系列相比，经过调整的放电电流可以更精确地编程最大占空比和死区时间限制。降低启动和工作电流可最大限度地降低启动损耗和低工作功耗，从而提高效率。该器件还具有35 ns的快速电流检测输出延迟时间，可在电源开关上实现出色的过载保护，并具有±1 A的峰值输出电流能力，并可改善直接驱动大型外部MOSFET的上升和下降时间。</p><h2 id="功能框图"><a href="#功能框图" class="headerlink" title="功能框图"></a>功能框图</h2><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/blockdia_slus458.gif" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/blockdia_slus458.gif" class="lazyload"></a></p><h2 id="引脚定义"><a href="#引脚定义" class="headerlink" title="引脚定义"></a>引脚定义</h2><h3 id="1、-COMP"><a href="#1、-COMP" class="headerlink" title="1、 COMP"></a>1、 COMP</h3><p>UCCx8C4x系列中的误差放大器具有1.5 MHz的单位增益带宽。COMP端子可以提供电流和吸收电流。误差放大器在内部是电流限制的，因此可以通过外部强制COMP到GND来命令零占空比。</p><h3 id="2-、FB"><a href="#2-、FB" class="headerlink" title="2 、FB"></a>2 、FB</h3><p>FB是误差放大器的反相输入。误差放大器的同相输入内部调整为2.5 V±1％。FB用于控制电源转换器电压反馈环路的稳定性。为获得最佳稳定性，请尽可能缩短FB引线长度，尽可能缩小FB杂散电容。</p><h3 id="3-、CS"><a href="#3-、CS" class="headerlink" title="3 、CS"></a>3 、CS</h3><p>UCCx8C4x电流检测输入直接连接到PWM比较器。将CS连接到MOSFET源极电流检测电阻。PWM使用该信号终止OUT开关导通。可以对该引脚施加电压斜坡，以使用电压模式控制配置运行器件或增加斜率补偿。为防止由于前沿噪声引起的误触发，可能需要RC电流检测滤波器。电流检测放大器的增益通常为3 V / V.</p><h3 id="4-、RT-CT"><a href="#4-、RT-CT" class="headerlink" title="4 、RT / CT"></a>4 、RT / CT</h3><p>RT / CT是振荡器定时引脚。对于固定频率操作，通过在VREF和RT / CT之间连接一个电阻来设置定时电容充电电流。通过将定时电容从RT / CT连接到GND来设置频率。为获得最佳性能，请将定时电容引线尽可能短且直接接地。如果可能，请为定时电容和所有其他功能使用单独的接地走线。</p><p>UCCx8C4x的振荡器允许工作在1 MHz。该器件使用外部电阻设置外部电容的充电电流，从而决定振荡器频率。TI建议定时电阻值为1kΩ至100kΩ，定时电容值为220 pF至4.7 nF。UCCx8C4x振荡器适用于较低频率的原始双极器件的曲线，但将频率可编程范围扩展至至少1 MHz。这使器件能够在需要时提供引脚对引脚功能，并能够将工作范围扩展到更高的频率。有关设置振荡器频率的元件值，请参见下图。</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/D001_slus458-300x224.gif" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/D001_slus458-300x224.gif" class="lazyload"></a></p><h3 id="5-、GND"><a href="#5-、GND" class="headerlink" title="5 、GND"></a>5 、GND</h3><p>GND是信号和电源返回地。TI建议将信号返回路径和高电流栅极驱动器路径分开，以使信号不受开关电流的影响。</p><h3 id="6-、OUT"><a href="#6-、OUT" class="headerlink" title="6 、OUT"></a>6 、OUT</h3><p>UCCx8C4x的高电流输出级为了直接驱动功率MOSFET而经过重新设计，图腾柱输出驱动器吸收或提供高达1 A的电流峰值。UCCx8C40，UCCx8C42和UCCx8C43器件的OUT以与振荡器相同的频率切换，并且可以在100％占空比附近工作。在UCCx8C41，UCCx8C44和UCCx8C45中，由于内部T触发器，OUT的开关频率是振荡器的一半。这将UCCx8C41，UCCx8C44和UCCx8C45的最大占空比限制为<50％。</p><h3 id="7-、VDD"><a href="#7-、VDD" class="headerlink" title="7 、VDD"></a>7 、VDD</h3><p>VDD是该器件的电源输入连接。在正常工作时，通过限流电阻为VDD供电。绝对最大电源电压为20 V（瞬间超过之后也会烧毁芯片，之前没太注意让vdd为12v觉得离20v还有8v的安全电压，也没有加入限流电阻，震荡之后，会把vdd直接带飞，坏了不少片子，当时买的单价大概17元左右把很是心疼，所以这里要慎重），包括可能存在的任何瞬变。如果超过此电压，可能会损坏设备。这与之前的双极型器件形成对比，后者可在输入偏置引脚上承受高达30 V的电压。此外，由于器件中不包含内部钳位，因此必须保护VDD引脚免受可能超过20 V电平的外部源的影响。如果包含来自辅助绕组N A的启动和自举电源电压在所有线路和负载条件下都不能达到20 V以下，使用从VDD到GND的齐纳保护二极管。根据自举电源的阻抗和布置，可能需要在辅助绕组上串联一个电阻R_VDD，以限制流入齐纳二极管的电流。确保在所有公差和温度范围内，最小齐纳电压高于最高UVLO上限阈值。为确保不产生与噪声相关的问题，请使用陶瓷旁路电容将VDD滤波至GND。VDD引脚必须尽可能靠近GND引脚去耦。</p><h3 id="8-、VREF"><a href="#8-、VREF" class="headerlink" title="8 、VREF"></a>8 、VREF</h3><p>VREF是误差放大器以及IC中许多其他内部电路的参考电压。UCCx8C4x系列的5V参考容差为±1％。高速开关逻辑使用VREF作为逻辑电源。参考电压在内部分压为2.5 V±1％，并连接到误差放大器的同相输入，以实现精确的输出电压调节。参考电压设置内部偏置电流和阈值，用于振荡器上限和下限阈值以及过流限制阈值。输出短路电流为55 mA（最大值）。为避免设备过热和损坏，请勿将VREF拉至接地，以此作为终止开关的方法。为了提高参考稳定性并防止高速开关瞬态噪声问题，使用靠近IC封装的陶瓷电容将VREF旁路至GND。至少需要0.1μF陶瓷电容。参考上的外部负载需要额外的VREF旁路。除陶瓷电容器外，还可以使用电解电容器。</p><h2 id="功能："><a href="#功能：" class="headerlink" title="功能："></a>功能：</h2><h3 id="1、欠压锁定"><a href="#1、欠压锁定" class="headerlink" title="1、欠压锁定"></a>1、欠压锁定</h3><p>提供了三组UVLO阈值，分别具有（14.5 V和9 V），（8.4 V和7.6 V）和（7 V和6.6 V）的开启和关闭阈值。第一组主要用于离线和48V分布式电源应用，在这些应用中，较宽的磁滞允许较低的频率工作和较长的转换器软启动时间。第二组UVLO选项非常适合通常由12-VDC输入运行的高频DC-DC转换器。第三组是最新的，已添加到电池供电和便携式应用中。表2列出了各器件的最大占空比和UVLO阈值。</p><table><thead><tr><th>最大占空比</th><th>UVLO ON</th><th>UVLO Off</th><th>零件号</th></tr></thead><tbody><tr><td>100%</td><td>14.5伏</td><td>9伏</td><td>UCCx8C42</td></tr><tr><td>100%</td><td>8.4伏</td><td>7.6伏</td><td>UCCx8C43</td></tr><tr><td>100%</td><td>7伏</td><td>6.6伏</td><td>UCCx8C40</td></tr><tr><td>50%</td><td>14.5伏</td><td>9伏</td><td>UCCx8C44</td></tr><tr><td>50%</td><td>8.4伏</td><td>7.6伏</td><td>UCCx8C45</td></tr><tr><td>50%</td><td>7伏</td><td>6.6伏</td><td>UCCx8C41</td></tr></tbody></table><h3 id="2、电流检测和过流限制"><a href="#2、电流检测和过流限制" class="headerlink" title="2、电流检测和过流限制"></a>2、电流检测和过流限制</h3><p>外部串联电阻（R CS）用来检测电流并将该电流转换为电压，该电压成为CS引脚的输入，使用I SENSE=Vcs/Rcs来确定峰值I SENSE电流。CS引脚是PWM比较器的同相输入。将CS输入与差分放大器的同向输出电压的信号进行比较；电流检测放大器的增益通常为3 V / V。V CS的典型值为1V 。可能需要一个小的RC滤波器（R CSF和C CSF）来抑制由次级侧二极管的反向恢复或等效电容负载引起的开关瞬变，除了寄生电路阻抗。该滤波器的时间常数应大大小于转换器的开关周期。</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/isense_circuit_slus458.gif" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/isense_circuit_slus458.gif" class="lazyload"></a><br>电流检测电路的原理</p><p>在PWM比较器上执行的逐周期脉宽调制的本质上是将差分放大器的输出与电流检测输入进行比较。这不是直接的电压比，因为差分放大器输出网络在连接到PWM比较器之前将两个二极管与一个电阻分压器网络串联在一起。两二极管压降会增加一个偏置电压，该偏置电压可实现低放大器输出的零占空比。2R / R电阻分压器有助于更宽泛的误差放大器输出摆幅的使用，该摆幅可以更对称地集中在2.5V同相输入电压上。</p><p>与差分放大器的PWM比较器输入相关的1V齐纳二极管不是该器件设计中的实际二极管，而是最大电流检测输入幅度为1 V（典型值）的指示。达到此阈值时，无论误差放大器的输出电压如何，都会出现逐周期电流限制，并且输出脉冲宽度在35 ns（典型值）内终止。该电流限制阈值的最小值为0.9 V，最大值为1.1V。除了此参数的公差之外，还必须考虑电流检测电阻或电流检测电路的精度。在确定所有功率半导体和磁性元件的额定值和最坏情况时，建议考虑一次和二次电流的最坏情况。</p><h3 id="3、振荡器同步"><a href="#3、振荡器同步" class="headerlink" title="3、振荡器同步"></a>3、振荡器同步</h3><p>通过将定时电容电压强制高于振荡器内部上限，可以最好地实现同步。一个小电阻与C CT串联到GND。该电阻器用作同步脉冲的输入，该同步脉冲将C CT电压升高到振荡器的内部上限阈值以上。允许PWM以R RT和C CT设置的频率运行，直到出现同步脉冲。该方案具有几个优点，包括使本地斜坡可用于斜率补偿。必须将UCCx8C4x振荡器的频率设置为低于同步脉冲流的频率，通常将其设置为20％，并在电阻两端施加0.5V脉冲。</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/sync_circuit_slus458.gif" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/sync_circuit_slus458.gif" class="lazyload"></a><br>振荡器同步电路</p><h3 id="4、软启动"><a href="#4、软启动" class="headerlink" title="4、软启动"></a>4、软启动</h3><p>软启动是一种通过以零为起点缓慢增加有效占空比并逐渐上升的方式，以良好控制的方式逐渐为转换器供电的技术。PWM启动后，误差放大器的反相输入为低电平，命令误差放大器的输出变为高电平。放大器的输出级通常可提供1 mA的电流，足以驱动大多数高阻抗补偿网络，但不足以快速驱动大型负载。通过给一个较大的大于1 µF的电容充电（C SS），可以通过一个PNP晶体管连接到误差放大器的输出，从而实现软启动，如下图所示。</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/ss_slus458.gif" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/ss_slus458.gif" class="lazyload"></a></p><p>放大器流入电容器的有限充电电流转化为差分放大器输出的dv / dt限制。当PWM比较器的输入之一逐渐升高时，这直接对应于电流模式控制系统中初级电流的某个最大变化率。R SS和C SS的值必须选择使COMP引脚以受控的速率上升，从而限制功率级提供的峰值电流。在软启动间隔完成之后，电容器继续充电至VREF，从而有效地将PNP晶体管从电路考虑中移除。在电流模式控制系统中，软启动执行的功能与电压模式控制中执行的功能不同，通常是首选功能。在电流模式下，软启动控制峰值开关电流的上升。在电压模式控制下，无论初级电流或上升速率如何，软启动都会逐渐扩大占空比。</p><p>电阻R SS和二极管的目的是，在正常运行期间，一旦软启动完成并且电容器已充满电，则将软启动电容器从误差放大器的路径中取出。每当PWM进入UVLO条件时，与电阻并联的可选二极管都会强制软启动，从而迫使VREF变低。如果没有二极管，则电容器会在短暂的电源中断或掉电期间保持充电状态，并且在重新施加VDD时不会启用软启动。</p><h3 id="5、启用和禁用"><a href="#5、启用和禁用" class="headerlink" title="5、启用和禁用"></a>5、启用和禁用</h3><p>有几种方法可以启用或禁用UCCx8C4x设备，具体取决于所需的重启类型。两种基本技术使用外部晶体管将误差放大器输出拉低（<2 V BE）或将电流检测输入拉高（> 1.1 V）。禁用信号的施加导致PWM比较器的输出为高。PWM锁存器以复位为主导，因此，在COMP或CS引脚的关断条件消除后，输出保持低电平直到下一个时钟周期为止。在没有软启动的情况下重启的另一种选择是将电流检测输入拉高到逐周期电流限制阈值以上。可以使用从基准电压到电流检测输入的逻辑电平P沟道FET。</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/shutdown_ckt_slus458.gif" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/shutdown_ckt_slus458.gif" class="lazyload"></a></p><p>禁用电路</p><h3 id="6、坡度补偿"><a href="#6、坡度补偿" class="headerlink" title="6、坡度补偿"></a>6、坡度补偿</h3><p>使用电流模式控制时，需要使用斜率补偿来稳定占空比超过50％的整个环路。尽管不是必需的，但斜率补偿还可以在最大占空比低于50％的情况下提高应用的稳定性。通过将振荡器波形的一部分注入实际感测的初级电流来引入斜率补偿。这两个信号在滤波电容器的电流检测输入（CS）连接处相加。为了最大程度地减少振荡器上的负载，最好用一个小晶体管来缓冲定时电容器的波形，该小晶体管的集电极连接到参考电压。</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/slope_compensation_slus458.gif" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/slope_compensation_slus458.gif" class="lazyload"></a></p><h3 id="7、电压模式"><a href="#7、电压模式" class="headerlink" title="7、电压模式"></a>7、电压模式</h3><p>在某些应用中，出于多种原因，电压模式控制可能是首选的控制策略。电压模式控制可通过任何电流模式控制器轻松执行，尤其是UCCx8C4x系列成员。要实现，需要生成一个0V至0.9V的锯齿形信号，以输入到电流检测引脚（CS），这也是PWM比较器的一个输入。将其与PWM比较器另一输入端的分频误差放大器输出电压进行比较。随着误差放大器输出的变化，它在不同的时间点与锯齿波形相交，从而产生不同的脉冲宽度。这是一种线性生成宽度与误差电压成比例的脉冲的简单方法。</p><p>通过使用一部分振荡器定时电容器（C CT）波形，可以实现电压模式控制。如下图所示：</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/voltagemode_slus458.gif" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/voltagemode_slus458.gif" class="lazyload"></a></p><p>它可以被细分并馈送到电流检测引脚。必须选择振荡器的时序分量，使其尽可能接近线性锯齿波形。尽管定时电阻呈指数充电，但较大的定时电阻值和较小的定时电容值有助于近似更线性的波形。一个小晶体管用于缓冲电阻分压器网络负载中的振荡器定时分量。由于振荡器的较低时序阈值存在偏移，因此添加了一个隔直电容。</p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><h3 id="实例1"><a href="#实例1" class="headerlink" title="实例1"></a>实例1</h3><p>UCCx8C4x控制器是峰值电流模式脉冲宽度调制器。这些控制器具有一个板载放大器，可用于隔离和非隔离电源设计中。板上有一个图腾柱栅极驱动器，能够提供1 A的峰值电流。这是一种高速PWM，能够以高达1 MHz的开关频率工作。下图显示了典型的离线应用电路。</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/typ_offline_app.gif" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/typ_offline_app.gif" class="lazyload"></a></p><h3 id="实例2"><a href="#实例2" class="headerlink" title="实例2"></a>实例2</h3><p>UCC28C42在离线反激式转换器中的典型应用下图所示。</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/application_sch_new_slus458.gif" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/application_sch_new_slus458.gif" class="lazyload"></a></p><p>UCC28C42使用内部电流控制环路，该环路包含一个小电流检测电阻器，用于检测初级电感器的电流斜坡。该电流检测电阻器将电感器电流波形转换为电压信号，该电压信号直接输入到初级侧PWM比较器中。该内部环路确定对输入电压变化的响应。外部电压控制环路涉及将输出电压的一部分与误差放大器输入端的参考电压进行比较。在离线隔离应用中使用时，隔离输出的电压反馈可使用次级侧误差放大器和可调电压基准（例如TL431）来实现。误差信号使用光隔离器跨越一次隔离到二次隔离边界，其光收集器连接到VREF引脚，发射极连接到FB。外部电压控制环路确定对负载变化的响应。</p></body></html>]]></content>
      
      
      <categories>
          
          <category> 硬件 </category>
          
          <category> 电源 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 硬件 </tag>
            
            <tag> 电源 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开关电源——输入瞬态电压保护</title>
      <link href="/posts/1708959747/"/>
      <url>/posts/1708959747/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h2 id="说在前面的话"><a href="#说在前面的话" class="headerlink" title="说在前面的话"></a>说在前面的话</h2><p>尽管各种开关变换技术在电路设计上存在很大的不同，但是经过多年的发展，都具备相似的基本功能特性，成为普遍接受的工业标准，不论设计方案和电路如何，设计者在确定设计之前必须考虑的标准的所有细节， 否则在设计和开发结束时再去增加一些细微的、曾被忽略的功能往往是非常困难的。</p><h2 id="基本概念："><a href="#基本概念：" class="headerlink" title="基本概念："></a>基本概念：</h2><p>离线（direct-off-line)开关电源 ：“离线”（direct-off-line)开关电源之所以得其名，是因为它直接由交流电源供电，而不采用线性电源常用的、体积庞大的50~60Hz低频隔离变压器。</p><h2 id="交流电力线的浪涌保护"><a href="#交流电力线的浪涌保护" class="headerlink" title="交流电力线的浪涌保护"></a>交流电力线的浪涌保护</h2><p>随着“离线”开关电源中灵敏电子基本控制电路的使用，人们已更普遍地认识到交流供电输入电线的瞬变浪涌保护和必要性。</p><p>IEEE多年的测量结果展示了统计基础上各种人为或自然的电气现象发生的频率、典型辐维和波形数据。这些发现发表在IEEE 587-1980标准，见表1.2.1.这些工作为交流输入电线的瞬变浪涌保护设备的设计提供基础。<br><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/KcP4pNoRwGV5Aml.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/KcP4pNoRwGV5Aml.jpg" class="lazyload"></a></p><p>1、在高阻抗的测试样品或负载电路中，电压表现为浪涌电压。在仿真测试中，采用测试发生器的开路电压值。<br>2、在低阻抗的测试样品或负载电路中，电流表现为浪涌的放电电流（而不是电力系统的短路电流），在仿真测试中，采用测试发生器的短路电流值。<br>3、有不同的钳位电压的其他抑制器会接收不同的能量水平。<br><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/j8u5Eezd9HWLr2a.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/j8u5Eezd9HWLr2a.png" class="lazyload"></a></p><h2 id="（1）A类别："><a href="#（1）A类别：" class="headerlink" title="（1）A类别："></a>（1）A类别：</h2><p>输出端和长分支电路。这是最低应力的类别，适用于以下场合。<br>a.距 B类电力线超过10M（30ft)并采用14-10号线的所有引出线。<br>b.距电源输入超过20M(60ft)并采用14-10号线的所有引出 线。在这些远离接线端的位置，电压应力可达6KV，但电流应力相对低，最大只能达到200A。</p><h2 id="（2）B类别："><a href="#（2）B类别：" class="headerlink" title="（2）B类别："></a>（2）B类别：</h2><p>主馈电和短分支电路。这一类别包括 开关电源中所能见到的最高应力的场合。它应用于下面的场合。<br>a.配电屏装置<br>b.工厂中的总线和馈电系统<br>c.商用大楼的照明系统<br>注意：B类位置更接近于用户引入线。所受电压应力与A类别相似，但电流可达到300A。</p><h2 id="（3）C类别："><a href="#（3）C类别：" class="headerlink" title="（3）C类别："></a>（3）C类别：</h2><p>户外和用户引入线。这种位置在户外。非常高应力的情况都会发生，因为线距和绝缘间隔很大，并且闪络电压将会超过6KV，好在大多数开关电源都处于部分地受到保护的室内环境内的A或B类别位置，通常只需要保护A类和B类别应力的场合。</p><p>大多数室内配电屏和插座连接器在高于6KV或稍低于6KV电压时会引起火花，这些加上配电屏系统固有的电阻，使室内的应力状态限制在低得多的水平。<br>在 开关电源要进行浪涌保护的地方，应清楚地了解保护的类别，其归类应于预 期的位置一致。因为B类别位置保护装置比较大，价格比较高，所以除非明确地要求，否则不归类 到此保护 类别。<br>在全分布式开关电源系 统中要保护一些 开关电源，通常采用菜用一个总保护，可在全部系统的供电 输入线处安装一个瞬变浪流保护器。</p><h2 id="措施"><a href="#措施" class="headerlink" title="措施"></a>措施</h2><p>在低强度的A类场合，普遍地采用硅压敏电阻与瞬态抑制二极管、滤波电感和电容结合使。在更高功率地B类别场合，这些器件与更高额定电流地气体放电管或火花间隙配合使用，当使用气体放电装置时，也可以安装快速响应地熔断器或断路器。</p><h3 id="1、金属氧化物压敏电阻（MOV）："><a href="#1、金属氧化物压敏电阻（MOV）：" class="headerlink" title="1、金属氧化物压敏电阻（MOV）："></a>1、金属氧化物压敏电阻（MOV）：</h3><p>表现为电压依赖的电阻特性。在转变电压之下时，该器件具有高电阻和很小的负载。当两端电压超过转变电压时，其电阻急剧减小，而电流急剧增大。</p><p>优点：1）低成本。2）相当高的瞬变能量吸收能力。</p><p>缺点：在反复的过压下会逐渐老化并具有相当大的动态电阻。</p><h3 id="2、瞬态保护二极管（TVS-："><a href="#2、瞬态保护二极管（TVS-：" class="headerlink" title="2、瞬态保护二极管（TVS)："></a>2、瞬态保护二极管（TVS)：</h3><p>分为单向和双向两种。硅瞬态保护二极管由一个为高瞬变能力而配置地雪崩电压钳位器件构成。在双极型保护器中，采用两个结背对背地串联连接，而一个雪崩二极管在正向表现为一个普通二极管的特性。</p><p>优点：1）钳位动作非常快速，雪崩条件能在几个纳秒内建立。2）导通范围内的动态电阻非常低。</p><p>缺点：1）价格高（当热这个不是它的缺点，是我们的缺点😭）2）电流容量有限</p><h3 id="3、充气浪涌放电器："><a href="#3、充气浪涌放电器：" class="headerlink" title="3、充气浪涌放电器："></a>3、充气浪涌放电器：</h3><p>大得多的瞬变电流可由各种气体放电抑制器进行处理。在这类抑制器中，两个或更多的电极在密封的高压惰性气体环境里被精确地设置了间距，当电器两端电压超过起弧电压时，电极之间首先发生电离辉光放电，随着电流地增大，会产生电弧放电，这就为所有的内部电极之间提供了一条低阻抗的通道。</p><p>优点：1）有效短路电源，内部损耗较小。</p><p>缺点：1）对过压应力的反应速度相对慢。2）当瞬变过程结束时仍有维持导通的倾向。</p><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/bpwNYSEcWyalsPG.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/bpwNYSEcWyalsPG.jpg" class="lazyload"></a><br>具有噪声滤波器的交流电源火线—中线与交流电源线—地线的瞬变保护电路（使用了MOV、电涌放电器（SVP）和瞬变保护二极管（TVS）适用于中高功率的应用场合。</p></body></html>]]></content>
      
      
      <categories>
          
          <category> 硬件 </category>
          
          <category> 电源 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 硬件 </tag>
            
            <tag> 电源 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电源设计的优先级</title>
      <link href="/posts/2420910988/"/>
      <url>/posts/2420910988/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>排在优先级第一位的是电源的设计方向。对于磁芯而言，大的设计方向有4个，但是电源的设计方向会多一些，下面我列出了6个方向。</p><h2 id="设计方向一：极限尺寸"><a href="#设计方向一：极限尺寸" class="headerlink" title="设计方向一：极限尺寸"></a>设计方向一：极限尺寸</h2><p>例如Anker 30W PD充电器就做了一次极限小体积，把尺寸做到了最小，但是代价就是价格昂贵。</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/20190607_104264_b60fb31d2ca3506fea290XVSwonReYfx-768x1289.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/20190607_104264_b60fb31d2ca3506fea290XVSwonReYfx-768x1289.jpg" class="lazyload"></a></p><p>这里需要注意的是，极限体积下面还有一个小的设计方向——极限厚度，平板电视这类应用就是对电源的厚度有着非常严格的要求，所以有了平面变压器，PCB变压器这类的设计方案。</p><p>我们许多的电源应用都是限制尺寸设计方案，我们设计电源都会被各种要求尺寸尽可能小，能够适合一些特殊的外壳设计，这也是现代电源设计最常用的一个设计方案。</p><h2 id="设计方向二：极限低成本"><a href="#设计方向二：极限低成本" class="headerlink" title="设计方向二：极限低成本"></a>设计方向二：极限低成本</h2><p>说起这个，我们第一想到的就是大街小摊上随处可见的售价不足15元的山寨5V/1A的充电头。大家千万不要笑话，那个电路绝对是一个行业顶级工程师设计的，当然，之后抄作业的不算。虽然它什么安全标准都不符合，性能也一塌糊涂，但是它依然实现了基本功能，并且很赚钱，当然我不会建议大家学习这样的设计，毕竟这样的东西可能会毁掉一个行业。如何在符合安全标准的前提下尽可能的降低成本，这才是我们要学习的一个课题。</p><p>曾经我淘了一批（5、6个）这样的设计（电子垃圾）（有机会记录记录捡垃圾的事情），最后成交价格三块一个全新未拆封（当然还有可以一块钱可以拿下的东西，那个在用料上就已经看出低劣的特性了），拆解了一个，仔细看过电路（也没啥好看的），你会惊叹这个设计，当然我还是大胆的把它接上电，长时间给我的音响供电，基本功能还是可以的，如果没有保护措施，不建议使用该类产品，更不建议使用该类产品给贵重设备供电，比如手机之类的。毕竟马有失蹄的时候，这类产品出现问题的可能性要远远超过正规产品。</p><h2 id="设计方向三：极限高低温"><a href="#设计方向三：极限高低温" class="headerlink" title="设计方向三：极限高低温"></a>设计方向三：极限高低温</h2><p>许多应用需要相对较宽的环境温度容忍度，于是就有了宽温磁芯和宽温电容的市场。但是很多时候，我们电源设计的时候都会忽略这条标准。例如丰田混合动力汽车普锐斯的电源系统，报价乍一看很贵，但是如果你仔细去核算一下宽温设计成本，就会发现报价其实是合理的。而且宽温设计对散热和电源转换效率都提出了很高的要求，这些要求最终就体现在体积和价格上。</p><h2 id="设计方向四：极限输入电压"><a href="#设计方向四：极限输入电压" class="headerlink" title="设计方向四：极限输入电压"></a>设计方向四：极限输入电压</h2><p>由于电源的波动问题，许多应用环境是需要宽电压输入的，那宽电压设计的代价是什么呢？依然是体积和价格，而且宽电压设计会使变压器的利用率显著下降。许多人都会问，某某磁芯实际能做输出功率多大的电源？但是在不知道输入电压范围，不知道工作温度，也不知道客户能够承受的报价时，我们是没有办法说出某某磁芯能够对应的输出功率的。</p><h2 id="设计方向五：高可靠性"><a href="#设计方向五：高可靠性" class="headerlink" title="设计方向五：高可靠性"></a>设计方向五：高可靠性</h2><p>高可靠性其实是一个很模糊的定义。高可靠性究竟是什么？CQC认证？高EMC成绩？有人可能会说，电源用着不炸。那么什么才能保证你的电源不炸呢？没人敢给出明确的答案。</p><p>这里分享一个金升阳培训大会上的一个小故事，金升阳以前的电源推荐设计，使用的都是10k471压敏电阻。但不幸的是，总有个别地方会炸，数量并不多，一直查不出原因，最后改用了10k561型号的压敏电阻，问题彻底解决了。两者的区别只有压敏电阻不同，一个470v，一个560v，在正常的浪涌测试下，10卡71成绩更好，以为压敏电压低，可以吸收更多的浪涌，但是就是这款浪涌成绩更好的10k471最终成了设备故障的原因</p><p>因为压敏电阻其实是一次性器件，许多小的电压冲击虽然不能让压敏电阻彻底毁坏，但是会造成积累性的物理损伤，最终导致压敏电阻炸毁，虽然压敏电阻称职的完成了自己的使命，但是顾客不满意了，因为电源炸了，要修了。所以最后大家都换上了10k561压敏电阻。</p><p>高可靠性是评价一位工程师是否有经验的地方，是看不见的价值，也是最容易被忽略的地方，那技术指标是不是不重要了呢？当然不是，技术指标依然是必须要追求的硬指标。</p><h2 id="设计方向六：高可生产性"><a href="#设计方向六：高可生产性" class="headerlink" title="设计方向六：高可生产性"></a>设计方向六：高可生产性</h2><p>可生产性可能是许多人忽视的内容，行业内有专业设计电源经验的工程师非常紧俏，多数人设计电源是新手上路（我当然也是这个行列里面的），把电源当作数字电路板设计，这肯定是要吃苦头的。其实不管设计什么电路，我们首先要知道自己工厂的加工工艺如何，这就是所谓的可生产性和可制造性。</p></body></html>]]></content>
      
      
      <categories>
          
          <category> 硬件 </category>
          
          <category> 电源 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 硬件 </tag>
            
            <tag> 电源 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开关电源主电路拓扑—Boost</title>
      <link href="/posts/3787596451/"/>
      <url>/posts/3787596451/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>Boost变换器又称升压变换器、并联开关电路、三端开关型升压稳压器。</p><h2 id="线路组成"><a href="#线路组成" class="headerlink" title="线路组成"></a>线路组成</h2><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/4567.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/4567.png" class="lazyload" title></a></p><p>如图所示：电路由占空比为D的晶体管T，二极管D1，电感L和电容C组成的Boost变换器电路图。电路实现的功能为：把Vs升压到Vo。</p><h2 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h2><p>为了方便分析稳态特性、简化推导公式的过程，特作如下假定：</p><p>（1）开关晶体管、二极管均是理想元件、也就是可以快速地“导通”和“截止”，且导通时电压降为零，截止时漏电流为零。<br>（2）电感、电容是理想元件。电感工作在线性区而未饱和，寄生电阻为零，电容的等效串联电阻为零。<br>（3）输出电压中的纹波电压与输出电压的比值小到允许忽略</p><h2 id="工作过程"><a href="#工作过程" class="headerlink" title="工作过程"></a>工作过程</h2><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/9876.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/9876.png" class="lazyload" title></a><br>Boost变换器电路的工作过程<br>当晶体管T导通时，电路如上图（a）所示，电流iL流过电感线圈L，电流线性增加电能以磁能的形式储存在电感线圈L中，此时，电容C放电，R上流过电流Io。R两端为输出电压Vo，极性上正下负。由于晶体管导通，二极管阳极接Vs负极，二极管承受反向电压，所以电容不能通过开关管放电。</p><p>当晶体管T关断时，电路如上图（b）所示，由于线圈L中的磁场将改变线圈L两端的电压极性，以保持 iL不变，这样线圈L磁能转化成电压VL与电源Vs串联，以高于Vo的电压向电容C、负载R供电。高于Vo时，电容有充电电流，等于Vo时，充电电流为零，当Vo有下降趋势时，电容向负载R放电，维持Vo不变。</p><p>由于VL+Vs向负载R供电时，Vo高于Vs，故称其为升压变换器。工作中输入电流is=iL是连续的。但是流经二极管D1电流是脉动的，由于有电容C的存在，负载R上仍有稳定、连续的负载电流Io。</p><h2 id="电路各点的波形"><a href="#电路各点的波形" class="headerlink" title="电路各点的波形"></a>电路各点的波形</h2><p>按iL在周期开始时是否从零开始，可以分为连续工作状态和不连续工作状态两种模式，波形分别如下图。</p><p>在iL连续工作状态，开关周期Ts最后的时刻电流Is值就是下一周期的开始值，但是如果电感量太小，电流线性下降快，即在电感中能量释放完时，尚未达到晶体管重新导通的时刻，因而能量得不到及时的补充，这样就会出现电流不连续的工作状态。再要求相同功率输出时，此晶体管和二级管的最大瞬时电流比连续状态下要大，同时输出直流电压的纹波也增加。</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/1.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/1.png" class="lazyload" title></a><br>电感电流连续<br><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/4.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/4.png" class="lazyload" title></a><br>电感电流不连续<br>在连续状态下，输入电流不是脉动的，纹波电流随L增加而减小。不连续工作状态，输入电流iL是脉动的。晶体管输出电流iT不管连续或不连续工作方式总是脉动的。而且，峰值电流比较大。另外，在不连续时，D3*Ts的时间内，L从输出端脱离，这时只有电容C向负载提供所需的能量，因此，要求比较大的电容C，才能适应输出电压、电流纹波小的要求。</p></body></html>]]></content>
      
      
      <categories>
          
          <category> 硬件 </category>
          
          <category> 电源 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 硬件 </tag>
            
            <tag> 电源 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开关电源主电路拓扑—Buck</title>
      <link href="/posts/1840790501/"/>
      <url>/posts/1840790501/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>Buck变换器又称为降压变换器，串联开关稳压电源、三端开关型降压稳压器。</p><h2 id="线路组成"><a href="#线路组成" class="headerlink" title="线路组成"></a>线路组成</h2><p>如图所示，由占空比为D的晶体管Tr，二极管D1，电感L和电容C组成的Buck变换器电路图。电路实现的功能为：把Vs转换成Vo。<br><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/SgzbCG53PZ89Etv.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/SgzbCG53PZ89Etv.png" class="lazyload" title></a></p><h2 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h2><p>为了方便分析稳态特性、简化推导公式的过程，特作如下假定：</p><p>（1）开关晶体管、二极管均是理想元件、也就是可以快速地“导通”和“截止”，且导通时电压降为零，截止时漏电流为零。<br>（2）电感、电容是理想元件。电感工作在线性区而未饱和，寄生电阻为零，电容的等效串联电阻为零。<br>（3）输出电压中的纹波电压与输出电压的比值小到允许忽略。</p><h2 id="工作过程"><a href="#工作过程" class="headerlink" title="工作过程"></a>工作过程</h2><p>当晶体管Tr导通时，如图所示 流过电感线圈L 的电流：iL=is，负载R上流过的电流为Io，两端的电压为Vo，极性上正下负。当is>Io时，电容在充电状态。这时二极管D1承受反向电压。<br><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/YxcjAhs2fGCU3JM.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/YxcjAhs2fGCU3JM.png" class="lazyload" title></a></p><p>经过tON时间（tON为晶体管打开的时间）后，晶体管Tr截止，电路如下图，由于线圈L的电流不能突变，产生了反电动势，线圈两端的极性改变，负载R两端仍然是上正下负。在iL<io时，电容处在放电状态，以维持io、vo不变，这时二极管正向偏置，流经的电流为il（所以叫其续流二极管）。<br><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/WTUhre4FRYcxdjo.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/WTUhre4FRYcxdjo.png" class="lazyload" title></a></io时，电容处在放电状态，以维持io、vo不变，这时二极管正向偏置，流经的电流为il（所以叫其续流二极管）。<br></p><p>由于Vo<vs，故称其为降压变换器。工作电流在晶体管导通时is>0，在晶体管截止时is=0。但是输出电流Io在L、D、C的作用下是连续平稳的。</vs，故称其为降压变换器。工作电流在晶体管导通时is></p><h2 id="主要概念及关系式"><a href="#主要概念及关系式" class="headerlink" title="主要概念及关系式"></a>主要概念及关系式</h2><p>按照电感电流iL在周期开始时是否从零开始，可以分为电感电流连续工作模式和电感电流不连续工作模式两种，波形分别如下所示</p><h3 id="1、电感电流连续模式"><a href="#1、电感电流连续模式" class="headerlink" title="1、电感电流连续模式"></a>1、电感电流连续模式</h3><p>下面分析一下晶体管导通及截止与输出电压的关系。</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/ANPDCO2vZb5xcLu.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/ANPDCO2vZb5xcLu.png" class="lazyload" title></a></p><p>设晶体管导通时间为tON=t1=D1<em>Ts，晶体管截止时间tOFF=t2-t1=D2</em>Ts（其中D1为导通占空比，D2为关断占空比，D1+D2=1，Ts为周期）<br>在输入输出不变的前提下，当晶体管导通时，波形如0~t1所示，电感电流平均值iL=Io=Vo/R。电感电流线性上升的增量为：<br><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/OCU3nPeXgcWDIhL.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/OCU3nPeXgcWDIhL.png" class="lazyload" title></a></p><p>当晶体管截止时，波形如t1~t2时间段所示，iL的电流增量为：<br><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/ziHPIF1DqXloRbj.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/ziHPIF1DqXloRbj.png" class="lazyload" title></a></p><p>由于稳态时这两个电流变化量相等，即 Δ iL1=| Δ iL2|，所以</p><p>(Vs-Vo)/L<em>D1<em>Ts=Vo/L</em>D2*Ts=Vo/L</em>(1-D1)*Ts</p><p>即Vo=Vs*D1</p><h3 id="2、电感电流不连续模式"><a href="#2、电感电流不连续模式" class="headerlink" title="2、电感电流不连续模式"></a>2、电感电流不连续模式</h3><p>当电感L较小，负载电阻较大，或Ts较大时，将出现电感电流已经降低到0，新的周期却没有开始，在新的周期内，电感电流从0开始线性增加，这种工作方式称为电感电流不连续的模式，波形如下图。</p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/1-1-1.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/1-1-1.png" class="lazyload" title></a><br>当晶体管导通时，占空比为D1 。 Δ iL1=（Vs-Vo）/L<em>D1</em>Ts<br>当晶体管截止时， Δ iL2=-Vo/ L<em>D2</em>Ts<br>由于 Δ iL1=| Δ iL2 |则：<br>（Vs-Vo）/L<em>D1</em>Ts=Vo/L<em>D2</em>Ts<br>即：Vo=D1/（D1+D2）*Vs<br>式中的D2为晶体管关断（二极管导通）时间占空比，这里D1+D2≠1</p><p>由波形图可以看出，稳态负载电流Io即是iL等腰三角形面积在Ts时间内的平均值，且Io=Vo/R。即：<br><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/D5kb9OctKV7i4wf.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/D5kb9OctKV7i4wf.png" class="lazyload" title></a></p><p><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/Dbegr1LZUyVtqnN.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/Dbegr1LZUyVtqnN.png" class="lazyload" title></a></p><h3 id="3、连续与不连续的临界条件"><a href="#3、连续与不连续的临界条件" class="headerlink" title="3、连续与不连续的临界条件"></a>3、连续与不连续的临界条件</h3><p>在连续与不连续状态之间有个临界状态，由波形图所示：<br><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/DPHB7WE8nKgrCot.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/DPHB7WE8nKgrCot.png" class="lazyload" title></a><br>连续状态 Δ iL<2*Io</p><p>临界状态 Δ iL=2*Io</p><p>不连续状态 Δ iL >2*Io</p><p>整理得 Δ iL=Vo/L<em>D2</em>Ts=Vo/R<br>即：D2<em>Ts=2</em>L/R</p><p>临界电感L=D2<em>R</em>Ts/2=Vo<em>D2<em>Ts/2/Io=Vo</em>tOFF/2/Io=Vo^2</em>(1-D1)/2/Po/fs</p><p>其中fs为开关工作频率fs=1/Ts<br>Po为变换器输出功率Po=Io*Vo</p><h3 id="4、纹波电压-Δ-Vo"><a href="#4、纹波电压-Δ-Vo" class="headerlink" title="4、纹波电压 Δ Vo"></a>4、纹波电压 Δ Vo</h3><p>流经电容的电流ic（iL-Io）对电容充电产生的电压 Δ Vo称为纹波电压，其波形如图所示：</p><p>当ic为t的线性函数时<br><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/aCjX8xADMRQIB5W.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/aCjX8xADMRQIB5W.png" class="lazyload" title></a></p><p>由临界电感公式可知，对于L和D2为固定值时，降压变换器的电流连续与否是由R值决定的。当R增大时，工作状态将从连续转化为不连续。<br>另一方面，如果R和D2*Ts是固定的，则当电感器L<临界电感时，其工作状态由连续转化为不连续。<br>当fs增大时，即Ts减小，则保持开关变换器在连续状态工作的临界电感量降低。</p></body></html>]]></content>
      
      
      <categories>
          
          <category> 硬件 </category>
          
          <category> 电源 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 硬件 </tag>
            
            <tag> 电源 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电源设计的SOR</title>
      <link href="/posts/2582721021/"/>
      <url>/posts/2582721021/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h2 id="问题一：你希望设计的开关电源的工作电压范围是多少？85-256v还是195-265v？"><a href="#问题一：你希望设计的开关电源的工作电压范围是多少？85-256v还是195-265v？" class="headerlink" title="问题一：你希望设计的开关电源的工作电压范围是多少？85-256v还是195-265v？"></a>问题一：你希望设计的开关电源的工作电压范围是多少？85-256v还是195-265v？</h2><p>如果你愿意牺牲输入电压范围，那开关电源的整体体积就会缩小，成本也会降低。如果你需要85-256v的宽电压输入，那你的产品就可以销往110v电压供电的国家。<br>我的建议是国内销售的产品完全可以用单电压电源设计方案，例如在100-115v的国家使用85-35v的输入电压，而在国内产品用195-265v的输入电压，这样不仅可以降低成本、缩小体积，更可以避免水货对当地经销商的冲击。所以很多时候，通用的设计并不一定是最优的设计。</p><h2 id="问题二：你希望设计的开关电源有几路输出？"><a href="#问题二：你希望设计的开关电源有几路输出？" class="headerlink" title="问题二：你希望设计的开关电源有几路输出？"></a>问题二：你希望设计的开关电源有几路输出？</h2><p>简单的flyback多路输出只有一路输出是稳压的，如果用DC-DC产生多路输出则会增加成本。</p><h2 id="问题三：设计的多路输出之间是否需要隔离？"><a href="#问题三：设计的多路输出之间是否需要隔离？" class="headerlink" title="问题三：设计的多路输出之间是否需要隔离？"></a>问题三：设计的多路输出之间是否需要隔离？</h2><p>多路输出隔离会增加变压器屏蔽成本，而且不容易过辐射。</p><h2 id="问题四：每路输出的电压电流是多少？"><a href="#问题四：每路输出的电压电流是多少？" class="headerlink" title="问题四：每路输出的电压电流是多少？"></a>问题四：每路输出的电压电流是多少？</h2><p>开关电源产品的实际功率越大，产品的体积就越大，价格也会越高。</p><h2 id="问题五：电源的工作温度范围是多少？"><a href="#问题五：电源的工作温度范围是多少？" class="headerlink" title="问题五：电源的工作温度范围是多少？"></a>问题五：电源的工作温度范围是多少？</h2><p>常见的电源工作温度范围选项有-40-85℃、0-70℃,电源的工作温度范围越大，体积越大，价格越贵。</p><h2 id="问题六：高低压侧是否需要隔离？"><a href="#问题六：高低压侧是否需要隔离？" class="headerlink" title="问题六：高低压侧是否需要隔离？"></a>问题六：高低压侧是否需要隔离？</h2><p>有非隔离的AC-DC方案，而且价格也很便宜，不用定做变压器，用现成得到电感就可以。例如<br><a href="https://www.alldatasheet.com/view.jsp?Searchword=LNK302" target="_blank" rel="noopener" title="datasheet">lnk302芯片</a>其电路体积就比隔离电源小很多，而且设计快，占很多优势。</p><h2 id="问题七：高低压侧的隔离电压是多少？"><a href="#问题七：高低压侧的隔离电压是多少？" class="headerlink" title="问题七：高低压侧的隔离电压是多少？"></a>问题七：高低压侧的隔离电压是多少？</h2><p>隔离电压越高，变压器越贵，体积会越大，电源模块的总体积也越大，而且宽脚距的光耦也比普通的光耦要贵一些。</p><h2 id="问题八：对电源的尺寸有什么要求？"><a href="#问题八：对电源的尺寸有什么要求？" class="headerlink" title="问题八：对电源的尺寸有什么要求？"></a>问题八：对电源的尺寸有什么要求？</h2><p>电源的体积越小，价格越贵，容量越小。</p><h2 id="问题九：设计的制作工艺是什么？"><a href="#问题九：设计的制作工艺是什么？" class="headerlink" title="问题九：设计的制作工艺是什么？"></a>问题九：设计的制作工艺是什么？</h2><p>制作工艺有单面直插、正面直插正面贴片、正面直插反面贴片、一面直插两面贴片、两面直插两面贴片。<br>正面直插反面贴片最便宜，因为只需要一次波峰焊，但是需要点胶机。正面直插正面贴片次之，它需要一次回流焊，一次波峰焊。单面直插看似BOM成本最便宜，但由于人工成本居高不下，而且PCB的面积也相对最大，所以总体的设计比不划算。一面直插两面贴片是高密度设计，资金充裕时可以考虑使用，两面直插两面贴片是失败的设计，因为注定逃不掉手工焊接。<br>可能有人会问，就不能设计成全贴片的吗？回答是不能，因为大量的安规器件只允许用直插件，也只有直插件，所以AC-DC是逃不掉波峰焊的命运的。</p><h2 id="问题十：开关电源的限制功率输出温度是多少？"><a href="#问题十：开关电源的限制功率输出温度是多少？" class="headerlink" title="问题十：开关电源的限制功率输出温度是多少？"></a>问题十：开关电源的限制功率输出温度是多少？</h2><p>电源模块在极限高温和极限低温下都会有输出功率的缩水问题，一般情况下在-10~55℃会输出极限功率，超过60℃或者低于-10℃输出功率会直线下降。</p><h2 id="问题十一：开关电源的限制功率输出电压是多少？"><a href="#问题十一：开关电源的限制功率输出电压是多少？" class="headerlink" title="问题十一：开关电源的限制功率输出电压是多少？"></a>问题十一：开关电源的限制功率输出电压是多少？</h2><p>开关电源输入在极限高压和极限低压时也会有输出功率缩水的问题，一般有10%~20%的缩水。</p><h2 id="问题十二：开关电源需要通过哪些测试项目与等级？"><a href="#问题十二：开关电源需要通过哪些测试项目与等级？" class="headerlink" title="问题十二：开关电源需要通过哪些测试项目与等级？"></a>问题十二：开关电源需要通过哪些测试项目与等级？</h2><p>比如浪涌、辐射、传导、辐射抗扰度、传导抗扰度、EFT正态脉冲群、静电放电等等。需要通过的测试项目与等级级别越高，价格越贵。</p><p>EMC特性：<br><a href="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/emctexing.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/zpolte/data/img/post/emctexing.png" class="lazyload"></a></p><h2 id="问题十三：电源的转换效率有什么要求？"><a href="#问题十三：电源的转换效率有什么要求？" class="headerlink" title="问题十三：电源的转换效率有什么要求？"></a>问题十三：电源的转换效率有什么要求？</h2><p>电源转换效率越高，芯片方案越新，当然价格也越高。</p><h2 id="问题十四：电源的稳波要求如何？"><a href="#问题十四：电源的稳波要求如何？" class="headerlink" title="问题十四：电源的稳波要求如何？"></a>问题十四：电源的稳波要求如何？</h2><p>稳波要求越高，输出的固态电容越多，体积越大，价格越高。</p><h2 id="问题十五：设计中是否接受塑料挡墙？"><a href="#问题十五：设计中是否接受塑料挡墙？" class="headerlink" title="问题十五：设计中是否接受塑料挡墙？"></a>问题十五：设计中是否接受塑料挡墙？</h2><p>许多电源为了安规距离无法达到的极限尺寸，会使用塑料挡墙来提高安规间距。</p><h2 id="问题十六：是否接受独立金属散热片？"><a href="#问题十六：是否接受独立金属散热片？" class="headerlink" title="问题十六：是否接受独立金属散热片？"></a>问题十六：是否接受独立金属散热片？</h2><p>增加散热片就意味着一堆工艺的加入，尤其是那种定尺寸外形的金属散热片，不仅需要机械工程师定做，还增加了人工安装的工时，所以许多40W左右的电源为了避免使用散热片，宁愿买一些贵一些的高效率芯片解决问题。</p><h2 id="问题十七：能接受的最终产品报价是多少？"><a href="#问题十七：能接受的最终产品报价是多少？" class="headerlink" title="问题十七：能接受的最终产品报价是多少？"></a>问题十七：能接受的最终产品报价是多少？</h2><p>这个问题可能让很多人心里没有底，但是我需要提醒大家，千万不要按照淘宝上卖的产品去估价。</p><h2 id="问题十八：能接受的产品加工工时是多久？"><a href="#问题十八：能接受的产品加工工时是多久？" class="headerlink" title="问题十八：能接受的产品加工工时是多久？"></a>问题十八：能接受的产品加工工时是多久？</h2><p>在需要爆量的时候，这是必须要考虑的问题。</p><h2 id="问题十九：研发时间多长？"><a href="#问题十九：研发时间多长？" class="headerlink" title="问题十九：研发时间多长？"></a>问题十九：研发时间多长？</h2><p>甲方要求的工期越短，单位时间工作量越大，工程价格就越贵，而且是以指数关系增长的。（这里吐槽一下，每一个电源的设计都是根据需求单独定制的，不同的设计之间虽有可以借鉴的地方，但是必要的研发工时是不可缺少的，同时研发的难度也是不降低的，并不是说之前做成功了一个电源，那么所有的电源设计就没有问题了，可以信手拈来，分分钟钟搞定）</p><h2 id="问题二十：研发成本有多少？"><a href="#问题二十：研发成本有多少？" class="headerlink" title="问题二十：研发成本有多少？"></a>问题二十：研发成本有多少？</h2><p>研发是需要成本的，愿意花费的代价是必须要思考且无法避免的问题。</p><h2 id="问题二十一：设计的电源需求是否明确？"><a href="#问题二十一：设计的电源需求是否明确？" class="headerlink" title="问题二十一：设计的电源需求是否明确？"></a>问题二十一：设计的电源需求是否明确？</h2><p>这个是一个最重要的问题，所以放到最后来说，在设计电源之初，就要把所有的需求、要求、限制都明确，并且要考虑到极限的情况，如果需求变更，需要从头来评估整体的方案，而不是在设计了一半的基础上去调整，来应对需求的变更。</p></body></html>]]></content>
      
      
      <categories>
          
          <category> 硬件 </category>
          
          <category> 电源 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 硬件 </tag>
            
            <tag> 电源 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EMC（电磁兼容性）</title>
      <link href="/posts/402795366/"/>
      <url>/posts/402795366/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>电磁兼容性EMC是指设备或系统在其电磁环境中能正常工作且不对该环境中任何事物构成不能承受电磁骚扰的能力。传感器电磁兼容性是指传感器在电磁环境中的适应性，保持其固有性能、完成规定功能的能力。它包含两个方面要求：一方面要求传感器在正常运行过程中对所在环境产生电磁干扰不能超过一定限值;另一方面要求传感器对所在环境中存在电磁干扰具有一定程度抗扰度。</p><p>电磁兼容是研究在有限的空间、时间、频谱资源条件下，各种用电设备（广义还包括生物体）可以共存，并不致引起降级的一门学科。它包括电磁干扰和电磁敏感度两部分，电磁干扰测试是测量被测设备在正常工作状态下产生并向外发射的电磁波信号的大小来反应对周围电子设备干扰的强弱。电磁敏感度测试是测量被测设备对电磁骚扰的抗干扰的能力强弱 。</p><h2 id="电磁兼容测试项目"><a href="#电磁兼容测试项目" class="headerlink" title="电磁兼容测试项目"></a>电磁兼容测试项目</h2><p>传导conduction emission （9kHz-30MHz）<br>功率辐射power clamp （30MHz-300MHz）<br>磁场辐射magnetic emission（9kHz-30MHz）<br>空间辐射radiated emission（30MHz-18GHz）<br>断续传导干扰click<br>谐波harmonics class a,b ,c,d<br>电压闪烁flicker plt .pst<br>静电ESD （±0.1-±16.5kV）<br>辐射抗扰度（1GHz以下）<br>快速脉冲群EFT/B （±0.1-±4.4kV）<br>浪涌surge （0.1-6.6kV）<br>传导抗扰度CS（0.1-30V）<br>抗磁场干扰MS（0-120A/m）<br>断电Dips（0%-100%）<br>振荡波浪涌 Oscillatory Waves Surge 0.1-6.6kV 波形100kHz<br>谐波、谐间波抗干扰 Harmonic、interharmonic immunity<br>磁场EFM 10Hz-400kHz （EN50366）</p><h2 id="EMC技术的国家标准（电磁兼容国标、EMC国标）"><a href="#EMC技术的国家标准（电磁兼容国标、EMC国标）" class="headerlink" title="EMC技术的国家标准（电磁兼容国标、EMC国标）"></a>EMC技术的国家标准（电磁兼容国标、EMC国标）</h2><h3 id="基础类标准"><a href="#基础类标准" class="headerlink" title="基础类标准"></a>基础类标准</h3><p>GB/T 4365–2003 电磁兼容术语<br>GB/T 6113–2018 无线电干扰和抗扰度测量设备规范<br>GB/T 15658–2012 无线电噪声测量方法</p><h3 id="通用类标准"><a href="#通用类标准" class="headerlink" title="通用类标准"></a>通用类标准</h3><p>GB 8702–2014 电磁环境控制限值<br>GB/T 17626.1-2006 电磁兼容 试验和测量技术 抗扰度试验总论<br>GB/T 17626.2-2018 电磁兼容 试验和测量技术 静电放电抗扰度试验<br>GB/T 17626.3-2016 电磁兼容 试验和测量技术 射频电磁场辐射抗扰度试验<br>GB/T 17626.4-2018 电磁兼容 试验和测量技术 电快速瞬变脉冲群抗扰度试验<br>GB/T 17626.5-2008 电磁兼容.试验和测量技术.浪涌(冲击)抗扰度试验<br>GB/T 17626.5-2019 电磁兼容 试验和测量技术 浪涌（冲击）抗扰度试验<br>GB/T 17626.6-2017 电磁兼容 试验和测量技术 射频场感应的传导骚扰抗扰度<br>GB/T 17626.7-2017 电磁兼容 试验和测量技术 供电系统及所连设备谐波、间谐波的测量和测量仪器导则<br>GB/T 17626.8-2006 电磁兼容 试验和测量技术 工频磁场抗扰度试验<br>GB/T 17626.9-2011 电磁兼容.试验和测量技术.脉冲磁场抗扰度试验<br>GB/T 17626.10-2017 电磁兼容 试验和测量技术 阻尼振荡磁场抗扰度试验<br>GB/T 17626.11-2008 电磁兼容.试验和测量技术.电压暂降、短时中断和电压变化的抗扰度试验<br>GB/T 17626.13-2006 电磁兼容 试验和测量技术 交流电源端口谐波、谐间波及电网信号的低频抗扰度试验<br>GB/T 17626.14-2005 电磁兼容 试验和测量技术 电压波动抗扰度试验<br>GB/T 17626.15-2011 电磁兼容.试验和测量技术.闪烁仪功能和设计规范<br>GB/T 17626.16-2007 电磁兼容 试验和测量技术 OHz～150kHz共模传导骚扰抗扰度试验<br>GB/T 17626.17-2005 电磁兼容 试验和测量技术 直流电源输入端口纹波抗扰度试验<br>GB/T 17626.18-2016 电磁兼容 试验和测量技术 阻尼振荡波抗扰度试验<br>GB/T 17626.20-2014 电磁兼容 试验和测量技术 横电磁波(TEM)波导中的发射和抗扰度试验<br>GB/T 17626.21-2014 电磁兼容 试验和测量技术 混波室试验方法<br>GB/T 17626.22-2017 电磁兼容 试验和测量技术 全电波暗室中的辐射发射和抗扰度测量<br>GB/T 17626.24-2012 电磁兼容.试验和测量技术.HEMP传导骚扰保护装置的试验方法<br>GB/T 17626.27-2006 电磁兼容 试验和测量技术 三相电压不平衡抗扰度试验<br>GB/T 17626.28-2006 电磁兼容 试验和测量技术 工频频率变化抗扰度试验<br>GB/T 17626.29-2006 电磁兼容 试验和测量技术 直流电源输入端口电压暂降、短时中断和电压变化的抗扰度试验<br>GB/T 17626.30-2012 电磁兼容.试验和测量技术.电能质量测量方法<br>GB/T 17626.34-2012 电磁兼容.试验和测量技术.主电源每相电流大于16A的设备的电压暂降、短时中断和电压变化抗扰度试验<br>GB/T 14431–1993 无线电业务要求的信号/干扰保护比和最小可用场强</p><p>注：标准参考更新与2019.07</p></body></html>]]></content>
      
      
      <categories>
          
          <category> 硬件 </category>
          
          <category> EMC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 硬件 </tag>
            
            <tag> EMC </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
